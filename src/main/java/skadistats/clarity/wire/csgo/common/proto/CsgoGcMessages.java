// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cstrike15_gcmessages.proto

package skadistats.clarity.wire.csgo.common.proto;

public final class CsgoGcMessages {
  private CsgoGcMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface TournamentPlayerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TournamentPlayer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional string player_nick = 2;</code>
     */
    boolean hasPlayerNick();
    /**
     * <code>optional string player_nick = 2;</code>
     */
    java.lang.String getPlayerNick();
    /**
     * <code>optional string player_nick = 2;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNickBytes();

    /**
     * <code>optional string player_name = 3;</code>
     */
    boolean hasPlayerName();
    /**
     * <code>optional string player_name = 3;</code>
     */
    java.lang.String getPlayerName();
    /**
     * <code>optional string player_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getPlayerNameBytes();

    /**
     * <code>optional uint32 player_dob = 4;</code>
     */
    boolean hasPlayerDob();
    /**
     * <code>optional uint32 player_dob = 4;</code>
     */
    int getPlayerDob();

    /**
     * <code>optional string player_flag = 5;</code>
     */
    boolean hasPlayerFlag();
    /**
     * <code>optional string player_flag = 5;</code>
     */
    java.lang.String getPlayerFlag();
    /**
     * <code>optional string player_flag = 5;</code>
     */
    com.google.protobuf.ByteString
        getPlayerFlagBytes();

    /**
     * <code>optional string player_location = 6;</code>
     */
    boolean hasPlayerLocation();
    /**
     * <code>optional string player_location = 6;</code>
     */
    java.lang.String getPlayerLocation();
    /**
     * <code>optional string player_location = 6;</code>
     */
    com.google.protobuf.ByteString
        getPlayerLocationBytes();

    /**
     * <code>optional string player_desc = 7;</code>
     */
    boolean hasPlayerDesc();
    /**
     * <code>optional string player_desc = 7;</code>
     */
    java.lang.String getPlayerDesc();
    /**
     * <code>optional string player_desc = 7;</code>
     */
    com.google.protobuf.ByteString
        getPlayerDescBytes();
  }
  /**
   * Protobuf type {@code TournamentPlayer}
   *
   * <pre>
   * 148
   * </pre>
   */
  public static final class TournamentPlayer extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:TournamentPlayer)
      TournamentPlayerOrBuilder {
    // Use TournamentPlayer.newBuilder() to construct.
    private TournamentPlayer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TournamentPlayer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TournamentPlayer defaultInstance;
    public static TournamentPlayer getDefaultInstance() {
      return defaultInstance;
    }

    public TournamentPlayer getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TournamentPlayer(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              playerNick_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              playerName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              playerDob_ = input.readUInt32();
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              playerFlag_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              playerLocation_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              playerDesc_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentPlayer_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentPlayer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder.class);
    }

    public static com.google.protobuf.Parser<TournamentPlayer> PARSER =
        new com.google.protobuf.AbstractParser<TournamentPlayer>() {
      public TournamentPlayer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TournamentPlayer(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TournamentPlayer> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int PLAYER_NICK_FIELD_NUMBER = 2;
    private java.lang.Object playerNick_;
    /**
     * <code>optional string player_nick = 2;</code>
     */
    public boolean hasPlayerNick() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string player_nick = 2;</code>
     */
    public java.lang.String getPlayerNick() {
      java.lang.Object ref = playerNick_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerNick_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_nick = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNickBytes() {
      java.lang.Object ref = playerNick_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerNick_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYER_NAME_FIELD_NUMBER = 3;
    private java.lang.Object playerName_;
    /**
     * <code>optional string player_name = 3;</code>
     */
    public boolean hasPlayerName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string player_name = 3;</code>
     */
    public java.lang.String getPlayerName() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerNameBytes() {
      java.lang.Object ref = playerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYER_DOB_FIELD_NUMBER = 4;
    private int playerDob_;
    /**
     * <code>optional uint32 player_dob = 4;</code>
     */
    public boolean hasPlayerDob() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 player_dob = 4;</code>
     */
    public int getPlayerDob() {
      return playerDob_;
    }

    public static final int PLAYER_FLAG_FIELD_NUMBER = 5;
    private java.lang.Object playerFlag_;
    /**
     * <code>optional string player_flag = 5;</code>
     */
    public boolean hasPlayerFlag() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string player_flag = 5;</code>
     */
    public java.lang.String getPlayerFlag() {
      java.lang.Object ref = playerFlag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerFlag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_flag = 5;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerFlagBytes() {
      java.lang.Object ref = playerFlag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerFlag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYER_LOCATION_FIELD_NUMBER = 6;
    private java.lang.Object playerLocation_;
    /**
     * <code>optional string player_location = 6;</code>
     */
    public boolean hasPlayerLocation() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string player_location = 6;</code>
     */
    public java.lang.String getPlayerLocation() {
      java.lang.Object ref = playerLocation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerLocation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_location = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerLocationBytes() {
      java.lang.Object ref = playerLocation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYER_DESC_FIELD_NUMBER = 7;
    private java.lang.Object playerDesc_;
    /**
     * <code>optional string player_desc = 7;</code>
     */
    public boolean hasPlayerDesc() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string player_desc = 7;</code>
     */
    public java.lang.String getPlayerDesc() {
      java.lang.Object ref = playerDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          playerDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string player_desc = 7;</code>
     */
    public com.google.protobuf.ByteString
        getPlayerDescBytes() {
      java.lang.Object ref = playerDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        playerDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      accountId_ = 0;
      playerNick_ = "";
      playerName_ = "";
      playerDob_ = 0;
      playerFlag_ = "";
      playerLocation_ = "";
      playerDesc_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPlayerNickBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, playerDob_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPlayerFlagBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPlayerLocationBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getPlayerDescBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPlayerNickBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPlayerNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, playerDob_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPlayerFlagBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPlayerLocationBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getPlayerDescBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TournamentPlayer}
     *
     * <pre>
     * 148
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TournamentPlayer)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentPlayer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentPlayer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        playerNick_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        playerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        playerDob_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        playerFlag_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        playerLocation_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        playerDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentPlayer_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.playerNick_ = playerNick_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.playerName_ = playerName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.playerDob_ = playerDob_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.playerFlag_ = playerFlag_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.playerLocation_ = playerLocation_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.playerDesc_ = playerDesc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasPlayerNick()) {
          bitField0_ |= 0x00000002;
          playerNick_ = other.playerNick_;
          onChanged();
        }
        if (other.hasPlayerName()) {
          bitField0_ |= 0x00000004;
          playerName_ = other.playerName_;
          onChanged();
        }
        if (other.hasPlayerDob()) {
          setPlayerDob(other.getPlayerDob());
        }
        if (other.hasPlayerFlag()) {
          bitField0_ |= 0x00000010;
          playerFlag_ = other.playerFlag_;
          onChanged();
        }
        if (other.hasPlayerLocation()) {
          bitField0_ |= 0x00000020;
          playerLocation_ = other.playerLocation_;
          onChanged();
        }
        if (other.hasPlayerDesc()) {
          bitField0_ |= 0x00000040;
          playerDesc_ = other.playerDesc_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object playerNick_ = "";
      /**
       * <code>optional string player_nick = 2;</code>
       */
      public boolean hasPlayerNick() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string player_nick = 2;</code>
       */
      public java.lang.String getPlayerNick() {
        java.lang.Object ref = playerNick_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerNick_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_nick = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNickBytes() {
        java.lang.Object ref = playerNick_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerNick_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_nick = 2;</code>
       */
      public Builder setPlayerNick(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerNick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_nick = 2;</code>
       */
      public Builder clearPlayerNick() {
        bitField0_ = (bitField0_ & ~0x00000002);
        playerNick_ = getDefaultInstance().getPlayerNick();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_nick = 2;</code>
       */
      public Builder setPlayerNickBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        playerNick_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object playerName_ = "";
      /**
       * <code>optional string player_name = 3;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string player_name = 3;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_name = 3;</code>
       */
      public Builder setPlayerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        playerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_name = 3;</code>
       */
      public Builder clearPlayerName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        playerName_ = getDefaultInstance().getPlayerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_name = 3;</code>
       */
      public Builder setPlayerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        playerName_ = value;
        onChanged();
        return this;
      }

      private int playerDob_ ;
      /**
       * <code>optional uint32 player_dob = 4;</code>
       */
      public boolean hasPlayerDob() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 player_dob = 4;</code>
       */
      public int getPlayerDob() {
        return playerDob_;
      }
      /**
       * <code>optional uint32 player_dob = 4;</code>
       */
      public Builder setPlayerDob(int value) {
        bitField0_ |= 0x00000008;
        playerDob_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 player_dob = 4;</code>
       */
      public Builder clearPlayerDob() {
        bitField0_ = (bitField0_ & ~0x00000008);
        playerDob_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object playerFlag_ = "";
      /**
       * <code>optional string player_flag = 5;</code>
       */
      public boolean hasPlayerFlag() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string player_flag = 5;</code>
       */
      public java.lang.String getPlayerFlag() {
        java.lang.Object ref = playerFlag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerFlag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_flag = 5;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerFlagBytes() {
        java.lang.Object ref = playerFlag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerFlag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_flag = 5;</code>
       */
      public Builder setPlayerFlag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        playerFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_flag = 5;</code>
       */
      public Builder clearPlayerFlag() {
        bitField0_ = (bitField0_ & ~0x00000010);
        playerFlag_ = getDefaultInstance().getPlayerFlag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_flag = 5;</code>
       */
      public Builder setPlayerFlagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        playerFlag_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object playerLocation_ = "";
      /**
       * <code>optional string player_location = 6;</code>
       */
      public boolean hasPlayerLocation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string player_location = 6;</code>
       */
      public java.lang.String getPlayerLocation() {
        java.lang.Object ref = playerLocation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerLocation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_location = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerLocationBytes() {
        java.lang.Object ref = playerLocation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerLocation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_location = 6;</code>
       */
      public Builder setPlayerLocation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        playerLocation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_location = 6;</code>
       */
      public Builder clearPlayerLocation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        playerLocation_ = getDefaultInstance().getPlayerLocation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_location = 6;</code>
       */
      public Builder setPlayerLocationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        playerLocation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object playerDesc_ = "";
      /**
       * <code>optional string player_desc = 7;</code>
       */
      public boolean hasPlayerDesc() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string player_desc = 7;</code>
       */
      public java.lang.String getPlayerDesc() {
        java.lang.Object ref = playerDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerDesc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string player_desc = 7;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerDescBytes() {
        java.lang.Object ref = playerDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string player_desc = 7;</code>
       */
      public Builder setPlayerDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        playerDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_desc = 7;</code>
       */
      public Builder clearPlayerDesc() {
        bitField0_ = (bitField0_ & ~0x00000040);
        playerDesc_ = getDefaultInstance().getPlayerDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string player_desc = 7;</code>
       */
      public Builder setPlayerDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        playerDesc_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TournamentPlayer)
    }

    static {
      defaultInstance = new TournamentPlayer(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TournamentPlayer)
  }

  public interface TournamentTeamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TournamentTeam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 team_id = 1;</code>
     */
    boolean hasTeamId();
    /**
     * <code>optional int32 team_id = 1;</code>
     */
    int getTeamId();

    /**
     * <code>optional string team_tag = 2;</code>
     */
    boolean hasTeamTag();
    /**
     * <code>optional string team_tag = 2;</code>
     */
    java.lang.String getTeamTag();
    /**
     * <code>optional string team_tag = 2;</code>
     */
    com.google.protobuf.ByteString
        getTeamTagBytes();

    /**
     * <code>optional string team_flag = 3;</code>
     */
    boolean hasTeamFlag();
    /**
     * <code>optional string team_flag = 3;</code>
     */
    java.lang.String getTeamFlag();
    /**
     * <code>optional string team_flag = 3;</code>
     */
    com.google.protobuf.ByteString
        getTeamFlagBytes();

    /**
     * <code>optional string team_name = 4;</code>
     */
    boolean hasTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    java.lang.String getTeamName();
    /**
     * <code>optional string team_name = 4;</code>
     */
    com.google.protobuf.ByteString
        getTeamNameBytes();

    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer> 
        getPlayersList();
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer getPlayers(int index);
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder getPlayersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code TournamentTeam}
   *
   * <pre>
   *158
   * </pre>
   */
  public static final class TournamentTeam extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:TournamentTeam)
      TournamentTeamOrBuilder {
    // Use TournamentTeam.newBuilder() to construct.
    private TournamentTeam(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TournamentTeam(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TournamentTeam defaultInstance;
    public static TournamentTeam getDefaultInstance() {
      return defaultInstance;
    }

    public TournamentTeam getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TournamentTeam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              teamId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              teamTag_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              teamFlag_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              teamName_ = bs;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                players_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer>();
                mutable_bitField0_ |= 0x00000010;
              }
              players_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentTeam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentTeam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder.class);
    }

    public static com.google.protobuf.Parser<TournamentTeam> PARSER =
        new com.google.protobuf.AbstractParser<TournamentTeam>() {
      public TournamentTeam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TournamentTeam(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TournamentTeam> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEAM_ID_FIELD_NUMBER = 1;
    private int teamId_;
    /**
     * <code>optional int32 team_id = 1;</code>
     */
    public boolean hasTeamId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 team_id = 1;</code>
     */
    public int getTeamId() {
      return teamId_;
    }

    public static final int TEAM_TAG_FIELD_NUMBER = 2;
    private java.lang.Object teamTag_;
    /**
     * <code>optional string team_tag = 2;</code>
     */
    public boolean hasTeamTag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string team_tag = 2;</code>
     */
    public java.lang.String getTeamTag() {
      java.lang.Object ref = teamTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_tag = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTeamTagBytes() {
      java.lang.Object ref = teamTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_FLAG_FIELD_NUMBER = 3;
    private java.lang.Object teamFlag_;
    /**
     * <code>optional string team_flag = 3;</code>
     */
    public boolean hasTeamFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string team_flag = 3;</code>
     */
    public java.lang.String getTeamFlag() {
      java.lang.Object ref = teamFlag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamFlag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_flag = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTeamFlagBytes() {
      java.lang.Object ref = teamFlag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamFlag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEAM_NAME_FIELD_NUMBER = 4;
    private java.lang.Object teamName_;
    /**
     * <code>optional string team_name = 4;</code>
     */
    public boolean hasTeamName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public java.lang.String getTeamName() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          teamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string team_name = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTeamNameBytes() {
      java.lang.Object ref = teamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        teamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer> players_;
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .TournamentPlayer players = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    private void initFields() {
      teamId_ = 0;
      teamTag_ = "";
      teamFlag_ = "";
      teamName_ = "";
      players_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, teamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTeamTagBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTeamFlagBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTeamNameBytes());
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, teamId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTeamTagBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTeamFlagBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTeamNameBytes());
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TournamentTeam}
     *
     * <pre>
     *158
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TournamentTeam)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentTeam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentTeam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        teamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        teamTag_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        teamFlag_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        teamName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          playersBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentTeam_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.teamId_ = teamId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.teamTag_ = teamTag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamFlag_ = teamFlag_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamName_ = teamName_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.getDefaultInstance()) return this;
        if (other.hasTeamId()) {
          setTeamId(other.getTeamId());
        }
        if (other.hasTeamTag()) {
          bitField0_ |= 0x00000002;
          teamTag_ = other.teamTag_;
          onChanged();
        }
        if (other.hasTeamFlag()) {
          bitField0_ |= 0x00000004;
          teamFlag_ = other.teamFlag_;
          onChanged();
        }
        if (other.hasTeamName()) {
          bitField0_ |= 0x00000008;
          teamName_ = other.teamName_;
          onChanged();
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000010);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int teamId_ ;
      /**
       * <code>optional int32 team_id = 1;</code>
       */
      public boolean hasTeamId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 team_id = 1;</code>
       */
      public int getTeamId() {
        return teamId_;
      }
      /**
       * <code>optional int32 team_id = 1;</code>
       */
      public Builder setTeamId(int value) {
        bitField0_ |= 0x00000001;
        teamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 team_id = 1;</code>
       */
      public Builder clearTeamId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        teamId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object teamTag_ = "";
      /**
       * <code>optional string team_tag = 2;</code>
       */
      public boolean hasTeamTag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string team_tag = 2;</code>
       */
      public java.lang.String getTeamTag() {
        java.lang.Object ref = teamTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_tag = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTeamTagBytes() {
        java.lang.Object ref = teamTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_tag = 2;</code>
       */
      public Builder setTeamTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        teamTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_tag = 2;</code>
       */
      public Builder clearTeamTag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        teamTag_ = getDefaultInstance().getTeamTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_tag = 2;</code>
       */
      public Builder setTeamTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        teamTag_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object teamFlag_ = "";
      /**
       * <code>optional string team_flag = 3;</code>
       */
      public boolean hasTeamFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string team_flag = 3;</code>
       */
      public java.lang.String getTeamFlag() {
        java.lang.Object ref = teamFlag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamFlag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_flag = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTeamFlagBytes() {
        java.lang.Object ref = teamFlag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamFlag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_flag = 3;</code>
       */
      public Builder setTeamFlag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_flag = 3;</code>
       */
      public Builder clearTeamFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamFlag_ = getDefaultInstance().getTeamFlag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_flag = 3;</code>
       */
      public Builder setTeamFlagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        teamFlag_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object teamName_ = "";
      /**
       * <code>optional string team_name = 4;</code>
       */
      public boolean hasTeamName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public java.lang.String getTeamName() {
        java.lang.Object ref = teamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            teamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTeamNameBytes() {
        java.lang.Object ref = teamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          teamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder clearTeamName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamName_ = getDefaultInstance().getTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string team_name = 4;</code>
       */
      public Builder setTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        teamName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          players_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer>(players_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder addPlayers(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder addPlayers(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.getDefaultInstance());
      }
      /**
       * <code>repeated .TournamentPlayer players = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayer.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentPlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:TournamentTeam)
    }

    static {
      defaultInstance = new TournamentTeam(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TournamentTeam)
  }

  public interface TournamentEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:TournamentEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 event_id = 1;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional int32 event_id = 1;</code>
     */
    int getEventId();

    /**
     * <code>optional string event_tag = 2;</code>
     */
    boolean hasEventTag();
    /**
     * <code>optional string event_tag = 2;</code>
     */
    java.lang.String getEventTag();
    /**
     * <code>optional string event_tag = 2;</code>
     */
    com.google.protobuf.ByteString
        getEventTagBytes();

    /**
     * <code>optional string event_name = 3;</code>
     */
    boolean hasEventName();
    /**
     * <code>optional string event_name = 3;</code>
     */
    java.lang.String getEventName();
    /**
     * <code>optional string event_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getEventNameBytes();

    /**
     * <code>optional uint32 event_time_start = 4;</code>
     */
    boolean hasEventTimeStart();
    /**
     * <code>optional uint32 event_time_start = 4;</code>
     */
    int getEventTimeStart();

    /**
     * <code>optional uint32 event_time_end = 5;</code>
     */
    boolean hasEventTimeEnd();
    /**
     * <code>optional uint32 event_time_end = 5;</code>
     */
    int getEventTimeEnd();

    /**
     * <code>optional int32 event_public = 6;</code>
     */
    boolean hasEventPublic();
    /**
     * <code>optional int32 event_public = 6;</code>
     */
    int getEventPublic();

    /**
     * <code>optional int32 event_stage_id = 7;</code>
     */
    boolean hasEventStageId();
    /**
     * <code>optional int32 event_stage_id = 7;</code>
     */
    int getEventStageId();

    /**
     * <code>optional string event_stage_name = 8;</code>
     */
    boolean hasEventStageName();
    /**
     * <code>optional string event_stage_name = 8;</code>
     */
    java.lang.String getEventStageName();
    /**
     * <code>optional string event_stage_name = 8;</code>
     */
    com.google.protobuf.ByteString
        getEventStageNameBytes();

    /**
     * <code>optional uint32 active_section_id = 9;</code>
     */
    boolean hasActiveSectionId();
    /**
     * <code>optional uint32 active_section_id = 9;</code>
     */
    int getActiveSectionId();
  }
  /**
   * Protobuf type {@code TournamentEvent}
   *
   * <pre>
   * 166
   * </pre>
   */
  public static final class TournamentEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:TournamentEvent)
      TournamentEventOrBuilder {
    // Use TournamentEvent.newBuilder() to construct.
    private TournamentEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TournamentEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TournamentEvent defaultInstance;
    public static TournamentEvent getDefaultInstance() {
      return defaultInstance;
    }

    public TournamentEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TournamentEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventId_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              eventTag_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              eventName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              eventTimeStart_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              eventTimeEnd_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              eventPublic_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              eventStageId_ = input.readInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              eventStageName_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              activeSectionId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<TournamentEvent> PARSER =
        new com.google.protobuf.AbstractParser<TournamentEvent>() {
      public TournamentEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TournamentEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TournamentEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private int eventId_;
    /**
     * <code>optional int32 event_id = 1;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 event_id = 1;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    public static final int EVENT_TAG_FIELD_NUMBER = 2;
    private java.lang.Object eventTag_;
    /**
     * <code>optional string event_tag = 2;</code>
     */
    public boolean hasEventTag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string event_tag = 2;</code>
     */
    public java.lang.String getEventTag() {
      java.lang.Object ref = eventTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_tag = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEventTagBytes() {
      java.lang.Object ref = eventTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_NAME_FIELD_NUMBER = 3;
    private java.lang.Object eventName_;
    /**
     * <code>optional string event_name = 3;</code>
     */
    public boolean hasEventName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string event_name = 3;</code>
     */
    public java.lang.String getEventName() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getEventNameBytes() {
      java.lang.Object ref = eventName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENT_TIME_START_FIELD_NUMBER = 4;
    private int eventTimeStart_;
    /**
     * <code>optional uint32 event_time_start = 4;</code>
     */
    public boolean hasEventTimeStart() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 event_time_start = 4;</code>
     */
    public int getEventTimeStart() {
      return eventTimeStart_;
    }

    public static final int EVENT_TIME_END_FIELD_NUMBER = 5;
    private int eventTimeEnd_;
    /**
     * <code>optional uint32 event_time_end = 5;</code>
     */
    public boolean hasEventTimeEnd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 event_time_end = 5;</code>
     */
    public int getEventTimeEnd() {
      return eventTimeEnd_;
    }

    public static final int EVENT_PUBLIC_FIELD_NUMBER = 6;
    private int eventPublic_;
    /**
     * <code>optional int32 event_public = 6;</code>
     */
    public boolean hasEventPublic() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 event_public = 6;</code>
     */
    public int getEventPublic() {
      return eventPublic_;
    }

    public static final int EVENT_STAGE_ID_FIELD_NUMBER = 7;
    private int eventStageId_;
    /**
     * <code>optional int32 event_stage_id = 7;</code>
     */
    public boolean hasEventStageId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 event_stage_id = 7;</code>
     */
    public int getEventStageId() {
      return eventStageId_;
    }

    public static final int EVENT_STAGE_NAME_FIELD_NUMBER = 8;
    private java.lang.Object eventStageName_;
    /**
     * <code>optional string event_stage_name = 8;</code>
     */
    public boolean hasEventStageName() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string event_stage_name = 8;</code>
     */
    public java.lang.String getEventStageName() {
      java.lang.Object ref = eventStageName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          eventStageName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string event_stage_name = 8;</code>
     */
    public com.google.protobuf.ByteString
        getEventStageNameBytes() {
      java.lang.Object ref = eventStageName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventStageName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ACTIVE_SECTION_ID_FIELD_NUMBER = 9;
    private int activeSectionId_;
    /**
     * <code>optional uint32 active_section_id = 9;</code>
     */
    public boolean hasActiveSectionId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 active_section_id = 9;</code>
     */
    public int getActiveSectionId() {
      return activeSectionId_;
    }

    private void initFields() {
      eventId_ = 0;
      eventTag_ = "";
      eventName_ = "";
      eventTimeStart_ = 0;
      eventTimeEnd_ = 0;
      eventPublic_ = 0;
      eventStageId_ = 0;
      eventStageName_ = "";
      activeSectionId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEventTagBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, eventTimeStart_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, eventTimeEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, eventPublic_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, eventStageId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getEventStageNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, activeSectionId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEventTagBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEventNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, eventTimeStart_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, eventTimeEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, eventPublic_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, eventStageId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getEventStageNameBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, activeSectionId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code TournamentEvent}
     *
     * <pre>
     * 166
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:TournamentEvent)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventTag_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        eventName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        eventTimeStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        eventTimeEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        eventPublic_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        eventStageId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        eventStageName_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        activeSectionId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_TournamentEvent_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventTag_ = eventTag_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventName_ = eventName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventTimeStart_ = eventTimeStart_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.eventTimeEnd_ = eventTimeEnd_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.eventPublic_ = eventPublic_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.eventStageId_ = eventStageId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.eventStageName_ = eventStageName_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.activeSectionId_ = activeSectionId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventTag()) {
          bitField0_ |= 0x00000002;
          eventTag_ = other.eventTag_;
          onChanged();
        }
        if (other.hasEventName()) {
          bitField0_ |= 0x00000004;
          eventName_ = other.eventName_;
          onChanged();
        }
        if (other.hasEventTimeStart()) {
          setEventTimeStart(other.getEventTimeStart());
        }
        if (other.hasEventTimeEnd()) {
          setEventTimeEnd(other.getEventTimeEnd());
        }
        if (other.hasEventPublic()) {
          setEventPublic(other.getEventPublic());
        }
        if (other.hasEventStageId()) {
          setEventStageId(other.getEventStageId());
        }
        if (other.hasEventStageName()) {
          bitField0_ |= 0x00000080;
          eventStageName_ = other.eventStageName_;
          onChanged();
        }
        if (other.hasActiveSectionId()) {
          setActiveSectionId(other.getActiveSectionId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eventId_ ;
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventTag_ = "";
      /**
       * <code>optional string event_tag = 2;</code>
       */
      public boolean hasEventTag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string event_tag = 2;</code>
       */
      public java.lang.String getEventTag() {
        java.lang.Object ref = eventTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_tag = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEventTagBytes() {
        java.lang.Object ref = eventTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_tag = 2;</code>
       */
      public Builder setEventTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_tag = 2;</code>
       */
      public Builder clearEventTag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventTag_ = getDefaultInstance().getEventTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_tag = 2;</code>
       */
      public Builder setEventTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        eventTag_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object eventName_ = "";
      /**
       * <code>optional string event_name = 3;</code>
       */
      public boolean hasEventName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string event_name = 3;</code>
       */
      public java.lang.String getEventName() {
        java.lang.Object ref = eventName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEventNameBytes() {
        java.lang.Object ref = eventName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_name = 3;</code>
       */
      public Builder setEventName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 3;</code>
       */
      public Builder clearEventName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventName_ = getDefaultInstance().getEventName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_name = 3;</code>
       */
      public Builder setEventNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        eventName_ = value;
        onChanged();
        return this;
      }

      private int eventTimeStart_ ;
      /**
       * <code>optional uint32 event_time_start = 4;</code>
       */
      public boolean hasEventTimeStart() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 event_time_start = 4;</code>
       */
      public int getEventTimeStart() {
        return eventTimeStart_;
      }
      /**
       * <code>optional uint32 event_time_start = 4;</code>
       */
      public Builder setEventTimeStart(int value) {
        bitField0_ |= 0x00000008;
        eventTimeStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_time_start = 4;</code>
       */
      public Builder clearEventTimeStart() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventTimeStart_ = 0;
        onChanged();
        return this;
      }

      private int eventTimeEnd_ ;
      /**
       * <code>optional uint32 event_time_end = 5;</code>
       */
      public boolean hasEventTimeEnd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 event_time_end = 5;</code>
       */
      public int getEventTimeEnd() {
        return eventTimeEnd_;
      }
      /**
       * <code>optional uint32 event_time_end = 5;</code>
       */
      public Builder setEventTimeEnd(int value) {
        bitField0_ |= 0x00000010;
        eventTimeEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_time_end = 5;</code>
       */
      public Builder clearEventTimeEnd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        eventTimeEnd_ = 0;
        onChanged();
        return this;
      }

      private int eventPublic_ ;
      /**
       * <code>optional int32 event_public = 6;</code>
       */
      public boolean hasEventPublic() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 event_public = 6;</code>
       */
      public int getEventPublic() {
        return eventPublic_;
      }
      /**
       * <code>optional int32 event_public = 6;</code>
       */
      public Builder setEventPublic(int value) {
        bitField0_ |= 0x00000020;
        eventPublic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_public = 6;</code>
       */
      public Builder clearEventPublic() {
        bitField0_ = (bitField0_ & ~0x00000020);
        eventPublic_ = 0;
        onChanged();
        return this;
      }

      private int eventStageId_ ;
      /**
       * <code>optional int32 event_stage_id = 7;</code>
       */
      public boolean hasEventStageId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 event_stage_id = 7;</code>
       */
      public int getEventStageId() {
        return eventStageId_;
      }
      /**
       * <code>optional int32 event_stage_id = 7;</code>
       */
      public Builder setEventStageId(int value) {
        bitField0_ |= 0x00000040;
        eventStageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_stage_id = 7;</code>
       */
      public Builder clearEventStageId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        eventStageId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object eventStageName_ = "";
      /**
       * <code>optional string event_stage_name = 8;</code>
       */
      public boolean hasEventStageName() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string event_stage_name = 8;</code>
       */
      public java.lang.String getEventStageName() {
        java.lang.Object ref = eventStageName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            eventStageName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string event_stage_name = 8;</code>
       */
      public com.google.protobuf.ByteString
          getEventStageNameBytes() {
        java.lang.Object ref = eventStageName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          eventStageName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string event_stage_name = 8;</code>
       */
      public Builder setEventStageName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        eventStageName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_stage_name = 8;</code>
       */
      public Builder clearEventStageName() {
        bitField0_ = (bitField0_ & ~0x00000080);
        eventStageName_ = getDefaultInstance().getEventStageName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string event_stage_name = 8;</code>
       */
      public Builder setEventStageNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        eventStageName_ = value;
        onChanged();
        return this;
      }

      private int activeSectionId_ ;
      /**
       * <code>optional uint32 active_section_id = 9;</code>
       */
      public boolean hasActiveSectionId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 active_section_id = 9;</code>
       */
      public int getActiveSectionId() {
        return activeSectionId_;
      }
      /**
       * <code>optional uint32 active_section_id = 9;</code>
       */
      public Builder setActiveSectionId(int value) {
        bitField0_ |= 0x00000100;
        activeSectionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 active_section_id = 9;</code>
       */
      public Builder clearActiveSectionId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        activeSectionId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:TournamentEvent)
    }

    static {
      defaultInstance = new TournamentEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:TournamentEvent)
  }

  public interface PlayerRankingInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerRankingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 rank_id = 2;</code>
     */
    boolean hasRankId();
    /**
     * <code>optional uint32 rank_id = 2;</code>
     */
    int getRankId();

    /**
     * <code>optional uint32 wins = 3;</code>
     */
    boolean hasWins();
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    int getWins();

    /**
     * <code>optional float rank_change = 4;</code>
     */
    boolean hasRankChange();
    /**
     * <code>optional float rank_change = 4;</code>
     */
    float getRankChange();

    /**
     * <code>optional uint32 rank_type_id = 6;</code>
     */
    boolean hasRankTypeId();
    /**
     * <code>optional uint32 rank_type_id = 6;</code>
     */
    int getRankTypeId();

    /**
     * <code>optional uint32 tv_control = 7;</code>
     */
    boolean hasTvControl();
    /**
     * <code>optional uint32 tv_control = 7;</code>
     */
    int getTvControl();
  }
  /**
   * Protobuf type {@code PlayerRankingInfo}
   *
   * <pre>
   * 213
   * </pre>
   */
  public static final class PlayerRankingInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PlayerRankingInfo)
      PlayerRankingInfoOrBuilder {
    // Use PlayerRankingInfo.newBuilder() to construct.
    private PlayerRankingInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerRankingInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerRankingInfo defaultInstance;
    public static PlayerRankingInfo getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerRankingInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerRankingInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rankId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              wins_ = input.readUInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              rankChange_ = input.readFloat();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              rankTypeId_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              tvControl_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerRankingInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerRankingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerRankingInfo> PARSER =
        new com.google.protobuf.AbstractParser<PlayerRankingInfo>() {
      public PlayerRankingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerRankingInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerRankingInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int RANK_ID_FIELD_NUMBER = 2;
    private int rankId_;
    /**
     * <code>optional uint32 rank_id = 2;</code>
     */
    public boolean hasRankId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 rank_id = 2;</code>
     */
    public int getRankId() {
      return rankId_;
    }

    public static final int WINS_FIELD_NUMBER = 3;
    private int wins_;
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    public boolean hasWins() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 wins = 3;</code>
     */
    public int getWins() {
      return wins_;
    }

    public static final int RANK_CHANGE_FIELD_NUMBER = 4;
    private float rankChange_;
    /**
     * <code>optional float rank_change = 4;</code>
     */
    public boolean hasRankChange() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional float rank_change = 4;</code>
     */
    public float getRankChange() {
      return rankChange_;
    }

    public static final int RANK_TYPE_ID_FIELD_NUMBER = 6;
    private int rankTypeId_;
    /**
     * <code>optional uint32 rank_type_id = 6;</code>
     */
    public boolean hasRankTypeId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 rank_type_id = 6;</code>
     */
    public int getRankTypeId() {
      return rankTypeId_;
    }

    public static final int TV_CONTROL_FIELD_NUMBER = 7;
    private int tvControl_;
    /**
     * <code>optional uint32 tv_control = 7;</code>
     */
    public boolean hasTvControl() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 tv_control = 7;</code>
     */
    public int getTvControl() {
      return tvControl_;
    }

    private void initFields() {
      accountId_ = 0;
      rankId_ = 0;
      wins_ = 0;
      rankChange_ = 0F;
      rankTypeId_ = 0;
      tvControl_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, rankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, wins_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, rankChange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, rankTypeId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, tvControl_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, rankId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, wins_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, rankChange_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, rankTypeId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, tvControl_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerRankingInfo}
     *
     * <pre>
     * 213
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerRankingInfo)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerRankingInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerRankingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        rankId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        rankChange_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        rankTypeId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tvControl_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerRankingInfo_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rankId_ = rankId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wins_ = wins_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rankChange_ = rankChange_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rankTypeId_ = rankTypeId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tvControl_ = tvControl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasRankId()) {
          setRankId(other.getRankId());
        }
        if (other.hasWins()) {
          setWins(other.getWins());
        }
        if (other.hasRankChange()) {
          setRankChange(other.getRankChange());
        }
        if (other.hasRankTypeId()) {
          setRankTypeId(other.getRankTypeId());
        }
        if (other.hasTvControl()) {
          setTvControl(other.getTvControl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int rankId_ ;
      /**
       * <code>optional uint32 rank_id = 2;</code>
       */
      public boolean hasRankId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 rank_id = 2;</code>
       */
      public int getRankId() {
        return rankId_;
      }
      /**
       * <code>optional uint32 rank_id = 2;</code>
       */
      public Builder setRankId(int value) {
        bitField0_ |= 0x00000002;
        rankId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rank_id = 2;</code>
       */
      public Builder clearRankId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rankId_ = 0;
        onChanged();
        return this;
      }

      private int wins_ ;
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public boolean hasWins() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public int getWins() {
        return wins_;
      }
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public Builder setWins(int value) {
        bitField0_ |= 0x00000004;
        wins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 wins = 3;</code>
       */
      public Builder clearWins() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wins_ = 0;
        onChanged();
        return this;
      }

      private float rankChange_ ;
      /**
       * <code>optional float rank_change = 4;</code>
       */
      public boolean hasRankChange() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float rank_change = 4;</code>
       */
      public float getRankChange() {
        return rankChange_;
      }
      /**
       * <code>optional float rank_change = 4;</code>
       */
      public Builder setRankChange(float value) {
        bitField0_ |= 0x00000008;
        rankChange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float rank_change = 4;</code>
       */
      public Builder clearRankChange() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rankChange_ = 0F;
        onChanged();
        return this;
      }

      private int rankTypeId_ ;
      /**
       * <code>optional uint32 rank_type_id = 6;</code>
       */
      public boolean hasRankTypeId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 rank_type_id = 6;</code>
       */
      public int getRankTypeId() {
        return rankTypeId_;
      }
      /**
       * <code>optional uint32 rank_type_id = 6;</code>
       */
      public Builder setRankTypeId(int value) {
        bitField0_ |= 0x00000010;
        rankTypeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rank_type_id = 6;</code>
       */
      public Builder clearRankTypeId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rankTypeId_ = 0;
        onChanged();
        return this;
      }

      private int tvControl_ ;
      /**
       * <code>optional uint32 tv_control = 7;</code>
       */
      public boolean hasTvControl() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 tv_control = 7;</code>
       */
      public int getTvControl() {
        return tvControl_;
      }
      /**
       * <code>optional uint32 tv_control = 7;</code>
       */
      public Builder setTvControl(int value) {
        bitField0_ |= 0x00000020;
        tvControl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tv_control = 7;</code>
       */
      public Builder clearTvControl() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tvControl_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerRankingInfo)
    }

    static {
      defaultInstance = new PlayerRankingInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerRankingInfo)
  }

  public interface IpAddressMaskOrBuilder extends
      // @@protoc_insertion_point(interface_extends:IpAddressMask)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 a = 1;</code>
     */
    boolean hasA();
    /**
     * <code>optional uint32 a = 1;</code>
     */
    int getA();

    /**
     * <code>optional uint32 b = 2;</code>
     */
    boolean hasB();
    /**
     * <code>optional uint32 b = 2;</code>
     */
    int getB();

    /**
     * <code>optional uint32 c = 3;</code>
     */
    boolean hasC();
    /**
     * <code>optional uint32 c = 3;</code>
     */
    int getC();

    /**
     * <code>optional uint32 d = 4;</code>
     */
    boolean hasD();
    /**
     * <code>optional uint32 d = 4;</code>
     */
    int getD();

    /**
     * <code>optional uint32 bits = 5;</code>
     */
    boolean hasBits();
    /**
     * <code>optional uint32 bits = 5;</code>
     */
    int getBits();

    /**
     * <code>optional uint32 token = 6;</code>
     */
    boolean hasToken();
    /**
     * <code>optional uint32 token = 6;</code>
     */
    int getToken();
  }
  /**
   * Protobuf type {@code IpAddressMask}
   *
   * <pre>
   * 270
   * </pre>
   */
  public static final class IpAddressMask extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:IpAddressMask)
      IpAddressMaskOrBuilder {
    // Use IpAddressMask.newBuilder() to construct.
    private IpAddressMask(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IpAddressMask(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final IpAddressMask defaultInstance;
    public static IpAddressMask getDefaultInstance() {
      return defaultInstance;
    }

    public IpAddressMask getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private IpAddressMask(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              a_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              b_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              c_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              d_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bits_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              token_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_IpAddressMask_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_IpAddressMask_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder.class);
    }

    public static com.google.protobuf.Parser<IpAddressMask> PARSER =
        new com.google.protobuf.AbstractParser<IpAddressMask>() {
      public IpAddressMask parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IpAddressMask(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IpAddressMask> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int A_FIELD_NUMBER = 1;
    private int a_;
    /**
     * <code>optional uint32 a = 1;</code>
     */
    public boolean hasA() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 a = 1;</code>
     */
    public int getA() {
      return a_;
    }

    public static final int B_FIELD_NUMBER = 2;
    private int b_;
    /**
     * <code>optional uint32 b = 2;</code>
     */
    public boolean hasB() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 b = 2;</code>
     */
    public int getB() {
      return b_;
    }

    public static final int C_FIELD_NUMBER = 3;
    private int c_;
    /**
     * <code>optional uint32 c = 3;</code>
     */
    public boolean hasC() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 c = 3;</code>
     */
    public int getC() {
      return c_;
    }

    public static final int D_FIELD_NUMBER = 4;
    private int d_;
    /**
     * <code>optional uint32 d = 4;</code>
     */
    public boolean hasD() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 d = 4;</code>
     */
    public int getD() {
      return d_;
    }

    public static final int BITS_FIELD_NUMBER = 5;
    private int bits_;
    /**
     * <code>optional uint32 bits = 5;</code>
     */
    public boolean hasBits() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 bits = 5;</code>
     */
    public int getBits() {
      return bits_;
    }

    public static final int TOKEN_FIELD_NUMBER = 6;
    private int token_;
    /**
     * <code>optional uint32 token = 6;</code>
     */
    public boolean hasToken() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 token = 6;</code>
     */
    public int getToken() {
      return token_;
    }

    private void initFields() {
      a_ = 0;
      b_ = 0;
      c_ = 0;
      d_ = 0;
      bits_ = 0;
      token_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, c_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, d_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, bits_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, token_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, a_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, b_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, c_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, d_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, bits_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, token_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code IpAddressMask}
     *
     * <pre>
     * 270
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:IpAddressMask)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_IpAddressMask_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_IpAddressMask_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        a_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        b_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        c_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        d_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        token_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_IpAddressMask_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.a_ = a_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.b_ = b_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.c_ = c_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.d_ = d_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bits_ = bits_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.token_ = token_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.getDefaultInstance()) return this;
        if (other.hasA()) {
          setA(other.getA());
        }
        if (other.hasB()) {
          setB(other.getB());
        }
        if (other.hasC()) {
          setC(other.getC());
        }
        if (other.hasD()) {
          setD(other.getD());
        }
        if (other.hasBits()) {
          setBits(other.getBits());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int a_ ;
      /**
       * <code>optional uint32 a = 1;</code>
       */
      public boolean hasA() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 a = 1;</code>
       */
      public int getA() {
        return a_;
      }
      /**
       * <code>optional uint32 a = 1;</code>
       */
      public Builder setA(int value) {
        bitField0_ |= 0x00000001;
        a_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 a = 1;</code>
       */
      public Builder clearA() {
        bitField0_ = (bitField0_ & ~0x00000001);
        a_ = 0;
        onChanged();
        return this;
      }

      private int b_ ;
      /**
       * <code>optional uint32 b = 2;</code>
       */
      public boolean hasB() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 b = 2;</code>
       */
      public int getB() {
        return b_;
      }
      /**
       * <code>optional uint32 b = 2;</code>
       */
      public Builder setB(int value) {
        bitField0_ |= 0x00000002;
        b_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 b = 2;</code>
       */
      public Builder clearB() {
        bitField0_ = (bitField0_ & ~0x00000002);
        b_ = 0;
        onChanged();
        return this;
      }

      private int c_ ;
      /**
       * <code>optional uint32 c = 3;</code>
       */
      public boolean hasC() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 c = 3;</code>
       */
      public int getC() {
        return c_;
      }
      /**
       * <code>optional uint32 c = 3;</code>
       */
      public Builder setC(int value) {
        bitField0_ |= 0x00000004;
        c_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 c = 3;</code>
       */
      public Builder clearC() {
        bitField0_ = (bitField0_ & ~0x00000004);
        c_ = 0;
        onChanged();
        return this;
      }

      private int d_ ;
      /**
       * <code>optional uint32 d = 4;</code>
       */
      public boolean hasD() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 d = 4;</code>
       */
      public int getD() {
        return d_;
      }
      /**
       * <code>optional uint32 d = 4;</code>
       */
      public Builder setD(int value) {
        bitField0_ |= 0x00000008;
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 d = 4;</code>
       */
      public Builder clearD() {
        bitField0_ = (bitField0_ & ~0x00000008);
        d_ = 0;
        onChanged();
        return this;
      }

      private int bits_ ;
      /**
       * <code>optional uint32 bits = 5;</code>
       */
      public boolean hasBits() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 bits = 5;</code>
       */
      public int getBits() {
        return bits_;
      }
      /**
       * <code>optional uint32 bits = 5;</code>
       */
      public Builder setBits(int value) {
        bitField0_ |= 0x00000010;
        bits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bits = 5;</code>
       */
      public Builder clearBits() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bits_ = 0;
        onChanged();
        return this;
      }

      private int token_ ;
      /**
       * <code>optional uint32 token = 6;</code>
       */
      public boolean hasToken() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 token = 6;</code>
       */
      public int getToken() {
        return token_;
      }
      /**
       * <code>optional uint32 token = 6;</code>
       */
      public Builder setToken(int value) {
        bitField0_ |= 0x00000020;
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 token = 6;</code>
       */
      public Builder clearToken() {
        bitField0_ = (bitField0_ & ~0x00000020);
        token_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:IpAddressMask)
    }

    static {
      defaultInstance = new IpAddressMask(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:IpAddressMask)
  }

  public interface XpProgressDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:XpProgressData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 xp_points = 1;</code>
     */
    boolean hasXpPoints();
    /**
     * <code>optional uint32 xp_points = 1;</code>
     */
    int getXpPoints();

    /**
     * <code>optional int32 xp_category = 2;</code>
     */
    boolean hasXpCategory();
    /**
     * <code>optional int32 xp_category = 2;</code>
     */
    int getXpCategory();
  }
  /**
   * Protobuf type {@code XpProgressData}
   *
   * <pre>
   * 285
   * </pre>
   */
  public static final class XpProgressData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:XpProgressData)
      XpProgressDataOrBuilder {
    // Use XpProgressData.newBuilder() to construct.
    private XpProgressData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private XpProgressData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final XpProgressData defaultInstance;
    public static XpProgressData getDefaultInstance() {
      return defaultInstance;
    }

    public XpProgressData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private XpProgressData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              xpPoints_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              xpCategory_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_XpProgressData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_XpProgressData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder.class);
    }

    public static com.google.protobuf.Parser<XpProgressData> PARSER =
        new com.google.protobuf.AbstractParser<XpProgressData>() {
      public XpProgressData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new XpProgressData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<XpProgressData> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int XP_POINTS_FIELD_NUMBER = 1;
    private int xpPoints_;
    /**
     * <code>optional uint32 xp_points = 1;</code>
     */
    public boolean hasXpPoints() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 xp_points = 1;</code>
     */
    public int getXpPoints() {
      return xpPoints_;
    }

    public static final int XP_CATEGORY_FIELD_NUMBER = 2;
    private int xpCategory_;
    /**
     * <code>optional int32 xp_category = 2;</code>
     */
    public boolean hasXpCategory() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 xp_category = 2;</code>
     */
    public int getXpCategory() {
      return xpCategory_;
    }

    private void initFields() {
      xpPoints_ = 0;
      xpCategory_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, xpPoints_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, xpCategory_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, xpPoints_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, xpCategory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code XpProgressData}
     *
     * <pre>
     * 285
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:XpProgressData)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_XpProgressData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_XpProgressData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        xpPoints_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        xpCategory_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_XpProgressData_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.xpPoints_ = xpPoints_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.xpCategory_ = xpCategory_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.getDefaultInstance()) return this;
        if (other.hasXpPoints()) {
          setXpPoints(other.getXpPoints());
        }
        if (other.hasXpCategory()) {
          setXpCategory(other.getXpCategory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int xpPoints_ ;
      /**
       * <code>optional uint32 xp_points = 1;</code>
       */
      public boolean hasXpPoints() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 xp_points = 1;</code>
       */
      public int getXpPoints() {
        return xpPoints_;
      }
      /**
       * <code>optional uint32 xp_points = 1;</code>
       */
      public Builder setXpPoints(int value) {
        bitField0_ |= 0x00000001;
        xpPoints_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 xp_points = 1;</code>
       */
      public Builder clearXpPoints() {
        bitField0_ = (bitField0_ & ~0x00000001);
        xpPoints_ = 0;
        onChanged();
        return this;
      }

      private int xpCategory_ ;
      /**
       * <code>optional int32 xp_category = 2;</code>
       */
      public boolean hasXpCategory() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 xp_category = 2;</code>
       */
      public int getXpCategory() {
        return xpCategory_;
      }
      /**
       * <code>optional int32 xp_category = 2;</code>
       */
      public Builder setXpCategory(int value) {
        bitField0_ |= 0x00000002;
        xpCategory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 xp_category = 2;</code>
       */
      public Builder clearXpCategory() {
        bitField0_ = (bitField0_ & ~0x00000002);
        xpCategory_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:XpProgressData)
    }

    static {
      defaultInstance = new XpProgressData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:XpProgressData)
  }

  public interface ScoreLeaderboardDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ScoreLeaderboardData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 quest_id = 1;</code>
     */
    boolean hasQuestId();
    /**
     * <code>optional uint64 quest_id = 1;</code>
     */
    long getQuestId();

    /**
     * <code>optional uint32 score = 2;</code>
     */
    boolean hasScore();
    /**
     * <code>optional uint32 score = 2;</code>
     */
    int getScore();

    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries> 
        getAccountentriesList();
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries getAccountentries(int index);
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    int getAccountentriesCount();
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder> 
        getAccountentriesOrBuilderList();
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder getAccountentriesOrBuilder(
        int index);

    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> 
        getMatchentriesList();
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getMatchentries(int index);
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    int getMatchentriesCount();
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
        getMatchentriesOrBuilderList();
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder getMatchentriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code ScoreLeaderboardData}
   *
   * <pre>
   * 296
   * </pre>
   */
  public static final class ScoreLeaderboardData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:ScoreLeaderboardData)
      ScoreLeaderboardDataOrBuilder {
    // Use ScoreLeaderboardData.newBuilder() to construct.
    private ScoreLeaderboardData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ScoreLeaderboardData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ScoreLeaderboardData defaultInstance;
    public static ScoreLeaderboardData getDefaultInstance() {
      return defaultInstance;
    }

    public ScoreLeaderboardData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ScoreLeaderboardData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              questId_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              score_ = input.readUInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                accountentries_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries>();
                mutable_bitField0_ |= 0x00000004;
              }
              accountentries_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                matchentries_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry>();
                mutable_bitField0_ |= 0x00000008;
              }
              matchentries_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          accountentries_ = java.util.Collections.unmodifiableList(accountentries_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          matchentries_ = java.util.Collections.unmodifiableList(matchentries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Builder.class);
    }

    public static com.google.protobuf.Parser<ScoreLeaderboardData> PARSER =
        new com.google.protobuf.AbstractParser<ScoreLeaderboardData>() {
      public ScoreLeaderboardData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScoreLeaderboardData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ScoreLeaderboardData> getParserForType() {
      return PARSER;
    }

    public interface EntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ScoreLeaderboardData.Entry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 tag = 1;</code>
       */
      boolean hasTag();
      /**
       * <code>optional uint32 tag = 1;</code>
       */
      int getTag();

      /**
       * <code>optional uint32 val = 2;</code>
       */
      boolean hasVal();
      /**
       * <code>optional uint32 val = 2;</code>
       */
      int getVal();
    }
    /**
     * Protobuf type {@code ScoreLeaderboardData.Entry}
     */
    public static final class Entry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:ScoreLeaderboardData.Entry)
        EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Entry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }

      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Entry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                tag_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                val_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_Entry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder.class);
      }

      public static com.google.protobuf.Parser<Entry> PARSER =
          new com.google.protobuf.AbstractParser<Entry>() {
        public Entry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Entry(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Entry> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TAG_FIELD_NUMBER = 1;
      private int tag_;
      /**
       * <code>optional uint32 tag = 1;</code>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 tag = 1;</code>
       */
      public int getTag() {
        return tag_;
      }

      public static final int VAL_FIELD_NUMBER = 2;
      private int val_;
      /**
       * <code>optional uint32 val = 2;</code>
       */
      public boolean hasVal() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 val = 2;</code>
       */
      public int getVal() {
        return val_;
      }

      private void initFields() {
        tag_ = 0;
        val_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, tag_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, val_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, tag_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, val_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ScoreLeaderboardData.Entry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ScoreLeaderboardData.Entry)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_Entry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_Entry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          tag_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          val_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_Entry_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tag_ = tag_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.val_ = val_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.getDefaultInstance()) return this;
          if (other.hasTag()) {
            setTag(other.getTag());
          }
          if (other.hasVal()) {
            setVal(other.getVal());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int tag_ ;
        /**
         * <code>optional uint32 tag = 1;</code>
         */
        public boolean hasTag() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 tag = 1;</code>
         */
        public int getTag() {
          return tag_;
        }
        /**
         * <code>optional uint32 tag = 1;</code>
         */
        public Builder setTag(int value) {
          bitField0_ |= 0x00000001;
          tag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tag = 1;</code>
         */
        public Builder clearTag() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tag_ = 0;
          onChanged();
          return this;
        }

        private int val_ ;
        /**
         * <code>optional uint32 val = 2;</code>
         */
        public boolean hasVal() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 val = 2;</code>
         */
        public int getVal() {
          return val_;
        }
        /**
         * <code>optional uint32 val = 2;</code>
         */
        public Builder setVal(int value) {
          bitField0_ |= 0x00000002;
          val_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 val = 2;</code>
         */
        public Builder clearVal() {
          bitField0_ = (bitField0_ & ~0x00000002);
          val_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:ScoreLeaderboardData.Entry)
      }

      static {
        defaultInstance = new Entry(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ScoreLeaderboardData.Entry)
    }

    public interface AccountEntriesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:ScoreLeaderboardData.AccountEntries)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      boolean hasAccountid();
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      int getAccountid();

      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> 
          getEntriesList();
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getEntries(int index);
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      int getEntriesCount();
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
          getEntriesOrBuilderList();
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder getEntriesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code ScoreLeaderboardData.AccountEntries}
     */
    public static final class AccountEntries extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:ScoreLeaderboardData.AccountEntries)
        AccountEntriesOrBuilder {
      // Use AccountEntries.newBuilder() to construct.
      private AccountEntries(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private AccountEntries(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final AccountEntries defaultInstance;
      public static AccountEntries getDefaultInstance() {
        return defaultInstance;
      }

      public AccountEntries getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private AccountEntries(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountid_ = input.readUInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  entries_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry>();
                  mutable_bitField0_ |= 0x00000002;
                }
                entries_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_AccountEntries_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_AccountEntries_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder.class);
      }

      public static com.google.protobuf.Parser<AccountEntries> PARSER =
          new com.google.protobuf.AbstractParser<AccountEntries>() {
        public AccountEntries parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AccountEntries(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<AccountEntries> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCOUNTID_FIELD_NUMBER = 1;
      private int accountid_;
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public int getAccountid() {
        return accountid_;
      }

      public static final int ENTRIES_FIELD_NUMBER = 2;
      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> entries_;
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> getEntriesList() {
        return entries_;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
          getEntriesOrBuilderList() {
        return entries_;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      public int getEntriesCount() {
        return entries_.size();
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getEntries(int index) {
        return entries_.get(index);
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder getEntriesOrBuilder(
          int index) {
        return entries_.get(index);
      }

      private void initFields() {
        accountid_ = 0;
        entries_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountid_);
        }
        for (int i = 0; i < entries_.size(); i++) {
          output.writeMessage(2, entries_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountid_);
        }
        for (int i = 0; i < entries_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, entries_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code ScoreLeaderboardData.AccountEntries}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:ScoreLeaderboardData.AccountEntries)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_AccountEntries_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_AccountEntries_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getEntriesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (entriesBuilder_ == null) {
            entries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            entriesBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_AccountEntries_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountid_ = accountid_;
          if (entriesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              entries_ = java.util.Collections.unmodifiableList(entries_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.entries_ = entries_;
          } else {
            result.entries_ = entriesBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.getDefaultInstance()) return this;
          if (other.hasAccountid()) {
            setAccountid(other.getAccountid());
          }
          if (entriesBuilder_ == null) {
            if (!other.entries_.isEmpty()) {
              if (entries_.isEmpty()) {
                entries_ = other.entries_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureEntriesIsMutable();
                entries_.addAll(other.entries_);
              }
              onChanged();
            }
          } else {
            if (!other.entries_.isEmpty()) {
              if (entriesBuilder_.isEmpty()) {
                entriesBuilder_.dispose();
                entriesBuilder_ = null;
                entries_ = other.entries_;
                bitField0_ = (bitField0_ & ~0x00000002);
                entriesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getEntriesFieldBuilder() : null;
              } else {
                entriesBuilder_.addAllMessages(other.entries_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountid_ ;
        /**
         * <code>optional uint32 accountid = 1;</code>
         */
        public boolean hasAccountid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 accountid = 1;</code>
         */
        public int getAccountid() {
          return accountid_;
        }
        /**
         * <code>optional uint32 accountid = 1;</code>
         */
        public Builder setAccountid(int value) {
          bitField0_ |= 0x00000001;
          accountid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 accountid = 1;</code>
         */
        public Builder clearAccountid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountid_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> entries_ =
          java.util.Collections.emptyList();
        private void ensureEntriesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            entries_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry>(entries_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> entriesBuilder_;

        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> getEntriesList() {
          if (entriesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(entries_);
          } else {
            return entriesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public int getEntriesCount() {
          if (entriesBuilder_ == null) {
            return entries_.size();
          } else {
            return entriesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getEntries(int index) {
          if (entriesBuilder_ == null) {
            return entries_.get(index);
          } else {
            return entriesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder setEntries(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry value) {
          if (entriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEntriesIsMutable();
            entries_.set(index, value);
            onChanged();
          } else {
            entriesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder setEntries(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder builderForValue) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.set(index, builderForValue.build());
            onChanged();
          } else {
            entriesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder addEntries(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry value) {
          if (entriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEntriesIsMutable();
            entries_.add(value);
            onChanged();
          } else {
            entriesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder addEntries(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry value) {
          if (entriesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEntriesIsMutable();
            entries_.add(index, value);
            onChanged();
          } else {
            entriesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder addEntries(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder builderForValue) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.add(builderForValue.build());
            onChanged();
          } else {
            entriesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder addEntries(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder builderForValue) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.add(index, builderForValue.build());
            onChanged();
          } else {
            entriesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder addAllEntries(
            java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> values) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, entries_);
            onChanged();
          } else {
            entriesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder clearEntries() {
          if (entriesBuilder_ == null) {
            entries_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            entriesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public Builder removeEntries(int index) {
          if (entriesBuilder_ == null) {
            ensureEntriesIsMutable();
            entries_.remove(index);
            onChanged();
          } else {
            entriesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder getEntriesBuilder(
            int index) {
          return getEntriesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder getEntriesOrBuilder(
            int index) {
          if (entriesBuilder_ == null) {
            return entries_.get(index);  } else {
            return entriesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
             getEntriesOrBuilderList() {
          if (entriesBuilder_ != null) {
            return entriesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(entries_);
          }
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder addEntriesBuilder() {
          return getEntriesFieldBuilder().addBuilder(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.getDefaultInstance());
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder addEntriesBuilder(
            int index) {
          return getEntriesFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.getDefaultInstance());
        }
        /**
         * <code>repeated .ScoreLeaderboardData.Entry entries = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder> 
             getEntriesBuilderList() {
          return getEntriesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
            getEntriesFieldBuilder() {
          if (entriesBuilder_ == null) {
            entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder>(
                    entries_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            entries_ = null;
          }
          return entriesBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:ScoreLeaderboardData.AccountEntries)
      }

      static {
        defaultInstance = new AccountEntries(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:ScoreLeaderboardData.AccountEntries)
    }

    private int bitField0_;
    public static final int QUEST_ID_FIELD_NUMBER = 1;
    private long questId_;
    /**
     * <code>optional uint64 quest_id = 1;</code>
     */
    public boolean hasQuestId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 quest_id = 1;</code>
     */
    public long getQuestId() {
      return questId_;
    }

    public static final int SCORE_FIELD_NUMBER = 2;
    private int score_;
    /**
     * <code>optional uint32 score = 2;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 score = 2;</code>
     */
    public int getScore() {
      return score_;
    }

    public static final int ACCOUNTENTRIES_FIELD_NUMBER = 3;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries> accountentries_;
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries> getAccountentriesList() {
      return accountentries_;
    }
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder> 
        getAccountentriesOrBuilderList() {
      return accountentries_;
    }
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    public int getAccountentriesCount() {
      return accountentries_.size();
    }
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries getAccountentries(int index) {
      return accountentries_.get(index);
    }
    /**
     * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder getAccountentriesOrBuilder(
        int index) {
      return accountentries_.get(index);
    }

    public static final int MATCHENTRIES_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> matchentries_;
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> getMatchentriesList() {
      return matchentries_;
    }
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
        getMatchentriesOrBuilderList() {
      return matchentries_;
    }
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    public int getMatchentriesCount() {
      return matchentries_.size();
    }
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getMatchentries(int index) {
      return matchentries_.get(index);
    }
    /**
     * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder getMatchentriesOrBuilder(
        int index) {
      return matchentries_.get(index);
    }

    private void initFields() {
      questId_ = 0L;
      score_ = 0;
      accountentries_ = java.util.Collections.emptyList();
      matchentries_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, questId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, score_);
      }
      for (int i = 0; i < accountentries_.size(); i++) {
        output.writeMessage(3, accountentries_.get(i));
      }
      for (int i = 0; i < matchentries_.size(); i++) {
        output.writeMessage(5, matchentries_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, questId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, score_);
      }
      for (int i = 0; i < accountentries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, accountentries_.get(i));
      }
      for (int i = 0; i < matchentries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, matchentries_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ScoreLeaderboardData}
     *
     * <pre>
     * 296
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ScoreLeaderboardData)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAccountentriesFieldBuilder();
          getMatchentriesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        questId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        score_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (accountentriesBuilder_ == null) {
          accountentries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          accountentriesBuilder_.clear();
        }
        if (matchentriesBuilder_ == null) {
          matchentries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          matchentriesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_ScoreLeaderboardData_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.questId_ = questId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.score_ = score_;
        if (accountentriesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            accountentries_ = java.util.Collections.unmodifiableList(accountentries_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.accountentries_ = accountentries_;
        } else {
          result.accountentries_ = accountentriesBuilder_.build();
        }
        if (matchentriesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            matchentries_ = java.util.Collections.unmodifiableList(matchentries_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.matchentries_ = matchentries_;
        } else {
          result.matchentries_ = matchentriesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.getDefaultInstance()) return this;
        if (other.hasQuestId()) {
          setQuestId(other.getQuestId());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (accountentriesBuilder_ == null) {
          if (!other.accountentries_.isEmpty()) {
            if (accountentries_.isEmpty()) {
              accountentries_ = other.accountentries_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureAccountentriesIsMutable();
              accountentries_.addAll(other.accountentries_);
            }
            onChanged();
          }
        } else {
          if (!other.accountentries_.isEmpty()) {
            if (accountentriesBuilder_.isEmpty()) {
              accountentriesBuilder_.dispose();
              accountentriesBuilder_ = null;
              accountentries_ = other.accountentries_;
              bitField0_ = (bitField0_ & ~0x00000004);
              accountentriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAccountentriesFieldBuilder() : null;
            } else {
              accountentriesBuilder_.addAllMessages(other.accountentries_);
            }
          }
        }
        if (matchentriesBuilder_ == null) {
          if (!other.matchentries_.isEmpty()) {
            if (matchentries_.isEmpty()) {
              matchentries_ = other.matchentries_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMatchentriesIsMutable();
              matchentries_.addAll(other.matchentries_);
            }
            onChanged();
          }
        } else {
          if (!other.matchentries_.isEmpty()) {
            if (matchentriesBuilder_.isEmpty()) {
              matchentriesBuilder_.dispose();
              matchentriesBuilder_ = null;
              matchentries_ = other.matchentries_;
              bitField0_ = (bitField0_ & ~0x00000008);
              matchentriesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMatchentriesFieldBuilder() : null;
            } else {
              matchentriesBuilder_.addAllMessages(other.matchentries_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long questId_ ;
      /**
       * <code>optional uint64 quest_id = 1;</code>
       */
      public boolean hasQuestId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 quest_id = 1;</code>
       */
      public long getQuestId() {
        return questId_;
      }
      /**
       * <code>optional uint64 quest_id = 1;</code>
       */
      public Builder setQuestId(long value) {
        bitField0_ |= 0x00000001;
        questId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 quest_id = 1;</code>
       */
      public Builder clearQuestId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        questId_ = 0L;
        onChanged();
        return this;
      }

      private int score_ ;
      /**
       * <code>optional uint32 score = 2;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 score = 2;</code>
       */
      public int getScore() {
        return score_;
      }
      /**
       * <code>optional uint32 score = 2;</code>
       */
      public Builder setScore(int value) {
        bitField0_ |= 0x00000002;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 score = 2;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000002);
        score_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries> accountentries_ =
        java.util.Collections.emptyList();
      private void ensureAccountentriesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          accountentries_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries>(accountentries_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder> accountentriesBuilder_;

      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries> getAccountentriesList() {
        if (accountentriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(accountentries_);
        } else {
          return accountentriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public int getAccountentriesCount() {
        if (accountentriesBuilder_ == null) {
          return accountentries_.size();
        } else {
          return accountentriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries getAccountentries(int index) {
        if (accountentriesBuilder_ == null) {
          return accountentries_.get(index);
        } else {
          return accountentriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder setAccountentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries value) {
        if (accountentriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountentriesIsMutable();
          accountentries_.set(index, value);
          onChanged();
        } else {
          accountentriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder setAccountentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder builderForValue) {
        if (accountentriesBuilder_ == null) {
          ensureAccountentriesIsMutable();
          accountentries_.set(index, builderForValue.build());
          onChanged();
        } else {
          accountentriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder addAccountentries(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries value) {
        if (accountentriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountentriesIsMutable();
          accountentries_.add(value);
          onChanged();
        } else {
          accountentriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder addAccountentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries value) {
        if (accountentriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAccountentriesIsMutable();
          accountentries_.add(index, value);
          onChanged();
        } else {
          accountentriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder addAccountentries(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder builderForValue) {
        if (accountentriesBuilder_ == null) {
          ensureAccountentriesIsMutable();
          accountentries_.add(builderForValue.build());
          onChanged();
        } else {
          accountentriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder addAccountentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder builderForValue) {
        if (accountentriesBuilder_ == null) {
          ensureAccountentriesIsMutable();
          accountentries_.add(index, builderForValue.build());
          onChanged();
        } else {
          accountentriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder addAllAccountentries(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries> values) {
        if (accountentriesBuilder_ == null) {
          ensureAccountentriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, accountentries_);
          onChanged();
        } else {
          accountentriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder clearAccountentries() {
        if (accountentriesBuilder_ == null) {
          accountentries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          accountentriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public Builder removeAccountentries(int index) {
        if (accountentriesBuilder_ == null) {
          ensureAccountentriesIsMutable();
          accountentries_.remove(index);
          onChanged();
        } else {
          accountentriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder getAccountentriesBuilder(
          int index) {
        return getAccountentriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder getAccountentriesOrBuilder(
          int index) {
        if (accountentriesBuilder_ == null) {
          return accountentries_.get(index);  } else {
          return accountentriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder> 
           getAccountentriesOrBuilderList() {
        if (accountentriesBuilder_ != null) {
          return accountentriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(accountentries_);
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder addAccountentriesBuilder() {
        return getAccountentriesFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.getDefaultInstance());
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder addAccountentriesBuilder(
          int index) {
        return getAccountentriesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.getDefaultInstance());
      }
      /**
       * <code>repeated .ScoreLeaderboardData.AccountEntries accountentries = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder> 
           getAccountentriesBuilderList() {
        return getAccountentriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder> 
          getAccountentriesFieldBuilder() {
        if (accountentriesBuilder_ == null) {
          accountentriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntries.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.AccountEntriesOrBuilder>(
                  accountentries_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          accountentries_ = null;
        }
        return accountentriesBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> matchentries_ =
        java.util.Collections.emptyList();
      private void ensureMatchentriesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          matchentries_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry>(matchentries_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> matchentriesBuilder_;

      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> getMatchentriesList() {
        if (matchentriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matchentries_);
        } else {
          return matchentriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public int getMatchentriesCount() {
        if (matchentriesBuilder_ == null) {
          return matchentries_.size();
        } else {
          return matchentriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry getMatchentries(int index) {
        if (matchentriesBuilder_ == null) {
          return matchentries_.get(index);
        } else {
          return matchentriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder setMatchentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry value) {
        if (matchentriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchentriesIsMutable();
          matchentries_.set(index, value);
          onChanged();
        } else {
          matchentriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder setMatchentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder builderForValue) {
        if (matchentriesBuilder_ == null) {
          ensureMatchentriesIsMutable();
          matchentries_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchentriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder addMatchentries(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry value) {
        if (matchentriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchentriesIsMutable();
          matchentries_.add(value);
          onChanged();
        } else {
          matchentriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder addMatchentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry value) {
        if (matchentriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchentriesIsMutable();
          matchentries_.add(index, value);
          onChanged();
        } else {
          matchentriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder addMatchentries(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder builderForValue) {
        if (matchentriesBuilder_ == null) {
          ensureMatchentriesIsMutable();
          matchentries_.add(builderForValue.build());
          onChanged();
        } else {
          matchentriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder addMatchentries(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder builderForValue) {
        if (matchentriesBuilder_ == null) {
          ensureMatchentriesIsMutable();
          matchentries_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchentriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder addAllMatchentries(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry> values) {
        if (matchentriesBuilder_ == null) {
          ensureMatchentriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchentries_);
          onChanged();
        } else {
          matchentriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder clearMatchentries() {
        if (matchentriesBuilder_ == null) {
          matchentries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          matchentriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public Builder removeMatchentries(int index) {
        if (matchentriesBuilder_ == null) {
          ensureMatchentriesIsMutable();
          matchentries_.remove(index);
          onChanged();
        } else {
          matchentriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder getMatchentriesBuilder(
          int index) {
        return getMatchentriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder getMatchentriesOrBuilder(
          int index) {
        if (matchentriesBuilder_ == null) {
          return matchentries_.get(index);  } else {
          return matchentriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
           getMatchentriesOrBuilderList() {
        if (matchentriesBuilder_ != null) {
          return matchentriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matchentries_);
        }
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder addMatchentriesBuilder() {
        return getMatchentriesFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder addMatchentriesBuilder(
          int index) {
        return getMatchentriesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .ScoreLeaderboardData.Entry matchentries = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder> 
           getMatchentriesBuilderList() {
        return getMatchentriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder> 
          getMatchentriesFieldBuilder() {
        if (matchentriesBuilder_ == null) {
          matchentriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.ScoreLeaderboardData.EntryOrBuilder>(
                  matchentries_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          matchentries_ = null;
        }
        return matchentriesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:ScoreLeaderboardData)
    }

    static {
      defaultInstance = new ScoreLeaderboardData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:ScoreLeaderboardData)
  }

  public interface DeepPlayerStatsEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DeepPlayerStatsEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    int getAccountid();

    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    long getMatchId();

    /**
     * <code>optional uint32 mm_game_mode = 3;</code>
     */
    boolean hasMmGameMode();
    /**
     * <code>optional uint32 mm_game_mode = 3;</code>
     */
    int getMmGameMode();

    /**
     * <code>optional uint32 mapid = 4;</code>
     */
    boolean hasMapid();
    /**
     * <code>optional uint32 mapid = 4;</code>
     */
    int getMapid();

    /**
     * <code>optional bool b_starting_ct = 5;</code>
     */
    boolean hasBStartingCt();
    /**
     * <code>optional bool b_starting_ct = 5;</code>
     */
    boolean getBStartingCt();

    /**
     * <code>optional uint32 match_outcome = 6;</code>
     */
    boolean hasMatchOutcome();
    /**
     * <code>optional uint32 match_outcome = 6;</code>
     */
    int getMatchOutcome();

    /**
     * <code>optional uint32 rounds_won = 7;</code>
     */
    boolean hasRoundsWon();
    /**
     * <code>optional uint32 rounds_won = 7;</code>
     */
    int getRoundsWon();

    /**
     * <code>optional uint32 rounds_lost = 8;</code>
     */
    boolean hasRoundsLost();
    /**
     * <code>optional uint32 rounds_lost = 8;</code>
     */
    int getRoundsLost();

    /**
     * <code>optional uint32 stat_score = 9;</code>
     */
    boolean hasStatScore();
    /**
     * <code>optional uint32 stat_score = 9;</code>
     */
    int getStatScore();

    /**
     * <code>optional uint32 stat_deaths = 12;</code>
     */
    boolean hasStatDeaths();
    /**
     * <code>optional uint32 stat_deaths = 12;</code>
     */
    int getStatDeaths();

    /**
     * <code>optional uint32 stat_mvps = 13;</code>
     */
    boolean hasStatMvps();
    /**
     * <code>optional uint32 stat_mvps = 13;</code>
     */
    int getStatMvps();

    /**
     * <code>optional uint32 enemy_kills = 14;</code>
     */
    boolean hasEnemyKills();
    /**
     * <code>optional uint32 enemy_kills = 14;</code>
     */
    int getEnemyKills();

    /**
     * <code>optional uint32 enemy_headshots = 15;</code>
     */
    boolean hasEnemyHeadshots();
    /**
     * <code>optional uint32 enemy_headshots = 15;</code>
     */
    int getEnemyHeadshots();

    /**
     * <code>optional uint32 enemy_2ks = 16;</code>
     */
    boolean hasEnemy2Ks();
    /**
     * <code>optional uint32 enemy_2ks = 16;</code>
     */
    int getEnemy2Ks();

    /**
     * <code>optional uint32 enemy_3ks = 17;</code>
     */
    boolean hasEnemy3Ks();
    /**
     * <code>optional uint32 enemy_3ks = 17;</code>
     */
    int getEnemy3Ks();

    /**
     * <code>optional uint32 enemy_4ks = 18;</code>
     */
    boolean hasEnemy4Ks();
    /**
     * <code>optional uint32 enemy_4ks = 18;</code>
     */
    int getEnemy4Ks();

    /**
     * <code>optional uint32 total_damage = 19;</code>
     */
    boolean hasTotalDamage();
    /**
     * <code>optional uint32 total_damage = 19;</code>
     */
    int getTotalDamage();

    /**
     * <code>optional uint32 engagements_entry_count = 23;</code>
     */
    boolean hasEngagementsEntryCount();
    /**
     * <code>optional uint32 engagements_entry_count = 23;</code>
     */
    int getEngagementsEntryCount();

    /**
     * <code>optional uint32 engagements_entry_wins = 24;</code>
     */
    boolean hasEngagementsEntryWins();
    /**
     * <code>optional uint32 engagements_entry_wins = 24;</code>
     */
    int getEngagementsEntryWins();

    /**
     * <code>optional uint32 engagements_1v1_count = 25;</code>
     */
    boolean hasEngagements1V1Count();
    /**
     * <code>optional uint32 engagements_1v1_count = 25;</code>
     */
    int getEngagements1V1Count();

    /**
     * <code>optional uint32 engagements_1v1_wins = 26;</code>
     */
    boolean hasEngagements1V1Wins();
    /**
     * <code>optional uint32 engagements_1v1_wins = 26;</code>
     */
    int getEngagements1V1Wins();

    /**
     * <code>optional uint32 engagements_1v2_count = 27;</code>
     */
    boolean hasEngagements1V2Count();
    /**
     * <code>optional uint32 engagements_1v2_count = 27;</code>
     */
    int getEngagements1V2Count();

    /**
     * <code>optional uint32 engagements_1v2_wins = 28;</code>
     */
    boolean hasEngagements1V2Wins();
    /**
     * <code>optional uint32 engagements_1v2_wins = 28;</code>
     */
    int getEngagements1V2Wins();

    /**
     * <code>optional uint32 utility_count = 29;</code>
     */
    boolean hasUtilityCount();
    /**
     * <code>optional uint32 utility_count = 29;</code>
     */
    int getUtilityCount();

    /**
     * <code>optional uint32 utility_success = 30;</code>
     */
    boolean hasUtilitySuccess();
    /**
     * <code>optional uint32 utility_success = 30;</code>
     */
    int getUtilitySuccess();

    /**
     * <code>optional uint32 flash_count = 32;</code>
     */
    boolean hasFlashCount();
    /**
     * <code>optional uint32 flash_count = 32;</code>
     */
    int getFlashCount();

    /**
     * <code>optional uint32 flash_success = 33;</code>
     */
    boolean hasFlashSuccess();
    /**
     * <code>optional uint32 flash_success = 33;</code>
     */
    int getFlashSuccess();

    /**
     * <code>repeated uint32 mates = 34;</code>
     */
    java.util.List<java.lang.Integer> getMatesList();
    /**
     * <code>repeated uint32 mates = 34;</code>
     */
    int getMatesCount();
    /**
     * <code>repeated uint32 mates = 34;</code>
     */
    int getMates(int index);
  }
  /**
   * Protobuf type {@code DeepPlayerStatsEntry}
   *
   * <pre>
   * 330
   * </pre>
   */
  public static final class DeepPlayerStatsEntry extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DeepPlayerStatsEntry)
      DeepPlayerStatsEntryOrBuilder {
    // Use DeepPlayerStatsEntry.newBuilder() to construct.
    private DeepPlayerStatsEntry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeepPlayerStatsEntry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeepPlayerStatsEntry defaultInstance;
    public static DeepPlayerStatsEntry getDefaultInstance() {
      return defaultInstance;
    }

    public DeepPlayerStatsEntry getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeepPlayerStatsEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              mmGameMode_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mapid_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bStartingCt_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              matchOutcome_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              roundsWon_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              roundsLost_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              statScore_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              statDeaths_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              statMvps_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              enemyKills_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00001000;
              enemyHeadshots_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              enemy2Ks_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00004000;
              enemy3Ks_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00008000;
              enemy4Ks_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00010000;
              totalDamage_ = input.readUInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00020000;
              engagementsEntryCount_ = input.readUInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00040000;
              engagementsEntryWins_ = input.readUInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00080000;
              engagements1V1Count_ = input.readUInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x00100000;
              engagements1V1Wins_ = input.readUInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x00200000;
              engagements1V2Count_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00400000;
              engagements1V2Wins_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00800000;
              utilityCount_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x01000000;
              utilitySuccess_ = input.readUInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x02000000;
              flashCount_ = input.readUInt32();
              break;
            }
            case 264: {
              bitField0_ |= 0x04000000;
              flashSuccess_ = input.readUInt32();
              break;
            }
            case 272: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                mates_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x08000000;
              }
              mates_.add(input.readUInt32());
              break;
            }
            case 274: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000) && input.getBytesUntilLimit() > 0) {
                mates_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x08000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                mates_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          mates_ = java.util.Collections.unmodifiableList(mates_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerStatsEntry_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerStatsEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder.class);
    }

    public static com.google.protobuf.Parser<DeepPlayerStatsEntry> PARSER =
        new com.google.protobuf.AbstractParser<DeepPlayerStatsEntry>() {
      public DeepPlayerStatsEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeepPlayerStatsEntry(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeepPlayerStatsEntry> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int MM_GAME_MODE_FIELD_NUMBER = 3;
    private int mmGameMode_;
    /**
     * <code>optional uint32 mm_game_mode = 3;</code>
     */
    public boolean hasMmGameMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 mm_game_mode = 3;</code>
     */
    public int getMmGameMode() {
      return mmGameMode_;
    }

    public static final int MAPID_FIELD_NUMBER = 4;
    private int mapid_;
    /**
     * <code>optional uint32 mapid = 4;</code>
     */
    public boolean hasMapid() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 mapid = 4;</code>
     */
    public int getMapid() {
      return mapid_;
    }

    public static final int B_STARTING_CT_FIELD_NUMBER = 5;
    private boolean bStartingCt_;
    /**
     * <code>optional bool b_starting_ct = 5;</code>
     */
    public boolean hasBStartingCt() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool b_starting_ct = 5;</code>
     */
    public boolean getBStartingCt() {
      return bStartingCt_;
    }

    public static final int MATCH_OUTCOME_FIELD_NUMBER = 6;
    private int matchOutcome_;
    /**
     * <code>optional uint32 match_outcome = 6;</code>
     */
    public boolean hasMatchOutcome() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 match_outcome = 6;</code>
     */
    public int getMatchOutcome() {
      return matchOutcome_;
    }

    public static final int ROUNDS_WON_FIELD_NUMBER = 7;
    private int roundsWon_;
    /**
     * <code>optional uint32 rounds_won = 7;</code>
     */
    public boolean hasRoundsWon() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 rounds_won = 7;</code>
     */
    public int getRoundsWon() {
      return roundsWon_;
    }

    public static final int ROUNDS_LOST_FIELD_NUMBER = 8;
    private int roundsLost_;
    /**
     * <code>optional uint32 rounds_lost = 8;</code>
     */
    public boolean hasRoundsLost() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 rounds_lost = 8;</code>
     */
    public int getRoundsLost() {
      return roundsLost_;
    }

    public static final int STAT_SCORE_FIELD_NUMBER = 9;
    private int statScore_;
    /**
     * <code>optional uint32 stat_score = 9;</code>
     */
    public boolean hasStatScore() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 stat_score = 9;</code>
     */
    public int getStatScore() {
      return statScore_;
    }

    public static final int STAT_DEATHS_FIELD_NUMBER = 12;
    private int statDeaths_;
    /**
     * <code>optional uint32 stat_deaths = 12;</code>
     */
    public boolean hasStatDeaths() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 stat_deaths = 12;</code>
     */
    public int getStatDeaths() {
      return statDeaths_;
    }

    public static final int STAT_MVPS_FIELD_NUMBER = 13;
    private int statMvps_;
    /**
     * <code>optional uint32 stat_mvps = 13;</code>
     */
    public boolean hasStatMvps() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 stat_mvps = 13;</code>
     */
    public int getStatMvps() {
      return statMvps_;
    }

    public static final int ENEMY_KILLS_FIELD_NUMBER = 14;
    private int enemyKills_;
    /**
     * <code>optional uint32 enemy_kills = 14;</code>
     */
    public boolean hasEnemyKills() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 enemy_kills = 14;</code>
     */
    public int getEnemyKills() {
      return enemyKills_;
    }

    public static final int ENEMY_HEADSHOTS_FIELD_NUMBER = 15;
    private int enemyHeadshots_;
    /**
     * <code>optional uint32 enemy_headshots = 15;</code>
     */
    public boolean hasEnemyHeadshots() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 enemy_headshots = 15;</code>
     */
    public int getEnemyHeadshots() {
      return enemyHeadshots_;
    }

    public static final int ENEMY_2KS_FIELD_NUMBER = 16;
    private int enemy2Ks_;
    /**
     * <code>optional uint32 enemy_2ks = 16;</code>
     */
    public boolean hasEnemy2Ks() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 enemy_2ks = 16;</code>
     */
    public int getEnemy2Ks() {
      return enemy2Ks_;
    }

    public static final int ENEMY_3KS_FIELD_NUMBER = 17;
    private int enemy3Ks_;
    /**
     * <code>optional uint32 enemy_3ks = 17;</code>
     */
    public boolean hasEnemy3Ks() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 enemy_3ks = 17;</code>
     */
    public int getEnemy3Ks() {
      return enemy3Ks_;
    }

    public static final int ENEMY_4KS_FIELD_NUMBER = 18;
    private int enemy4Ks_;
    /**
     * <code>optional uint32 enemy_4ks = 18;</code>
     */
    public boolean hasEnemy4Ks() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 enemy_4ks = 18;</code>
     */
    public int getEnemy4Ks() {
      return enemy4Ks_;
    }

    public static final int TOTAL_DAMAGE_FIELD_NUMBER = 19;
    private int totalDamage_;
    /**
     * <code>optional uint32 total_damage = 19;</code>
     */
    public boolean hasTotalDamage() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 total_damage = 19;</code>
     */
    public int getTotalDamage() {
      return totalDamage_;
    }

    public static final int ENGAGEMENTS_ENTRY_COUNT_FIELD_NUMBER = 23;
    private int engagementsEntryCount_;
    /**
     * <code>optional uint32 engagements_entry_count = 23;</code>
     */
    public boolean hasEngagementsEntryCount() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 engagements_entry_count = 23;</code>
     */
    public int getEngagementsEntryCount() {
      return engagementsEntryCount_;
    }

    public static final int ENGAGEMENTS_ENTRY_WINS_FIELD_NUMBER = 24;
    private int engagementsEntryWins_;
    /**
     * <code>optional uint32 engagements_entry_wins = 24;</code>
     */
    public boolean hasEngagementsEntryWins() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint32 engagements_entry_wins = 24;</code>
     */
    public int getEngagementsEntryWins() {
      return engagementsEntryWins_;
    }

    public static final int ENGAGEMENTS_1V1_COUNT_FIELD_NUMBER = 25;
    private int engagements1V1Count_;
    /**
     * <code>optional uint32 engagements_1v1_count = 25;</code>
     */
    public boolean hasEngagements1V1Count() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint32 engagements_1v1_count = 25;</code>
     */
    public int getEngagements1V1Count() {
      return engagements1V1Count_;
    }

    public static final int ENGAGEMENTS_1V1_WINS_FIELD_NUMBER = 26;
    private int engagements1V1Wins_;
    /**
     * <code>optional uint32 engagements_1v1_wins = 26;</code>
     */
    public boolean hasEngagements1V1Wins() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 engagements_1v1_wins = 26;</code>
     */
    public int getEngagements1V1Wins() {
      return engagements1V1Wins_;
    }

    public static final int ENGAGEMENTS_1V2_COUNT_FIELD_NUMBER = 27;
    private int engagements1V2Count_;
    /**
     * <code>optional uint32 engagements_1v2_count = 27;</code>
     */
    public boolean hasEngagements1V2Count() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 engagements_1v2_count = 27;</code>
     */
    public int getEngagements1V2Count() {
      return engagements1V2Count_;
    }

    public static final int ENGAGEMENTS_1V2_WINS_FIELD_NUMBER = 28;
    private int engagements1V2Wins_;
    /**
     * <code>optional uint32 engagements_1v2_wins = 28;</code>
     */
    public boolean hasEngagements1V2Wins() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 engagements_1v2_wins = 28;</code>
     */
    public int getEngagements1V2Wins() {
      return engagements1V2Wins_;
    }

    public static final int UTILITY_COUNT_FIELD_NUMBER = 29;
    private int utilityCount_;
    /**
     * <code>optional uint32 utility_count = 29;</code>
     */
    public boolean hasUtilityCount() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint32 utility_count = 29;</code>
     */
    public int getUtilityCount() {
      return utilityCount_;
    }

    public static final int UTILITY_SUCCESS_FIELD_NUMBER = 30;
    private int utilitySuccess_;
    /**
     * <code>optional uint32 utility_success = 30;</code>
     */
    public boolean hasUtilitySuccess() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional uint32 utility_success = 30;</code>
     */
    public int getUtilitySuccess() {
      return utilitySuccess_;
    }

    public static final int FLASH_COUNT_FIELD_NUMBER = 32;
    private int flashCount_;
    /**
     * <code>optional uint32 flash_count = 32;</code>
     */
    public boolean hasFlashCount() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint32 flash_count = 32;</code>
     */
    public int getFlashCount() {
      return flashCount_;
    }

    public static final int FLASH_SUCCESS_FIELD_NUMBER = 33;
    private int flashSuccess_;
    /**
     * <code>optional uint32 flash_success = 33;</code>
     */
    public boolean hasFlashSuccess() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional uint32 flash_success = 33;</code>
     */
    public int getFlashSuccess() {
      return flashSuccess_;
    }

    public static final int MATES_FIELD_NUMBER = 34;
    private java.util.List<java.lang.Integer> mates_;
    /**
     * <code>repeated uint32 mates = 34;</code>
     */
    public java.util.List<java.lang.Integer>
        getMatesList() {
      return mates_;
    }
    /**
     * <code>repeated uint32 mates = 34;</code>
     */
    public int getMatesCount() {
      return mates_.size();
    }
    /**
     * <code>repeated uint32 mates = 34;</code>
     */
    public int getMates(int index) {
      return mates_.get(index);
    }

    private void initFields() {
      accountid_ = 0;
      matchId_ = 0L;
      mmGameMode_ = 0;
      mapid_ = 0;
      bStartingCt_ = false;
      matchOutcome_ = 0;
      roundsWon_ = 0;
      roundsLost_ = 0;
      statScore_ = 0;
      statDeaths_ = 0;
      statMvps_ = 0;
      enemyKills_ = 0;
      enemyHeadshots_ = 0;
      enemy2Ks_ = 0;
      enemy3Ks_ = 0;
      enemy4Ks_ = 0;
      totalDamage_ = 0;
      engagementsEntryCount_ = 0;
      engagementsEntryWins_ = 0;
      engagements1V1Count_ = 0;
      engagements1V1Wins_ = 0;
      engagements1V2Count_ = 0;
      engagements1V2Wins_ = 0;
      utilityCount_ = 0;
      utilitySuccess_ = 0;
      flashCount_ = 0;
      flashSuccess_ = 0;
      mates_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, mmGameMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, mapid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, bStartingCt_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, matchOutcome_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, roundsWon_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, roundsLost_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, statScore_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(12, statDeaths_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(13, statMvps_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(14, enemyKills_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(15, enemyHeadshots_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(16, enemy2Ks_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(17, enemy3Ks_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(18, enemy4Ks_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(19, totalDamage_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(23, engagementsEntryCount_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt32(24, engagementsEntryWins_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt32(25, engagements1V1Count_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(26, engagements1V1Wins_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(27, engagements1V2Count_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(28, engagements1V2Wins_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(29, utilityCount_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeUInt32(30, utilitySuccess_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt32(32, flashCount_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeUInt32(33, flashSuccess_);
      }
      for (int i = 0; i < mates_.size(); i++) {
        output.writeUInt32(34, mates_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, mmGameMode_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, mapid_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, bStartingCt_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, matchOutcome_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, roundsWon_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, roundsLost_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, statScore_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, statDeaths_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, statMvps_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, enemyKills_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, enemyHeadshots_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, enemy2Ks_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, enemy3Ks_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, enemy4Ks_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, totalDamage_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, engagementsEntryCount_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, engagementsEntryWins_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(25, engagements1V1Count_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, engagements1V1Wins_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, engagements1V2Count_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, engagements1V2Wins_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, utilityCount_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, utilitySuccess_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, flashCount_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(33, flashSuccess_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mates_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(mates_.get(i));
        }
        size += dataSize;
        size += 2 * getMatesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeepPlayerStatsEntry}
     *
     * <pre>
     * 330
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DeepPlayerStatsEntry)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerStatsEntry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerStatsEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        mmGameMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        mapid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bStartingCt_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        matchOutcome_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        roundsWon_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        roundsLost_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        statScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        statDeaths_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        statMvps_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        enemyKills_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        enemyHeadshots_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        enemy2Ks_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        enemy3Ks_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        enemy4Ks_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        totalDamage_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        engagementsEntryCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        engagementsEntryWins_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        engagements1V1Count_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        engagements1V1Wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        engagements1V2Count_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        engagements1V2Wins_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        utilityCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        utilitySuccess_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        flashCount_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        flashSuccess_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        mates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerStatsEntry_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mmGameMode_ = mmGameMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mapid_ = mapid_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bStartingCt_ = bStartingCt_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.matchOutcome_ = matchOutcome_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.roundsWon_ = roundsWon_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.roundsLost_ = roundsLost_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.statScore_ = statScore_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.statDeaths_ = statDeaths_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.statMvps_ = statMvps_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.enemyKills_ = enemyKills_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.enemyHeadshots_ = enemyHeadshots_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.enemy2Ks_ = enemy2Ks_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.enemy3Ks_ = enemy3Ks_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.enemy4Ks_ = enemy4Ks_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.totalDamage_ = totalDamage_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.engagementsEntryCount_ = engagementsEntryCount_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.engagementsEntryWins_ = engagementsEntryWins_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.engagements1V1Count_ = engagements1V1Count_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.engagements1V1Wins_ = engagements1V1Wins_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.engagements1V2Count_ = engagements1V2Count_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.engagements1V2Wins_ = engagements1V2Wins_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.utilityCount_ = utilityCount_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.utilitySuccess_ = utilitySuccess_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.flashCount_ = flashCount_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.flashSuccess_ = flashSuccess_;
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          mates_ = java.util.Collections.unmodifiableList(mates_);
          bitField0_ = (bitField0_ & ~0x08000000);
        }
        result.mates_ = mates_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance()) return this;
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasMmGameMode()) {
          setMmGameMode(other.getMmGameMode());
        }
        if (other.hasMapid()) {
          setMapid(other.getMapid());
        }
        if (other.hasBStartingCt()) {
          setBStartingCt(other.getBStartingCt());
        }
        if (other.hasMatchOutcome()) {
          setMatchOutcome(other.getMatchOutcome());
        }
        if (other.hasRoundsWon()) {
          setRoundsWon(other.getRoundsWon());
        }
        if (other.hasRoundsLost()) {
          setRoundsLost(other.getRoundsLost());
        }
        if (other.hasStatScore()) {
          setStatScore(other.getStatScore());
        }
        if (other.hasStatDeaths()) {
          setStatDeaths(other.getStatDeaths());
        }
        if (other.hasStatMvps()) {
          setStatMvps(other.getStatMvps());
        }
        if (other.hasEnemyKills()) {
          setEnemyKills(other.getEnemyKills());
        }
        if (other.hasEnemyHeadshots()) {
          setEnemyHeadshots(other.getEnemyHeadshots());
        }
        if (other.hasEnemy2Ks()) {
          setEnemy2Ks(other.getEnemy2Ks());
        }
        if (other.hasEnemy3Ks()) {
          setEnemy3Ks(other.getEnemy3Ks());
        }
        if (other.hasEnemy4Ks()) {
          setEnemy4Ks(other.getEnemy4Ks());
        }
        if (other.hasTotalDamage()) {
          setTotalDamage(other.getTotalDamage());
        }
        if (other.hasEngagementsEntryCount()) {
          setEngagementsEntryCount(other.getEngagementsEntryCount());
        }
        if (other.hasEngagementsEntryWins()) {
          setEngagementsEntryWins(other.getEngagementsEntryWins());
        }
        if (other.hasEngagements1V1Count()) {
          setEngagements1V1Count(other.getEngagements1V1Count());
        }
        if (other.hasEngagements1V1Wins()) {
          setEngagements1V1Wins(other.getEngagements1V1Wins());
        }
        if (other.hasEngagements1V2Count()) {
          setEngagements1V2Count(other.getEngagements1V2Count());
        }
        if (other.hasEngagements1V2Wins()) {
          setEngagements1V2Wins(other.getEngagements1V2Wins());
        }
        if (other.hasUtilityCount()) {
          setUtilityCount(other.getUtilityCount());
        }
        if (other.hasUtilitySuccess()) {
          setUtilitySuccess(other.getUtilitySuccess());
        }
        if (other.hasFlashCount()) {
          setFlashCount(other.getFlashCount());
        }
        if (other.hasFlashSuccess()) {
          setFlashSuccess(other.getFlashSuccess());
        }
        if (!other.mates_.isEmpty()) {
          if (mates_.isEmpty()) {
            mates_ = other.mates_;
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ensureMatesIsMutable();
            mates_.addAll(other.mates_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000001;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private int mmGameMode_ ;
      /**
       * <code>optional uint32 mm_game_mode = 3;</code>
       */
      public boolean hasMmGameMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 mm_game_mode = 3;</code>
       */
      public int getMmGameMode() {
        return mmGameMode_;
      }
      /**
       * <code>optional uint32 mm_game_mode = 3;</code>
       */
      public Builder setMmGameMode(int value) {
        bitField0_ |= 0x00000004;
        mmGameMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mm_game_mode = 3;</code>
       */
      public Builder clearMmGameMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mmGameMode_ = 0;
        onChanged();
        return this;
      }

      private int mapid_ ;
      /**
       * <code>optional uint32 mapid = 4;</code>
       */
      public boolean hasMapid() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 mapid = 4;</code>
       */
      public int getMapid() {
        return mapid_;
      }
      /**
       * <code>optional uint32 mapid = 4;</code>
       */
      public Builder setMapid(int value) {
        bitField0_ |= 0x00000008;
        mapid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mapid = 4;</code>
       */
      public Builder clearMapid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mapid_ = 0;
        onChanged();
        return this;
      }

      private boolean bStartingCt_ ;
      /**
       * <code>optional bool b_starting_ct = 5;</code>
       */
      public boolean hasBStartingCt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool b_starting_ct = 5;</code>
       */
      public boolean getBStartingCt() {
        return bStartingCt_;
      }
      /**
       * <code>optional bool b_starting_ct = 5;</code>
       */
      public Builder setBStartingCt(boolean value) {
        bitField0_ |= 0x00000010;
        bStartingCt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool b_starting_ct = 5;</code>
       */
      public Builder clearBStartingCt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bStartingCt_ = false;
        onChanged();
        return this;
      }

      private int matchOutcome_ ;
      /**
       * <code>optional uint32 match_outcome = 6;</code>
       */
      public boolean hasMatchOutcome() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 match_outcome = 6;</code>
       */
      public int getMatchOutcome() {
        return matchOutcome_;
      }
      /**
       * <code>optional uint32 match_outcome = 6;</code>
       */
      public Builder setMatchOutcome(int value) {
        bitField0_ |= 0x00000020;
        matchOutcome_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_outcome = 6;</code>
       */
      public Builder clearMatchOutcome() {
        bitField0_ = (bitField0_ & ~0x00000020);
        matchOutcome_ = 0;
        onChanged();
        return this;
      }

      private int roundsWon_ ;
      /**
       * <code>optional uint32 rounds_won = 7;</code>
       */
      public boolean hasRoundsWon() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 rounds_won = 7;</code>
       */
      public int getRoundsWon() {
        return roundsWon_;
      }
      /**
       * <code>optional uint32 rounds_won = 7;</code>
       */
      public Builder setRoundsWon(int value) {
        bitField0_ |= 0x00000040;
        roundsWon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rounds_won = 7;</code>
       */
      public Builder clearRoundsWon() {
        bitField0_ = (bitField0_ & ~0x00000040);
        roundsWon_ = 0;
        onChanged();
        return this;
      }

      private int roundsLost_ ;
      /**
       * <code>optional uint32 rounds_lost = 8;</code>
       */
      public boolean hasRoundsLost() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 rounds_lost = 8;</code>
       */
      public int getRoundsLost() {
        return roundsLost_;
      }
      /**
       * <code>optional uint32 rounds_lost = 8;</code>
       */
      public Builder setRoundsLost(int value) {
        bitField0_ |= 0x00000080;
        roundsLost_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rounds_lost = 8;</code>
       */
      public Builder clearRoundsLost() {
        bitField0_ = (bitField0_ & ~0x00000080);
        roundsLost_ = 0;
        onChanged();
        return this;
      }

      private int statScore_ ;
      /**
       * <code>optional uint32 stat_score = 9;</code>
       */
      public boolean hasStatScore() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 stat_score = 9;</code>
       */
      public int getStatScore() {
        return statScore_;
      }
      /**
       * <code>optional uint32 stat_score = 9;</code>
       */
      public Builder setStatScore(int value) {
        bitField0_ |= 0x00000100;
        statScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stat_score = 9;</code>
       */
      public Builder clearStatScore() {
        bitField0_ = (bitField0_ & ~0x00000100);
        statScore_ = 0;
        onChanged();
        return this;
      }

      private int statDeaths_ ;
      /**
       * <code>optional uint32 stat_deaths = 12;</code>
       */
      public boolean hasStatDeaths() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 stat_deaths = 12;</code>
       */
      public int getStatDeaths() {
        return statDeaths_;
      }
      /**
       * <code>optional uint32 stat_deaths = 12;</code>
       */
      public Builder setStatDeaths(int value) {
        bitField0_ |= 0x00000200;
        statDeaths_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stat_deaths = 12;</code>
       */
      public Builder clearStatDeaths() {
        bitField0_ = (bitField0_ & ~0x00000200);
        statDeaths_ = 0;
        onChanged();
        return this;
      }

      private int statMvps_ ;
      /**
       * <code>optional uint32 stat_mvps = 13;</code>
       */
      public boolean hasStatMvps() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 stat_mvps = 13;</code>
       */
      public int getStatMvps() {
        return statMvps_;
      }
      /**
       * <code>optional uint32 stat_mvps = 13;</code>
       */
      public Builder setStatMvps(int value) {
        bitField0_ |= 0x00000400;
        statMvps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stat_mvps = 13;</code>
       */
      public Builder clearStatMvps() {
        bitField0_ = (bitField0_ & ~0x00000400);
        statMvps_ = 0;
        onChanged();
        return this;
      }

      private int enemyKills_ ;
      /**
       * <code>optional uint32 enemy_kills = 14;</code>
       */
      public boolean hasEnemyKills() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 enemy_kills = 14;</code>
       */
      public int getEnemyKills() {
        return enemyKills_;
      }
      /**
       * <code>optional uint32 enemy_kills = 14;</code>
       */
      public Builder setEnemyKills(int value) {
        bitField0_ |= 0x00000800;
        enemyKills_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enemy_kills = 14;</code>
       */
      public Builder clearEnemyKills() {
        bitField0_ = (bitField0_ & ~0x00000800);
        enemyKills_ = 0;
        onChanged();
        return this;
      }

      private int enemyHeadshots_ ;
      /**
       * <code>optional uint32 enemy_headshots = 15;</code>
       */
      public boolean hasEnemyHeadshots() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 enemy_headshots = 15;</code>
       */
      public int getEnemyHeadshots() {
        return enemyHeadshots_;
      }
      /**
       * <code>optional uint32 enemy_headshots = 15;</code>
       */
      public Builder setEnemyHeadshots(int value) {
        bitField0_ |= 0x00001000;
        enemyHeadshots_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enemy_headshots = 15;</code>
       */
      public Builder clearEnemyHeadshots() {
        bitField0_ = (bitField0_ & ~0x00001000);
        enemyHeadshots_ = 0;
        onChanged();
        return this;
      }

      private int enemy2Ks_ ;
      /**
       * <code>optional uint32 enemy_2ks = 16;</code>
       */
      public boolean hasEnemy2Ks() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 enemy_2ks = 16;</code>
       */
      public int getEnemy2Ks() {
        return enemy2Ks_;
      }
      /**
       * <code>optional uint32 enemy_2ks = 16;</code>
       */
      public Builder setEnemy2Ks(int value) {
        bitField0_ |= 0x00002000;
        enemy2Ks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enemy_2ks = 16;</code>
       */
      public Builder clearEnemy2Ks() {
        bitField0_ = (bitField0_ & ~0x00002000);
        enemy2Ks_ = 0;
        onChanged();
        return this;
      }

      private int enemy3Ks_ ;
      /**
       * <code>optional uint32 enemy_3ks = 17;</code>
       */
      public boolean hasEnemy3Ks() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 enemy_3ks = 17;</code>
       */
      public int getEnemy3Ks() {
        return enemy3Ks_;
      }
      /**
       * <code>optional uint32 enemy_3ks = 17;</code>
       */
      public Builder setEnemy3Ks(int value) {
        bitField0_ |= 0x00004000;
        enemy3Ks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enemy_3ks = 17;</code>
       */
      public Builder clearEnemy3Ks() {
        bitField0_ = (bitField0_ & ~0x00004000);
        enemy3Ks_ = 0;
        onChanged();
        return this;
      }

      private int enemy4Ks_ ;
      /**
       * <code>optional uint32 enemy_4ks = 18;</code>
       */
      public boolean hasEnemy4Ks() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 enemy_4ks = 18;</code>
       */
      public int getEnemy4Ks() {
        return enemy4Ks_;
      }
      /**
       * <code>optional uint32 enemy_4ks = 18;</code>
       */
      public Builder setEnemy4Ks(int value) {
        bitField0_ |= 0x00008000;
        enemy4Ks_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 enemy_4ks = 18;</code>
       */
      public Builder clearEnemy4Ks() {
        bitField0_ = (bitField0_ & ~0x00008000);
        enemy4Ks_ = 0;
        onChanged();
        return this;
      }

      private int totalDamage_ ;
      /**
       * <code>optional uint32 total_damage = 19;</code>
       */
      public boolean hasTotalDamage() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 total_damage = 19;</code>
       */
      public int getTotalDamage() {
        return totalDamage_;
      }
      /**
       * <code>optional uint32 total_damage = 19;</code>
       */
      public Builder setTotalDamage(int value) {
        bitField0_ |= 0x00010000;
        totalDamage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 total_damage = 19;</code>
       */
      public Builder clearTotalDamage() {
        bitField0_ = (bitField0_ & ~0x00010000);
        totalDamage_ = 0;
        onChanged();
        return this;
      }

      private int engagementsEntryCount_ ;
      /**
       * <code>optional uint32 engagements_entry_count = 23;</code>
       */
      public boolean hasEngagementsEntryCount() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 engagements_entry_count = 23;</code>
       */
      public int getEngagementsEntryCount() {
        return engagementsEntryCount_;
      }
      /**
       * <code>optional uint32 engagements_entry_count = 23;</code>
       */
      public Builder setEngagementsEntryCount(int value) {
        bitField0_ |= 0x00020000;
        engagementsEntryCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engagements_entry_count = 23;</code>
       */
      public Builder clearEngagementsEntryCount() {
        bitField0_ = (bitField0_ & ~0x00020000);
        engagementsEntryCount_ = 0;
        onChanged();
        return this;
      }

      private int engagementsEntryWins_ ;
      /**
       * <code>optional uint32 engagements_entry_wins = 24;</code>
       */
      public boolean hasEngagementsEntryWins() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 engagements_entry_wins = 24;</code>
       */
      public int getEngagementsEntryWins() {
        return engagementsEntryWins_;
      }
      /**
       * <code>optional uint32 engagements_entry_wins = 24;</code>
       */
      public Builder setEngagementsEntryWins(int value) {
        bitField0_ |= 0x00040000;
        engagementsEntryWins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engagements_entry_wins = 24;</code>
       */
      public Builder clearEngagementsEntryWins() {
        bitField0_ = (bitField0_ & ~0x00040000);
        engagementsEntryWins_ = 0;
        onChanged();
        return this;
      }

      private int engagements1V1Count_ ;
      /**
       * <code>optional uint32 engagements_1v1_count = 25;</code>
       */
      public boolean hasEngagements1V1Count() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 engagements_1v1_count = 25;</code>
       */
      public int getEngagements1V1Count() {
        return engagements1V1Count_;
      }
      /**
       * <code>optional uint32 engagements_1v1_count = 25;</code>
       */
      public Builder setEngagements1V1Count(int value) {
        bitField0_ |= 0x00080000;
        engagements1V1Count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engagements_1v1_count = 25;</code>
       */
      public Builder clearEngagements1V1Count() {
        bitField0_ = (bitField0_ & ~0x00080000);
        engagements1V1Count_ = 0;
        onChanged();
        return this;
      }

      private int engagements1V1Wins_ ;
      /**
       * <code>optional uint32 engagements_1v1_wins = 26;</code>
       */
      public boolean hasEngagements1V1Wins() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 engagements_1v1_wins = 26;</code>
       */
      public int getEngagements1V1Wins() {
        return engagements1V1Wins_;
      }
      /**
       * <code>optional uint32 engagements_1v1_wins = 26;</code>
       */
      public Builder setEngagements1V1Wins(int value) {
        bitField0_ |= 0x00100000;
        engagements1V1Wins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engagements_1v1_wins = 26;</code>
       */
      public Builder clearEngagements1V1Wins() {
        bitField0_ = (bitField0_ & ~0x00100000);
        engagements1V1Wins_ = 0;
        onChanged();
        return this;
      }

      private int engagements1V2Count_ ;
      /**
       * <code>optional uint32 engagements_1v2_count = 27;</code>
       */
      public boolean hasEngagements1V2Count() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 engagements_1v2_count = 27;</code>
       */
      public int getEngagements1V2Count() {
        return engagements1V2Count_;
      }
      /**
       * <code>optional uint32 engagements_1v2_count = 27;</code>
       */
      public Builder setEngagements1V2Count(int value) {
        bitField0_ |= 0x00200000;
        engagements1V2Count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engagements_1v2_count = 27;</code>
       */
      public Builder clearEngagements1V2Count() {
        bitField0_ = (bitField0_ & ~0x00200000);
        engagements1V2Count_ = 0;
        onChanged();
        return this;
      }

      private int engagements1V2Wins_ ;
      /**
       * <code>optional uint32 engagements_1v2_wins = 28;</code>
       */
      public boolean hasEngagements1V2Wins() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 engagements_1v2_wins = 28;</code>
       */
      public int getEngagements1V2Wins() {
        return engagements1V2Wins_;
      }
      /**
       * <code>optional uint32 engagements_1v2_wins = 28;</code>
       */
      public Builder setEngagements1V2Wins(int value) {
        bitField0_ |= 0x00400000;
        engagements1V2Wins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engagements_1v2_wins = 28;</code>
       */
      public Builder clearEngagements1V2Wins() {
        bitField0_ = (bitField0_ & ~0x00400000);
        engagements1V2Wins_ = 0;
        onChanged();
        return this;
      }

      private int utilityCount_ ;
      /**
       * <code>optional uint32 utility_count = 29;</code>
       */
      public boolean hasUtilityCount() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 utility_count = 29;</code>
       */
      public int getUtilityCount() {
        return utilityCount_;
      }
      /**
       * <code>optional uint32 utility_count = 29;</code>
       */
      public Builder setUtilityCount(int value) {
        bitField0_ |= 0x00800000;
        utilityCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 utility_count = 29;</code>
       */
      public Builder clearUtilityCount() {
        bitField0_ = (bitField0_ & ~0x00800000);
        utilityCount_ = 0;
        onChanged();
        return this;
      }

      private int utilitySuccess_ ;
      /**
       * <code>optional uint32 utility_success = 30;</code>
       */
      public boolean hasUtilitySuccess() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 utility_success = 30;</code>
       */
      public int getUtilitySuccess() {
        return utilitySuccess_;
      }
      /**
       * <code>optional uint32 utility_success = 30;</code>
       */
      public Builder setUtilitySuccess(int value) {
        bitField0_ |= 0x01000000;
        utilitySuccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 utility_success = 30;</code>
       */
      public Builder clearUtilitySuccess() {
        bitField0_ = (bitField0_ & ~0x01000000);
        utilitySuccess_ = 0;
        onChanged();
        return this;
      }

      private int flashCount_ ;
      /**
       * <code>optional uint32 flash_count = 32;</code>
       */
      public boolean hasFlashCount() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 flash_count = 32;</code>
       */
      public int getFlashCount() {
        return flashCount_;
      }
      /**
       * <code>optional uint32 flash_count = 32;</code>
       */
      public Builder setFlashCount(int value) {
        bitField0_ |= 0x02000000;
        flashCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 flash_count = 32;</code>
       */
      public Builder clearFlashCount() {
        bitField0_ = (bitField0_ & ~0x02000000);
        flashCount_ = 0;
        onChanged();
        return this;
      }

      private int flashSuccess_ ;
      /**
       * <code>optional uint32 flash_success = 33;</code>
       */
      public boolean hasFlashSuccess() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 flash_success = 33;</code>
       */
      public int getFlashSuccess() {
        return flashSuccess_;
      }
      /**
       * <code>optional uint32 flash_success = 33;</code>
       */
      public Builder setFlashSuccess(int value) {
        bitField0_ |= 0x04000000;
        flashSuccess_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 flash_success = 33;</code>
       */
      public Builder clearFlashSuccess() {
        bitField0_ = (bitField0_ & ~0x04000000);
        flashSuccess_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> mates_ = java.util.Collections.emptyList();
      private void ensureMatesIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          mates_ = new java.util.ArrayList<java.lang.Integer>(mates_);
          bitField0_ |= 0x08000000;
         }
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public java.util.List<java.lang.Integer>
          getMatesList() {
        return java.util.Collections.unmodifiableList(mates_);
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public int getMatesCount() {
        return mates_.size();
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public int getMates(int index) {
        return mates_.get(index);
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public Builder setMates(
          int index, int value) {
        ensureMatesIsMutable();
        mates_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public Builder addMates(int value) {
        ensureMatesIsMutable();
        mates_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public Builder addAllMates(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMatesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mates_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 mates = 34;</code>
       */
      public Builder clearMates() {
        mates_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x08000000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeepPlayerStatsEntry)
    }

    static {
      defaultInstance = new DeepPlayerStatsEntry(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeepPlayerStatsEntry)
  }

  public interface DeepPlayerMatchEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DeepPlayerMatchEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    int getAccountid();

    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    long getMatchId();

    /**
     * <code>optional uint32 event_id = 3;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional uint32 event_id = 3;</code>
     */
    int getEventId();

    /**
     * <code>optional uint32 event_type = 4;</code>
     */
    boolean hasEventType();
    /**
     * <code>optional uint32 event_type = 4;</code>
     */
    int getEventType();

    /**
     * <code>optional bool b_playing_ct = 5;</code>
     */
    boolean hasBPlayingCt();
    /**
     * <code>optional bool b_playing_ct = 5;</code>
     */
    boolean getBPlayingCt();

    /**
     * <code>optional int32 user_pos_x = 6;</code>
     */
    boolean hasUserPosX();
    /**
     * <code>optional int32 user_pos_x = 6;</code>
     */
    int getUserPosX();

    /**
     * <code>optional int32 user_pos_y = 7;</code>
     */
    boolean hasUserPosY();
    /**
     * <code>optional int32 user_pos_y = 7;</code>
     */
    int getUserPosY();

    /**
     * <code>optional int32 user_pos_z = 12;</code>
     */
    boolean hasUserPosZ();
    /**
     * <code>optional int32 user_pos_z = 12;</code>
     */
    int getUserPosZ();

    /**
     * <code>optional uint32 user_defidx = 8;</code>
     */
    boolean hasUserDefidx();
    /**
     * <code>optional uint32 user_defidx = 8;</code>
     */
    int getUserDefidx();

    /**
     * <code>optional int32 other_pos_x = 9;</code>
     */
    boolean hasOtherPosX();
    /**
     * <code>optional int32 other_pos_x = 9;</code>
     */
    int getOtherPosX();

    /**
     * <code>optional int32 other_pos_y = 10;</code>
     */
    boolean hasOtherPosY();
    /**
     * <code>optional int32 other_pos_y = 10;</code>
     */
    int getOtherPosY();

    /**
     * <code>optional int32 other_pos_z = 13;</code>
     */
    boolean hasOtherPosZ();
    /**
     * <code>optional int32 other_pos_z = 13;</code>
     */
    int getOtherPosZ();

    /**
     * <code>optional uint32 other_defidx = 11;</code>
     */
    boolean hasOtherDefidx();
    /**
     * <code>optional uint32 other_defidx = 11;</code>
     */
    int getOtherDefidx();

    /**
     * <code>optional int32 event_data = 14;</code>
     */
    boolean hasEventData();
    /**
     * <code>optional int32 event_data = 14;</code>
     */
    int getEventData();
  }
  /**
   * Protobuf type {@code DeepPlayerMatchEvent}
   *
   * <pre>
   * 361
   * </pre>
   */
  public static final class DeepPlayerMatchEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DeepPlayerMatchEvent)
      DeepPlayerMatchEventOrBuilder {
    // Use DeepPlayerMatchEvent.newBuilder() to construct.
    private DeepPlayerMatchEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DeepPlayerMatchEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DeepPlayerMatchEvent defaultInstance;
    public static DeepPlayerMatchEvent getDefaultInstance() {
      return defaultInstance;
    }

    public DeepPlayerMatchEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DeepPlayerMatchEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              eventId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              eventType_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bPlayingCt_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              userPosX_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              userPosY_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000100;
              userDefidx_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000200;
              otherPosX_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000400;
              otherPosY_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00001000;
              otherDefidx_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              userPosZ_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              otherPosZ_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              eventData_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerMatchEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerMatchEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<DeepPlayerMatchEvent> PARSER =
        new com.google.protobuf.AbstractParser<DeepPlayerMatchEvent>() {
      public DeepPlayerMatchEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeepPlayerMatchEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DeepPlayerMatchEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 2;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 match_id = 2;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int EVENT_ID_FIELD_NUMBER = 3;
    private int eventId_;
    /**
     * <code>optional uint32 event_id = 3;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 event_id = 3;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    public static final int EVENT_TYPE_FIELD_NUMBER = 4;
    private int eventType_;
    /**
     * <code>optional uint32 event_type = 4;</code>
     */
    public boolean hasEventType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 event_type = 4;</code>
     */
    public int getEventType() {
      return eventType_;
    }

    public static final int B_PLAYING_CT_FIELD_NUMBER = 5;
    private boolean bPlayingCt_;
    /**
     * <code>optional bool b_playing_ct = 5;</code>
     */
    public boolean hasBPlayingCt() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool b_playing_ct = 5;</code>
     */
    public boolean getBPlayingCt() {
      return bPlayingCt_;
    }

    public static final int USER_POS_X_FIELD_NUMBER = 6;
    private int userPosX_;
    /**
     * <code>optional int32 user_pos_x = 6;</code>
     */
    public boolean hasUserPosX() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 user_pos_x = 6;</code>
     */
    public int getUserPosX() {
      return userPosX_;
    }

    public static final int USER_POS_Y_FIELD_NUMBER = 7;
    private int userPosY_;
    /**
     * <code>optional int32 user_pos_y = 7;</code>
     */
    public boolean hasUserPosY() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 user_pos_y = 7;</code>
     */
    public int getUserPosY() {
      return userPosY_;
    }

    public static final int USER_POS_Z_FIELD_NUMBER = 12;
    private int userPosZ_;
    /**
     * <code>optional int32 user_pos_z = 12;</code>
     */
    public boolean hasUserPosZ() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 user_pos_z = 12;</code>
     */
    public int getUserPosZ() {
      return userPosZ_;
    }

    public static final int USER_DEFIDX_FIELD_NUMBER = 8;
    private int userDefidx_;
    /**
     * <code>optional uint32 user_defidx = 8;</code>
     */
    public boolean hasUserDefidx() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 user_defidx = 8;</code>
     */
    public int getUserDefidx() {
      return userDefidx_;
    }

    public static final int OTHER_POS_X_FIELD_NUMBER = 9;
    private int otherPosX_;
    /**
     * <code>optional int32 other_pos_x = 9;</code>
     */
    public boolean hasOtherPosX() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 other_pos_x = 9;</code>
     */
    public int getOtherPosX() {
      return otherPosX_;
    }

    public static final int OTHER_POS_Y_FIELD_NUMBER = 10;
    private int otherPosY_;
    /**
     * <code>optional int32 other_pos_y = 10;</code>
     */
    public boolean hasOtherPosY() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 other_pos_y = 10;</code>
     */
    public int getOtherPosY() {
      return otherPosY_;
    }

    public static final int OTHER_POS_Z_FIELD_NUMBER = 13;
    private int otherPosZ_;
    /**
     * <code>optional int32 other_pos_z = 13;</code>
     */
    public boolean hasOtherPosZ() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 other_pos_z = 13;</code>
     */
    public int getOtherPosZ() {
      return otherPosZ_;
    }

    public static final int OTHER_DEFIDX_FIELD_NUMBER = 11;
    private int otherDefidx_;
    /**
     * <code>optional uint32 other_defidx = 11;</code>
     */
    public boolean hasOtherDefidx() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 other_defidx = 11;</code>
     */
    public int getOtherDefidx() {
      return otherDefidx_;
    }

    public static final int EVENT_DATA_FIELD_NUMBER = 14;
    private int eventData_;
    /**
     * <code>optional int32 event_data = 14;</code>
     */
    public boolean hasEventData() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 event_data = 14;</code>
     */
    public int getEventData() {
      return eventData_;
    }

    private void initFields() {
      accountid_ = 0;
      matchId_ = 0L;
      eventId_ = 0;
      eventType_ = 0;
      bPlayingCt_ = false;
      userPosX_ = 0;
      userPosY_ = 0;
      userPosZ_ = 0;
      userDefidx_ = 0;
      otherPosX_ = 0;
      otherPosY_ = 0;
      otherPosZ_ = 0;
      otherDefidx_ = 0;
      eventData_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, eventType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, bPlayingCt_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, userPosX_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, userPosY_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(8, userDefidx_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(9, otherPosX_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(10, otherPosY_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(11, otherDefidx_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, userPosZ_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, otherPosZ_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, eventData_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, eventId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, eventType_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, bPlayingCt_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, userPosX_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, userPosY_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, userDefidx_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, otherPosX_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, otherPosY_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, otherDefidx_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, userPosZ_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, otherPosZ_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, eventData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DeepPlayerMatchEvent}
     *
     * <pre>
     * 361
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DeepPlayerMatchEvent)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerMatchEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerMatchEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bPlayingCt_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        userPosX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        userPosY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        userPosZ_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        userDefidx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        otherPosX_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        otherPosY_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        otherPosZ_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        otherDefidx_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        eventData_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_DeepPlayerMatchEvent_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.eventType_ = eventType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bPlayingCt_ = bPlayingCt_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.userPosX_ = userPosX_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.userPosY_ = userPosY_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.userPosZ_ = userPosZ_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.userDefidx_ = userDefidx_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.otherPosX_ = otherPosX_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.otherPosY_ = otherPosY_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.otherPosZ_ = otherPosZ_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.otherDefidx_ = otherDefidx_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.eventData_ = eventData_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.getDefaultInstance()) return this;
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventType()) {
          setEventType(other.getEventType());
        }
        if (other.hasBPlayingCt()) {
          setBPlayingCt(other.getBPlayingCt());
        }
        if (other.hasUserPosX()) {
          setUserPosX(other.getUserPosX());
        }
        if (other.hasUserPosY()) {
          setUserPosY(other.getUserPosY());
        }
        if (other.hasUserPosZ()) {
          setUserPosZ(other.getUserPosZ());
        }
        if (other.hasUserDefidx()) {
          setUserDefidx(other.getUserDefidx());
        }
        if (other.hasOtherPosX()) {
          setOtherPosX(other.getOtherPosX());
        }
        if (other.hasOtherPosY()) {
          setOtherPosY(other.getOtherPosY());
        }
        if (other.hasOtherPosZ()) {
          setOtherPosZ(other.getOtherPosZ());
        }
        if (other.hasOtherDefidx()) {
          setOtherDefidx(other.getOtherDefidx());
        }
        if (other.hasEventData()) {
          setEventData(other.getEventData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000001;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000002;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 2;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private int eventId_ ;
      /**
       * <code>optional uint32 event_id = 3;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 event_id = 3;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional uint32 event_id = 3;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000004;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_id = 3;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eventId_ = 0;
        onChanged();
        return this;
      }

      private int eventType_ ;
      /**
       * <code>optional uint32 event_type = 4;</code>
       */
      public boolean hasEventType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 event_type = 4;</code>
       */
      public int getEventType() {
        return eventType_;
      }
      /**
       * <code>optional uint32 event_type = 4;</code>
       */
      public Builder setEventType(int value) {
        bitField0_ |= 0x00000008;
        eventType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event_type = 4;</code>
       */
      public Builder clearEventType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventType_ = 0;
        onChanged();
        return this;
      }

      private boolean bPlayingCt_ ;
      /**
       * <code>optional bool b_playing_ct = 5;</code>
       */
      public boolean hasBPlayingCt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool b_playing_ct = 5;</code>
       */
      public boolean getBPlayingCt() {
        return bPlayingCt_;
      }
      /**
       * <code>optional bool b_playing_ct = 5;</code>
       */
      public Builder setBPlayingCt(boolean value) {
        bitField0_ |= 0x00000010;
        bPlayingCt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool b_playing_ct = 5;</code>
       */
      public Builder clearBPlayingCt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bPlayingCt_ = false;
        onChanged();
        return this;
      }

      private int userPosX_ ;
      /**
       * <code>optional int32 user_pos_x = 6;</code>
       */
      public boolean hasUserPosX() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 user_pos_x = 6;</code>
       */
      public int getUserPosX() {
        return userPosX_;
      }
      /**
       * <code>optional int32 user_pos_x = 6;</code>
       */
      public Builder setUserPosX(int value) {
        bitField0_ |= 0x00000020;
        userPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_pos_x = 6;</code>
       */
      public Builder clearUserPosX() {
        bitField0_ = (bitField0_ & ~0x00000020);
        userPosX_ = 0;
        onChanged();
        return this;
      }

      private int userPosY_ ;
      /**
       * <code>optional int32 user_pos_y = 7;</code>
       */
      public boolean hasUserPosY() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 user_pos_y = 7;</code>
       */
      public int getUserPosY() {
        return userPosY_;
      }
      /**
       * <code>optional int32 user_pos_y = 7;</code>
       */
      public Builder setUserPosY(int value) {
        bitField0_ |= 0x00000040;
        userPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_pos_y = 7;</code>
       */
      public Builder clearUserPosY() {
        bitField0_ = (bitField0_ & ~0x00000040);
        userPosY_ = 0;
        onChanged();
        return this;
      }

      private int userPosZ_ ;
      /**
       * <code>optional int32 user_pos_z = 12;</code>
       */
      public boolean hasUserPosZ() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 user_pos_z = 12;</code>
       */
      public int getUserPosZ() {
        return userPosZ_;
      }
      /**
       * <code>optional int32 user_pos_z = 12;</code>
       */
      public Builder setUserPosZ(int value) {
        bitField0_ |= 0x00000080;
        userPosZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 user_pos_z = 12;</code>
       */
      public Builder clearUserPosZ() {
        bitField0_ = (bitField0_ & ~0x00000080);
        userPosZ_ = 0;
        onChanged();
        return this;
      }

      private int userDefidx_ ;
      /**
       * <code>optional uint32 user_defidx = 8;</code>
       */
      public boolean hasUserDefidx() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 user_defidx = 8;</code>
       */
      public int getUserDefidx() {
        return userDefidx_;
      }
      /**
       * <code>optional uint32 user_defidx = 8;</code>
       */
      public Builder setUserDefidx(int value) {
        bitField0_ |= 0x00000100;
        userDefidx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 user_defidx = 8;</code>
       */
      public Builder clearUserDefidx() {
        bitField0_ = (bitField0_ & ~0x00000100);
        userDefidx_ = 0;
        onChanged();
        return this;
      }

      private int otherPosX_ ;
      /**
       * <code>optional int32 other_pos_x = 9;</code>
       */
      public boolean hasOtherPosX() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 other_pos_x = 9;</code>
       */
      public int getOtherPosX() {
        return otherPosX_;
      }
      /**
       * <code>optional int32 other_pos_x = 9;</code>
       */
      public Builder setOtherPosX(int value) {
        bitField0_ |= 0x00000200;
        otherPosX_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 other_pos_x = 9;</code>
       */
      public Builder clearOtherPosX() {
        bitField0_ = (bitField0_ & ~0x00000200);
        otherPosX_ = 0;
        onChanged();
        return this;
      }

      private int otherPosY_ ;
      /**
       * <code>optional int32 other_pos_y = 10;</code>
       */
      public boolean hasOtherPosY() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 other_pos_y = 10;</code>
       */
      public int getOtherPosY() {
        return otherPosY_;
      }
      /**
       * <code>optional int32 other_pos_y = 10;</code>
       */
      public Builder setOtherPosY(int value) {
        bitField0_ |= 0x00000400;
        otherPosY_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 other_pos_y = 10;</code>
       */
      public Builder clearOtherPosY() {
        bitField0_ = (bitField0_ & ~0x00000400);
        otherPosY_ = 0;
        onChanged();
        return this;
      }

      private int otherPosZ_ ;
      /**
       * <code>optional int32 other_pos_z = 13;</code>
       */
      public boolean hasOtherPosZ() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 other_pos_z = 13;</code>
       */
      public int getOtherPosZ() {
        return otherPosZ_;
      }
      /**
       * <code>optional int32 other_pos_z = 13;</code>
       */
      public Builder setOtherPosZ(int value) {
        bitField0_ |= 0x00000800;
        otherPosZ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 other_pos_z = 13;</code>
       */
      public Builder clearOtherPosZ() {
        bitField0_ = (bitField0_ & ~0x00000800);
        otherPosZ_ = 0;
        onChanged();
        return this;
      }

      private int otherDefidx_ ;
      /**
       * <code>optional uint32 other_defidx = 11;</code>
       */
      public boolean hasOtherDefidx() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 other_defidx = 11;</code>
       */
      public int getOtherDefidx() {
        return otherDefidx_;
      }
      /**
       * <code>optional uint32 other_defidx = 11;</code>
       */
      public Builder setOtherDefidx(int value) {
        bitField0_ |= 0x00001000;
        otherDefidx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 other_defidx = 11;</code>
       */
      public Builder clearOtherDefidx() {
        bitField0_ = (bitField0_ & ~0x00001000);
        otherDefidx_ = 0;
        onChanged();
        return this;
      }

      private int eventData_ ;
      /**
       * <code>optional int32 event_data = 14;</code>
       */
      public boolean hasEventData() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 event_data = 14;</code>
       */
      public int getEventData() {
        return eventData_;
      }
      /**
       * <code>optional int32 event_data = 14;</code>
       */
      public Builder setEventData(int value) {
        bitField0_ |= 0x00002000;
        eventData_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_data = 14;</code>
       */
      public Builder clearEventData() {
        bitField0_ = (bitField0_ & ~0x00002000);
        eventData_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DeepPlayerMatchEvent)
    }

    static {
      defaultInstance = new DeepPlayerMatchEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:DeepPlayerMatchEvent)
  }

  public interface CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CDataGCCStrike15_v2_TournamentMatchDraft)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 event_id = 1;</code>
     */
    boolean hasEventId();
    /**
     * <code>optional int32 event_id = 1;</code>
     */
    int getEventId();

    /**
     * <code>optional int32 event_stage_id = 2;</code>
     */
    boolean hasEventStageId();
    /**
     * <code>optional int32 event_stage_id = 2;</code>
     */
    int getEventStageId();

    /**
     * <code>optional int32 team_id_0 = 3;</code>
     */
    boolean hasTeamId0();
    /**
     * <code>optional int32 team_id_0 = 3;</code>
     */
    int getTeamId0();

    /**
     * <code>optional int32 team_id_1 = 4;</code>
     */
    boolean hasTeamId1();
    /**
     * <code>optional int32 team_id_1 = 4;</code>
     */
    int getTeamId1();

    /**
     * <code>optional int32 maps_count = 5;</code>
     */
    boolean hasMapsCount();
    /**
     * <code>optional int32 maps_count = 5;</code>
     */
    int getMapsCount();

    /**
     * <code>optional int32 maps_current = 6;</code>
     */
    boolean hasMapsCurrent();
    /**
     * <code>optional int32 maps_current = 6;</code>
     */
    int getMapsCurrent();

    /**
     * <code>optional int32 team_id_start = 7;</code>
     */
    boolean hasTeamIdStart();
    /**
     * <code>optional int32 team_id_start = 7;</code>
     */
    int getTeamIdStart();

    /**
     * <code>optional int32 team_id_veto1 = 8;</code>
     */
    boolean hasTeamIdVeto1();
    /**
     * <code>optional int32 team_id_veto1 = 8;</code>
     */
    int getTeamIdVeto1();

    /**
     * <code>optional int32 team_id_pickn = 9;</code>
     */
    boolean hasTeamIdPickn();
    /**
     * <code>optional int32 team_id_pickn = 9;</code>
     */
    int getTeamIdPickn();

    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry> 
        getDraftsList();
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry getDrafts(int index);
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    int getDraftsCount();
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder> 
        getDraftsOrBuilderList();
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder getDraftsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CDataGCCStrike15_v2_TournamentMatchDraft}
   *
   * <pre>
   * 452
   * </pre>
   */
  public static final class CDataGCCStrike15_v2_TournamentMatchDraft extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CDataGCCStrike15_v2_TournamentMatchDraft)
      CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder {
    // Use CDataGCCStrike15_v2_TournamentMatchDraft.newBuilder() to construct.
    private CDataGCCStrike15_v2_TournamentMatchDraft(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CDataGCCStrike15_v2_TournamentMatchDraft(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CDataGCCStrike15_v2_TournamentMatchDraft defaultInstance;
    public static CDataGCCStrike15_v2_TournamentMatchDraft getDefaultInstance() {
      return defaultInstance;
    }

    public CDataGCCStrike15_v2_TournamentMatchDraft getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CDataGCCStrike15_v2_TournamentMatchDraft(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eventStageId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              teamId0_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              teamId1_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mapsCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              mapsCurrent_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              teamIdStart_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              teamIdVeto1_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              teamIdPickn_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                drafts_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry>();
                mutable_bitField0_ |= 0x00000200;
              }
              drafts_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          drafts_ = java.util.Collections.unmodifiableList(drafts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder.class);
    }

    public static com.google.protobuf.Parser<CDataGCCStrike15_v2_TournamentMatchDraft> PARSER =
        new com.google.protobuf.AbstractParser<CDataGCCStrike15_v2_TournamentMatchDraft>() {
      public CDataGCCStrike15_v2_TournamentMatchDraft parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CDataGCCStrike15_v2_TournamentMatchDraft(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CDataGCCStrike15_v2_TournamentMatchDraft> getParserForType() {
      return PARSER;
    }

    public interface EntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 mapid = 1;</code>
       */
      boolean hasMapid();
      /**
       * <code>optional int32 mapid = 1;</code>
       */
      int getMapid();

      /**
       * <code>optional int32 team_id_ct = 2;</code>
       */
      boolean hasTeamIdCt();
      /**
       * <code>optional int32 team_id_ct = 2;</code>
       */
      int getTeamIdCt();
    }
    /**
     * Protobuf type {@code CDataGCCStrike15_v2_TournamentMatchDraft.Entry}
     */
    public static final class Entry extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
        EntryOrBuilder {
      // Use Entry.newBuilder() to construct.
      private Entry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Entry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Entry defaultInstance;
      public static Entry getDefaultInstance() {
        return defaultInstance;
      }

      public Entry getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Entry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                mapid_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                teamIdCt_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder.class);
      }

      public static com.google.protobuf.Parser<Entry> PARSER =
          new com.google.protobuf.AbstractParser<Entry>() {
        public Entry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Entry(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Entry> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MAPID_FIELD_NUMBER = 1;
      private int mapid_;
      /**
       * <code>optional int32 mapid = 1;</code>
       */
      public boolean hasMapid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 mapid = 1;</code>
       */
      public int getMapid() {
        return mapid_;
      }

      public static final int TEAM_ID_CT_FIELD_NUMBER = 2;
      private int teamIdCt_;
      /**
       * <code>optional int32 team_id_ct = 2;</code>
       */
      public boolean hasTeamIdCt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 team_id_ct = 2;</code>
       */
      public int getTeamIdCt() {
        return teamIdCt_;
      }

      private void initFields() {
        mapid_ = 0;
        teamIdCt_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, mapid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, teamIdCt_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, mapid_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, teamIdCt_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CDataGCCStrike15_v2_TournamentMatchDraft.Entry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          mapid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          teamIdCt_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.mapid_ = mapid_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.teamIdCt_ = teamIdCt_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.getDefaultInstance()) return this;
          if (other.hasMapid()) {
            setMapid(other.getMapid());
          }
          if (other.hasTeamIdCt()) {
            setTeamIdCt(other.getTeamIdCt());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int mapid_ ;
        /**
         * <code>optional int32 mapid = 1;</code>
         */
        public boolean hasMapid() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 mapid = 1;</code>
         */
        public int getMapid() {
          return mapid_;
        }
        /**
         * <code>optional int32 mapid = 1;</code>
         */
        public Builder setMapid(int value) {
          bitField0_ |= 0x00000001;
          mapid_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mapid = 1;</code>
         */
        public Builder clearMapid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          mapid_ = 0;
          onChanged();
          return this;
        }

        private int teamIdCt_ ;
        /**
         * <code>optional int32 team_id_ct = 2;</code>
         */
        public boolean hasTeamIdCt() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 team_id_ct = 2;</code>
         */
        public int getTeamIdCt() {
          return teamIdCt_;
        }
        /**
         * <code>optional int32 team_id_ct = 2;</code>
         */
        public Builder setTeamIdCt(int value) {
          bitField0_ |= 0x00000002;
          teamIdCt_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 team_id_ct = 2;</code>
         */
        public Builder clearTeamIdCt() {
          bitField0_ = (bitField0_ & ~0x00000002);
          teamIdCt_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
      }

      static {
        defaultInstance = new Entry(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CDataGCCStrike15_v2_TournamentMatchDraft.Entry)
    }

    private int bitField0_;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private int eventId_;
    /**
     * <code>optional int32 event_id = 1;</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 event_id = 1;</code>
     */
    public int getEventId() {
      return eventId_;
    }

    public static final int EVENT_STAGE_ID_FIELD_NUMBER = 2;
    private int eventStageId_;
    /**
     * <code>optional int32 event_stage_id = 2;</code>
     */
    public boolean hasEventStageId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 event_stage_id = 2;</code>
     */
    public int getEventStageId() {
      return eventStageId_;
    }

    public static final int TEAM_ID_0_FIELD_NUMBER = 3;
    private int teamId0_;
    /**
     * <code>optional int32 team_id_0 = 3;</code>
     */
    public boolean hasTeamId0() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 team_id_0 = 3;</code>
     */
    public int getTeamId0() {
      return teamId0_;
    }

    public static final int TEAM_ID_1_FIELD_NUMBER = 4;
    private int teamId1_;
    /**
     * <code>optional int32 team_id_1 = 4;</code>
     */
    public boolean hasTeamId1() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 team_id_1 = 4;</code>
     */
    public int getTeamId1() {
      return teamId1_;
    }

    public static final int MAPS_COUNT_FIELD_NUMBER = 5;
    private int mapsCount_;
    /**
     * <code>optional int32 maps_count = 5;</code>
     */
    public boolean hasMapsCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 maps_count = 5;</code>
     */
    public int getMapsCount() {
      return mapsCount_;
    }

    public static final int MAPS_CURRENT_FIELD_NUMBER = 6;
    private int mapsCurrent_;
    /**
     * <code>optional int32 maps_current = 6;</code>
     */
    public boolean hasMapsCurrent() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 maps_current = 6;</code>
     */
    public int getMapsCurrent() {
      return mapsCurrent_;
    }

    public static final int TEAM_ID_START_FIELD_NUMBER = 7;
    private int teamIdStart_;
    /**
     * <code>optional int32 team_id_start = 7;</code>
     */
    public boolean hasTeamIdStart() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 team_id_start = 7;</code>
     */
    public int getTeamIdStart() {
      return teamIdStart_;
    }

    public static final int TEAM_ID_VETO1_FIELD_NUMBER = 8;
    private int teamIdVeto1_;
    /**
     * <code>optional int32 team_id_veto1 = 8;</code>
     */
    public boolean hasTeamIdVeto1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 team_id_veto1 = 8;</code>
     */
    public int getTeamIdVeto1() {
      return teamIdVeto1_;
    }

    public static final int TEAM_ID_PICKN_FIELD_NUMBER = 9;
    private int teamIdPickn_;
    /**
     * <code>optional int32 team_id_pickn = 9;</code>
     */
    public boolean hasTeamIdPickn() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 team_id_pickn = 9;</code>
     */
    public int getTeamIdPickn() {
      return teamIdPickn_;
    }

    public static final int DRAFTS_FIELD_NUMBER = 10;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry> drafts_;
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry> getDraftsList() {
      return drafts_;
    }
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder> 
        getDraftsOrBuilderList() {
      return drafts_;
    }
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    public int getDraftsCount() {
      return drafts_.size();
    }
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry getDrafts(int index) {
      return drafts_.get(index);
    }
    /**
     * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder getDraftsOrBuilder(
        int index) {
      return drafts_.get(index);
    }

    private void initFields() {
      eventId_ = 0;
      eventStageId_ = 0;
      teamId0_ = 0;
      teamId1_ = 0;
      mapsCount_ = 0;
      mapsCurrent_ = 0;
      teamIdStart_ = 0;
      teamIdVeto1_ = 0;
      teamIdPickn_ = 0;
      drafts_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, eventStageId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, teamId0_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, teamId1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, mapsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, mapsCurrent_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, teamIdStart_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, teamIdVeto1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, teamIdPickn_);
      }
      for (int i = 0; i < drafts_.size(); i++) {
        output.writeMessage(10, drafts_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, eventId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, eventStageId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, teamId0_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, teamId1_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mapsCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, mapsCurrent_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, teamIdStart_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, teamIdVeto1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, teamIdPickn_);
      }
      for (int i = 0; i < drafts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, drafts_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CDataGCCStrike15_v2_TournamentMatchDraft}
     *
     * <pre>
     * 452
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CDataGCCStrike15_v2_TournamentMatchDraft)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDraftsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventStageId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        teamId0_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        teamId1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mapsCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        mapsCurrent_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        teamIdStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        teamIdVeto1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        teamIdPickn_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (draftsBuilder_ == null) {
          drafts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          draftsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventId_ = eventId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventStageId_ = eventStageId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.teamId0_ = teamId0_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.teamId1_ = teamId1_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mapsCount_ = mapsCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.mapsCurrent_ = mapsCurrent_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.teamIdStart_ = teamIdStart_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.teamIdVeto1_ = teamIdVeto1_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.teamIdPickn_ = teamIdPickn_;
        if (draftsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            drafts_ = java.util.Collections.unmodifiableList(drafts_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.drafts_ = drafts_;
        } else {
          result.drafts_ = draftsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (other.hasEventStageId()) {
          setEventStageId(other.getEventStageId());
        }
        if (other.hasTeamId0()) {
          setTeamId0(other.getTeamId0());
        }
        if (other.hasTeamId1()) {
          setTeamId1(other.getTeamId1());
        }
        if (other.hasMapsCount()) {
          setMapsCount(other.getMapsCount());
        }
        if (other.hasMapsCurrent()) {
          setMapsCurrent(other.getMapsCurrent());
        }
        if (other.hasTeamIdStart()) {
          setTeamIdStart(other.getTeamIdStart());
        }
        if (other.hasTeamIdVeto1()) {
          setTeamIdVeto1(other.getTeamIdVeto1());
        }
        if (other.hasTeamIdPickn()) {
          setTeamIdPickn(other.getTeamIdPickn());
        }
        if (draftsBuilder_ == null) {
          if (!other.drafts_.isEmpty()) {
            if (drafts_.isEmpty()) {
              drafts_ = other.drafts_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureDraftsIsMutable();
              drafts_.addAll(other.drafts_);
            }
            onChanged();
          }
        } else {
          if (!other.drafts_.isEmpty()) {
            if (draftsBuilder_.isEmpty()) {
              draftsBuilder_.dispose();
              draftsBuilder_ = null;
              drafts_ = other.drafts_;
              bitField0_ = (bitField0_ & ~0x00000200);
              draftsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDraftsFieldBuilder() : null;
            } else {
              draftsBuilder_.addAllMessages(other.drafts_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int eventId_ ;
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public int getEventId() {
        return eventId_;
      }
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public Builder setEventId(int value) {
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_id = 1;</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = 0;
        onChanged();
        return this;
      }

      private int eventStageId_ ;
      /**
       * <code>optional int32 event_stage_id = 2;</code>
       */
      public boolean hasEventStageId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 event_stage_id = 2;</code>
       */
      public int getEventStageId() {
        return eventStageId_;
      }
      /**
       * <code>optional int32 event_stage_id = 2;</code>
       */
      public Builder setEventStageId(int value) {
        bitField0_ |= 0x00000002;
        eventStageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 event_stage_id = 2;</code>
       */
      public Builder clearEventStageId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventStageId_ = 0;
        onChanged();
        return this;
      }

      private int teamId0_ ;
      /**
       * <code>optional int32 team_id_0 = 3;</code>
       */
      public boolean hasTeamId0() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 team_id_0 = 3;</code>
       */
      public int getTeamId0() {
        return teamId0_;
      }
      /**
       * <code>optional int32 team_id_0 = 3;</code>
       */
      public Builder setTeamId0(int value) {
        bitField0_ |= 0x00000004;
        teamId0_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 team_id_0 = 3;</code>
       */
      public Builder clearTeamId0() {
        bitField0_ = (bitField0_ & ~0x00000004);
        teamId0_ = 0;
        onChanged();
        return this;
      }

      private int teamId1_ ;
      /**
       * <code>optional int32 team_id_1 = 4;</code>
       */
      public boolean hasTeamId1() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 team_id_1 = 4;</code>
       */
      public int getTeamId1() {
        return teamId1_;
      }
      /**
       * <code>optional int32 team_id_1 = 4;</code>
       */
      public Builder setTeamId1(int value) {
        bitField0_ |= 0x00000008;
        teamId1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 team_id_1 = 4;</code>
       */
      public Builder clearTeamId1() {
        bitField0_ = (bitField0_ & ~0x00000008);
        teamId1_ = 0;
        onChanged();
        return this;
      }

      private int mapsCount_ ;
      /**
       * <code>optional int32 maps_count = 5;</code>
       */
      public boolean hasMapsCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 maps_count = 5;</code>
       */
      public int getMapsCount() {
        return mapsCount_;
      }
      /**
       * <code>optional int32 maps_count = 5;</code>
       */
      public Builder setMapsCount(int value) {
        bitField0_ |= 0x00000010;
        mapsCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maps_count = 5;</code>
       */
      public Builder clearMapsCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mapsCount_ = 0;
        onChanged();
        return this;
      }

      private int mapsCurrent_ ;
      /**
       * <code>optional int32 maps_current = 6;</code>
       */
      public boolean hasMapsCurrent() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 maps_current = 6;</code>
       */
      public int getMapsCurrent() {
        return mapsCurrent_;
      }
      /**
       * <code>optional int32 maps_current = 6;</code>
       */
      public Builder setMapsCurrent(int value) {
        bitField0_ |= 0x00000020;
        mapsCurrent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maps_current = 6;</code>
       */
      public Builder clearMapsCurrent() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mapsCurrent_ = 0;
        onChanged();
        return this;
      }

      private int teamIdStart_ ;
      /**
       * <code>optional int32 team_id_start = 7;</code>
       */
      public boolean hasTeamIdStart() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 team_id_start = 7;</code>
       */
      public int getTeamIdStart() {
        return teamIdStart_;
      }
      /**
       * <code>optional int32 team_id_start = 7;</code>
       */
      public Builder setTeamIdStart(int value) {
        bitField0_ |= 0x00000040;
        teamIdStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 team_id_start = 7;</code>
       */
      public Builder clearTeamIdStart() {
        bitField0_ = (bitField0_ & ~0x00000040);
        teamIdStart_ = 0;
        onChanged();
        return this;
      }

      private int teamIdVeto1_ ;
      /**
       * <code>optional int32 team_id_veto1 = 8;</code>
       */
      public boolean hasTeamIdVeto1() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 team_id_veto1 = 8;</code>
       */
      public int getTeamIdVeto1() {
        return teamIdVeto1_;
      }
      /**
       * <code>optional int32 team_id_veto1 = 8;</code>
       */
      public Builder setTeamIdVeto1(int value) {
        bitField0_ |= 0x00000080;
        teamIdVeto1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 team_id_veto1 = 8;</code>
       */
      public Builder clearTeamIdVeto1() {
        bitField0_ = (bitField0_ & ~0x00000080);
        teamIdVeto1_ = 0;
        onChanged();
        return this;
      }

      private int teamIdPickn_ ;
      /**
       * <code>optional int32 team_id_pickn = 9;</code>
       */
      public boolean hasTeamIdPickn() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 team_id_pickn = 9;</code>
       */
      public int getTeamIdPickn() {
        return teamIdPickn_;
      }
      /**
       * <code>optional int32 team_id_pickn = 9;</code>
       */
      public Builder setTeamIdPickn(int value) {
        bitField0_ |= 0x00000100;
        teamIdPickn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 team_id_pickn = 9;</code>
       */
      public Builder clearTeamIdPickn() {
        bitField0_ = (bitField0_ & ~0x00000100);
        teamIdPickn_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry> drafts_ =
        java.util.Collections.emptyList();
      private void ensureDraftsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          drafts_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry>(drafts_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder> draftsBuilder_;

      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry> getDraftsList() {
        if (draftsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(drafts_);
        } else {
          return draftsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public int getDraftsCount() {
        if (draftsBuilder_ == null) {
          return drafts_.size();
        } else {
          return draftsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry getDrafts(int index) {
        if (draftsBuilder_ == null) {
          return drafts_.get(index);
        } else {
          return draftsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder setDrafts(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry value) {
        if (draftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDraftsIsMutable();
          drafts_.set(index, value);
          onChanged();
        } else {
          draftsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder setDrafts(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder builderForValue) {
        if (draftsBuilder_ == null) {
          ensureDraftsIsMutable();
          drafts_.set(index, builderForValue.build());
          onChanged();
        } else {
          draftsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder addDrafts(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry value) {
        if (draftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDraftsIsMutable();
          drafts_.add(value);
          onChanged();
        } else {
          draftsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder addDrafts(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry value) {
        if (draftsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDraftsIsMutable();
          drafts_.add(index, value);
          onChanged();
        } else {
          draftsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder addDrafts(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder builderForValue) {
        if (draftsBuilder_ == null) {
          ensureDraftsIsMutable();
          drafts_.add(builderForValue.build());
          onChanged();
        } else {
          draftsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder addDrafts(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder builderForValue) {
        if (draftsBuilder_ == null) {
          ensureDraftsIsMutable();
          drafts_.add(index, builderForValue.build());
          onChanged();
        } else {
          draftsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder addAllDrafts(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry> values) {
        if (draftsBuilder_ == null) {
          ensureDraftsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, drafts_);
          onChanged();
        } else {
          draftsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder clearDrafts() {
        if (draftsBuilder_ == null) {
          drafts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          draftsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public Builder removeDrafts(int index) {
        if (draftsBuilder_ == null) {
          ensureDraftsIsMutable();
          drafts_.remove(index);
          onChanged();
        } else {
          draftsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder getDraftsBuilder(
          int index) {
        return getDraftsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder getDraftsOrBuilder(
          int index) {
        if (draftsBuilder_ == null) {
          return drafts_.get(index);  } else {
          return draftsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder> 
           getDraftsOrBuilderList() {
        if (draftsBuilder_ != null) {
          return draftsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(drafts_);
        }
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder addDraftsBuilder() {
        return getDraftsFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder addDraftsBuilder(
          int index) {
        return getDraftsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.getDefaultInstance());
      }
      /**
       * <code>repeated .CDataGCCStrike15_v2_TournamentMatchDraft.Entry drafts = 10;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder> 
           getDraftsBuilderList() {
        return getDraftsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder> 
          getDraftsFieldBuilder() {
        if (draftsBuilder_ == null) {
          draftsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Entry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.EntryOrBuilder>(
                  drafts_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          drafts_ = null;
        }
        return draftsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CDataGCCStrike15_v2_TournamentMatchDraft)
    }

    static {
      defaultInstance = new CDataGCCStrike15_v2_TournamentMatchDraft(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CDataGCCStrike15_v2_TournamentMatchDraft)
  }

  public interface CPreMatchInfoDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CPreMatchInfoData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 predictions_pct = 1;</code>
     */
    boolean hasPredictionsPct();
    /**
     * <code>optional int32 predictions_pct = 1;</code>
     */
    int getPredictionsPct();

    /**
     * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
     */
    boolean hasDraft();
    /**
     * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft getDraft();
    /**
     * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder getDraftOrBuilder();

    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats> 
        getStatsList();
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats getStats(int index);
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    int getStatsCount();
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder> 
        getStatsOrBuilderList();
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder getStatsOrBuilder(
        int index);

    /**
     * <code>repeated int32 wins = 6;</code>
     */
    java.util.List<java.lang.Integer> getWinsList();
    /**
     * <code>repeated int32 wins = 6;</code>
     */
    int getWinsCount();
    /**
     * <code>repeated int32 wins = 6;</code>
     */
    int getWins(int index);
  }
  /**
   * Protobuf type {@code CPreMatchInfoData}
   *
   * <pre>
   * 470
   * </pre>
   */
  public static final class CPreMatchInfoData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CPreMatchInfoData)
      CPreMatchInfoDataOrBuilder {
    // Use CPreMatchInfoData.newBuilder() to construct.
    private CPreMatchInfoData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CPreMatchInfoData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CPreMatchInfoData defaultInstance;
    public static CPreMatchInfoData getDefaultInstance() {
      return defaultInstance;
    }

    public CPreMatchInfoData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CPreMatchInfoData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              predictionsPct_ = input.readInt32();
              break;
            }
            case 34: {
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = draft_.toBuilder();
              }
              draft_ = input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(draft_);
                draft_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                stats_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats>();
                mutable_bitField0_ |= 0x00000004;
              }
              stats_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                wins_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              wins_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                wins_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                wins_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          stats_ = java.util.Collections.unmodifiableList(stats_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          wins_ = java.util.Collections.unmodifiableList(wins_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder.class);
    }

    public static com.google.protobuf.Parser<CPreMatchInfoData> PARSER =
        new com.google.protobuf.AbstractParser<CPreMatchInfoData>() {
      public CPreMatchInfoData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CPreMatchInfoData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CPreMatchInfoData> getParserForType() {
      return PARSER;
    }

    public interface TeamStatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CPreMatchInfoData.TeamStats)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 match_info_idxtxt = 1;</code>
       */
      boolean hasMatchInfoIdxtxt();
      /**
       * <code>optional int32 match_info_idxtxt = 1;</code>
       */
      int getMatchInfoIdxtxt();

      /**
       * <code>optional string match_info_txt = 2;</code>
       */
      boolean hasMatchInfoTxt();
      /**
       * <code>optional string match_info_txt = 2;</code>
       */
      java.lang.String getMatchInfoTxt();
      /**
       * <code>optional string match_info_txt = 2;</code>
       */
      com.google.protobuf.ByteString
          getMatchInfoTxtBytes();

      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      com.google.protobuf.ProtocolStringList
          getMatchInfoTeamsList();
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      int getMatchInfoTeamsCount();
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      java.lang.String getMatchInfoTeams(int index);
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      com.google.protobuf.ByteString
          getMatchInfoTeamsBytes(int index);
    }
    /**
     * Protobuf type {@code CPreMatchInfoData.TeamStats}
     */
    public static final class TeamStats extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CPreMatchInfoData.TeamStats)
        TeamStatsOrBuilder {
      // Use TeamStats.newBuilder() to construct.
      private TeamStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private TeamStats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final TeamStats defaultInstance;
      public static TeamStats getDefaultInstance() {
        return defaultInstance;
      }

      public TeamStats getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private TeamStats(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                matchInfoIdxtxt_ = input.readInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                matchInfoTxt_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  matchInfoTeams_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                matchInfoTeams_.add(bs);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            matchInfoTeams_ = matchInfoTeams_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_TeamStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_TeamStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder.class);
      }

      public static com.google.protobuf.Parser<TeamStats> PARSER =
          new com.google.protobuf.AbstractParser<TeamStats>() {
        public TeamStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TeamStats(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<TeamStats> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MATCH_INFO_IDXTXT_FIELD_NUMBER = 1;
      private int matchInfoIdxtxt_;
      /**
       * <code>optional int32 match_info_idxtxt = 1;</code>
       */
      public boolean hasMatchInfoIdxtxt() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 match_info_idxtxt = 1;</code>
       */
      public int getMatchInfoIdxtxt() {
        return matchInfoIdxtxt_;
      }

      public static final int MATCH_INFO_TXT_FIELD_NUMBER = 2;
      private java.lang.Object matchInfoTxt_;
      /**
       * <code>optional string match_info_txt = 2;</code>
       */
      public boolean hasMatchInfoTxt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string match_info_txt = 2;</code>
       */
      public java.lang.String getMatchInfoTxt() {
        java.lang.Object ref = matchInfoTxt_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            matchInfoTxt_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string match_info_txt = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMatchInfoTxtBytes() {
        java.lang.Object ref = matchInfoTxt_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          matchInfoTxt_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MATCH_INFO_TEAMS_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList matchInfoTeams_;
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getMatchInfoTeamsList() {
        return matchInfoTeams_;
      }
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      public int getMatchInfoTeamsCount() {
        return matchInfoTeams_.size();
      }
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      public java.lang.String getMatchInfoTeams(int index) {
        return matchInfoTeams_.get(index);
      }
      /**
       * <code>repeated string match_info_teams = 3;</code>
       */
      public com.google.protobuf.ByteString
          getMatchInfoTeamsBytes(int index) {
        return matchInfoTeams_.getByteString(index);
      }

      private void initFields() {
        matchInfoIdxtxt_ = 0;
        matchInfoTxt_ = "";
        matchInfoTeams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, matchInfoIdxtxt_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getMatchInfoTxtBytes());
        }
        for (int i = 0; i < matchInfoTeams_.size(); i++) {
          output.writeBytes(3, matchInfoTeams_.getByteString(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, matchInfoIdxtxt_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getMatchInfoTxtBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < matchInfoTeams_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(matchInfoTeams_.getByteString(i));
          }
          size += dataSize;
          size += 1 * getMatchInfoTeamsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CPreMatchInfoData.TeamStats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CPreMatchInfoData.TeamStats)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_TeamStats_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_TeamStats_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          matchInfoIdxtxt_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          matchInfoTxt_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          matchInfoTeams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_TeamStats_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.matchInfoIdxtxt_ = matchInfoIdxtxt_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.matchInfoTxt_ = matchInfoTxt_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            matchInfoTeams_ = matchInfoTeams_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.matchInfoTeams_ = matchInfoTeams_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.getDefaultInstance()) return this;
          if (other.hasMatchInfoIdxtxt()) {
            setMatchInfoIdxtxt(other.getMatchInfoIdxtxt());
          }
          if (other.hasMatchInfoTxt()) {
            bitField0_ |= 0x00000002;
            matchInfoTxt_ = other.matchInfoTxt_;
            onChanged();
          }
          if (!other.matchInfoTeams_.isEmpty()) {
            if (matchInfoTeams_.isEmpty()) {
              matchInfoTeams_ = other.matchInfoTeams_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMatchInfoTeamsIsMutable();
              matchInfoTeams_.addAll(other.matchInfoTeams_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int matchInfoIdxtxt_ ;
        /**
         * <code>optional int32 match_info_idxtxt = 1;</code>
         */
        public boolean hasMatchInfoIdxtxt() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 match_info_idxtxt = 1;</code>
         */
        public int getMatchInfoIdxtxt() {
          return matchInfoIdxtxt_;
        }
        /**
         * <code>optional int32 match_info_idxtxt = 1;</code>
         */
        public Builder setMatchInfoIdxtxt(int value) {
          bitField0_ |= 0x00000001;
          matchInfoIdxtxt_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 match_info_idxtxt = 1;</code>
         */
        public Builder clearMatchInfoIdxtxt() {
          bitField0_ = (bitField0_ & ~0x00000001);
          matchInfoIdxtxt_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object matchInfoTxt_ = "";
        /**
         * <code>optional string match_info_txt = 2;</code>
         */
        public boolean hasMatchInfoTxt() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string match_info_txt = 2;</code>
         */
        public java.lang.String getMatchInfoTxt() {
          java.lang.Object ref = matchInfoTxt_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              matchInfoTxt_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string match_info_txt = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMatchInfoTxtBytes() {
          java.lang.Object ref = matchInfoTxt_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            matchInfoTxt_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string match_info_txt = 2;</code>
         */
        public Builder setMatchInfoTxt(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          matchInfoTxt_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string match_info_txt = 2;</code>
         */
        public Builder clearMatchInfoTxt() {
          bitField0_ = (bitField0_ & ~0x00000002);
          matchInfoTxt_ = getDefaultInstance().getMatchInfoTxt();
          onChanged();
          return this;
        }
        /**
         * <code>optional string match_info_txt = 2;</code>
         */
        public Builder setMatchInfoTxtBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          matchInfoTxt_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList matchInfoTeams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureMatchInfoTeamsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            matchInfoTeams_ = new com.google.protobuf.LazyStringArrayList(matchInfoTeams_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getMatchInfoTeamsList() {
          return matchInfoTeams_.getUnmodifiableView();
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public int getMatchInfoTeamsCount() {
          return matchInfoTeams_.size();
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public java.lang.String getMatchInfoTeams(int index) {
          return matchInfoTeams_.get(index);
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public com.google.protobuf.ByteString
            getMatchInfoTeamsBytes(int index) {
          return matchInfoTeams_.getByteString(index);
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public Builder setMatchInfoTeams(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchInfoTeamsIsMutable();
          matchInfoTeams_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public Builder addMatchInfoTeams(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchInfoTeamsIsMutable();
          matchInfoTeams_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public Builder addAllMatchInfoTeams(
            java.lang.Iterable<java.lang.String> values) {
          ensureMatchInfoTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matchInfoTeams_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public Builder clearMatchInfoTeams() {
          matchInfoTeams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string match_info_teams = 3;</code>
         */
        public Builder addMatchInfoTeamsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchInfoTeamsIsMutable();
          matchInfoTeams_.add(value);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CPreMatchInfoData.TeamStats)
      }

      static {
        defaultInstance = new TeamStats(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CPreMatchInfoData.TeamStats)
    }

    private int bitField0_;
    public static final int PREDICTIONS_PCT_FIELD_NUMBER = 1;
    private int predictionsPct_;
    /**
     * <code>optional int32 predictions_pct = 1;</code>
     */
    public boolean hasPredictionsPct() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 predictions_pct = 1;</code>
     */
    public int getPredictionsPct() {
      return predictionsPct_;
    }

    public static final int DRAFT_FIELD_NUMBER = 4;
    private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft draft_;
    /**
     * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
     */
    public boolean hasDraft() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft getDraft() {
      return draft_;
    }
    /**
     * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder getDraftOrBuilder() {
      return draft_;
    }

    public static final int STATS_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats> stats_;
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats> getStatsList() {
      return stats_;
    }
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder> 
        getStatsOrBuilderList() {
      return stats_;
    }
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    public int getStatsCount() {
      return stats_.size();
    }
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats getStats(int index) {
      return stats_.get(index);
    }
    /**
     * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder getStatsOrBuilder(
        int index) {
      return stats_.get(index);
    }

    public static final int WINS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> wins_;
    /**
     * <code>repeated int32 wins = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getWinsList() {
      return wins_;
    }
    /**
     * <code>repeated int32 wins = 6;</code>
     */
    public int getWinsCount() {
      return wins_.size();
    }
    /**
     * <code>repeated int32 wins = 6;</code>
     */
    public int getWins(int index) {
      return wins_.get(index);
    }

    private void initFields() {
      predictionsPct_ = 0;
      draft_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance();
      stats_ = java.util.Collections.emptyList();
      wins_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, predictionsPct_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(4, draft_);
      }
      for (int i = 0; i < stats_.size(); i++) {
        output.writeMessage(5, stats_.get(i));
      }
      for (int i = 0; i < wins_.size(); i++) {
        output.writeInt32(6, wins_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, predictionsPct_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, draft_);
      }
      for (int i = 0; i < stats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, stats_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < wins_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(wins_.get(i));
        }
        size += dataSize;
        size += 1 * getWinsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CPreMatchInfoData}
     *
     * <pre>
     * 470
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CPreMatchInfoData)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDraftFieldBuilder();
          getStatsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        predictionsPct_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (draftBuilder_ == null) {
          draft_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance();
        } else {
          draftBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          statsBuilder_.clear();
        }
        wins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CPreMatchInfoData_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.predictionsPct_ = predictionsPct_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (draftBuilder_ == null) {
          result.draft_ = draft_;
        } else {
          result.draft_ = draftBuilder_.build();
        }
        if (statsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            stats_ = java.util.Collections.unmodifiableList(stats_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.stats_ = stats_;
        } else {
          result.stats_ = statsBuilder_.build();
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          wins_ = java.util.Collections.unmodifiableList(wins_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.wins_ = wins_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance()) return this;
        if (other.hasPredictionsPct()) {
          setPredictionsPct(other.getPredictionsPct());
        }
        if (other.hasDraft()) {
          mergeDraft(other.getDraft());
        }
        if (statsBuilder_ == null) {
          if (!other.stats_.isEmpty()) {
            if (stats_.isEmpty()) {
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureStatsIsMutable();
              stats_.addAll(other.stats_);
            }
            onChanged();
          }
        } else {
          if (!other.stats_.isEmpty()) {
            if (statsBuilder_.isEmpty()) {
              statsBuilder_.dispose();
              statsBuilder_ = null;
              stats_ = other.stats_;
              bitField0_ = (bitField0_ & ~0x00000004);
              statsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStatsFieldBuilder() : null;
            } else {
              statsBuilder_.addAllMessages(other.stats_);
            }
          }
        }
        if (!other.wins_.isEmpty()) {
          if (wins_.isEmpty()) {
            wins_ = other.wins_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureWinsIsMutable();
            wins_.addAll(other.wins_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int predictionsPct_ ;
      /**
       * <code>optional int32 predictions_pct = 1;</code>
       */
      public boolean hasPredictionsPct() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 predictions_pct = 1;</code>
       */
      public int getPredictionsPct() {
        return predictionsPct_;
      }
      /**
       * <code>optional int32 predictions_pct = 1;</code>
       */
      public Builder setPredictionsPct(int value) {
        bitField0_ |= 0x00000001;
        predictionsPct_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 predictions_pct = 1;</code>
       */
      public Builder clearPredictionsPct() {
        bitField0_ = (bitField0_ & ~0x00000001);
        predictionsPct_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft draft_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder> draftBuilder_;
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public boolean hasDraft() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft getDraft() {
        if (draftBuilder_ == null) {
          return draft_;
        } else {
          return draftBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public Builder setDraft(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft value) {
        if (draftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          draft_ = value;
          onChanged();
        } else {
          draftBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public Builder setDraft(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder builderForValue) {
        if (draftBuilder_ == null) {
          draft_ = builderForValue.build();
          onChanged();
        } else {
          draftBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public Builder mergeDraft(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft value) {
        if (draftBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              draft_ != skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance()) {
            draft_ =
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.newBuilder(draft_).mergeFrom(value).buildPartial();
          } else {
            draft_ = value;
          }
          onChanged();
        } else {
          draftBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public Builder clearDraft() {
        if (draftBuilder_ == null) {
          draft_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.getDefaultInstance();
          onChanged();
        } else {
          draftBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder getDraftBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDraftFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder getDraftOrBuilder() {
        if (draftBuilder_ != null) {
          return draftBuilder_.getMessageOrBuilder();
        } else {
          return draft_;
        }
      }
      /**
       * <code>optional .CDataGCCStrike15_v2_TournamentMatchDraft draft = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder> 
          getDraftFieldBuilder() {
        if (draftBuilder_ == null) {
          draftBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraft.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CDataGCCStrike15_v2_TournamentMatchDraftOrBuilder>(
                  getDraft(),
                  getParentForChildren(),
                  isClean());
          draft_ = null;
        }
        return draftBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats> stats_ =
        java.util.Collections.emptyList();
      private void ensureStatsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          stats_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats>(stats_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder> statsBuilder_;

      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats> getStatsList() {
        if (statsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stats_);
        } else {
          return statsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public int getStatsCount() {
        if (statsBuilder_ == null) {
          return stats_.size();
        } else {
          return statsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats getStats(int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);
        } else {
          return statsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder setStats(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.set(index, value);
          onChanged();
        } else {
          statsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder setStats(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.set(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder addStats(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(value);
          onChanged();
        } else {
          statsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder addStats(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats value) {
        if (statsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStatsIsMutable();
          stats_.add(index, value);
          onChanged();
        } else {
          statsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder addStats(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder addStats(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder builderForValue) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.add(index, builderForValue.build());
          onChanged();
        } else {
          statsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder addAllStats(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats> values) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stats_);
          onChanged();
        } else {
          statsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder clearStats() {
        if (statsBuilder_ == null) {
          stats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          statsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public Builder removeStats(int index) {
        if (statsBuilder_ == null) {
          ensureStatsIsMutable();
          stats_.remove(index);
          onChanged();
        } else {
          statsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder getStatsBuilder(
          int index) {
        return getStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder getStatsOrBuilder(
          int index) {
        if (statsBuilder_ == null) {
          return stats_.get(index);  } else {
          return statsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder> 
           getStatsOrBuilderList() {
        if (statsBuilder_ != null) {
          return statsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stats_);
        }
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder addStatsBuilder() {
        return getStatsFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder addStatsBuilder(
          int index) {
        return getStatsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.getDefaultInstance());
      }
      /**
       * <code>repeated .CPreMatchInfoData.TeamStats stats = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder> 
           getStatsBuilderList() {
        return getStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder> 
          getStatsFieldBuilder() {
        if (statsBuilder_ == null) {
          statsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStats.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.TeamStatsOrBuilder>(
                  stats_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          stats_ = null;
        }
        return statsBuilder_;
      }

      private java.util.List<java.lang.Integer> wins_ = java.util.Collections.emptyList();
      private void ensureWinsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          wins_ = new java.util.ArrayList<java.lang.Integer>(wins_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getWinsList() {
        return java.util.Collections.unmodifiableList(wins_);
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public int getWinsCount() {
        return wins_.size();
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public int getWins(int index) {
        return wins_.get(index);
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public Builder setWins(
          int index, int value) {
        ensureWinsIsMutable();
        wins_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public Builder addWins(int value) {
        ensureWinsIsMutable();
        wins_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public Builder addAllWins(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureWinsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, wins_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 wins = 6;</code>
       */
      public Builder clearWins() {
        wins_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CPreMatchInfoData)
    }

    static {
      defaultInstance = new CPreMatchInfoData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CPreMatchInfoData)
  }

  public interface CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    java.util.List<java.lang.Integer> getAccountIdsList();
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    int getAccountIdsCount();
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    int getAccountIds(int index);

    /**
     * <code>optional uint32 game_type = 2;</code>
     */
    boolean hasGameType();
    /**
     * <code>optional uint32 game_type = 2;</code>
     */
    int getGameType();

    /**
     * <code>optional uint64 match_id = 3;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 3;</code>
     */
    long getMatchId();

    /**
     * <code>optional uint32 server_version = 4;</code>
     */
    boolean hasServerVersion();
    /**
     * <code>optional uint32 server_version = 4;</code>
     */
    int getServerVersion();

    /**
     * <code>optional uint32 flags = 18;</code>
     */
    boolean hasFlags();
    /**
     * <code>optional uint32 flags = 18;</code>
     */
    int getFlags();

    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo> 
        getRankingsList();
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo getRankings(int index);
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    int getRankingsCount();
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder> 
        getRankingsOrBuilderList();
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder getRankingsOrBuilder(
        int index);

    /**
     * <code>optional uint64 encryption_key = 6;</code>
     */
    boolean hasEncryptionKey();
    /**
     * <code>optional uint64 encryption_key = 6;</code>
     */
    long getEncryptionKey();

    /**
     * <code>optional uint64 encryption_key_pub = 7;</code>
     */
    boolean hasEncryptionKeyPub();
    /**
     * <code>optional uint64 encryption_key_pub = 7;</code>
     */
    long getEncryptionKeyPub();

    /**
     * <code>repeated uint32 party_ids = 8;</code>
     */
    java.util.List<java.lang.Integer> getPartyIdsList();
    /**
     * <code>repeated uint32 party_ids = 8;</code>
     */
    int getPartyIdsCount();
    /**
     * <code>repeated uint32 party_ids = 8;</code>
     */
    int getPartyIds(int index);

    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask> 
        getWhitelistList();
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask getWhitelist(int index);
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    int getWhitelistCount();
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder> 
        getWhitelistOrBuilderList();
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder getWhitelistOrBuilder(
        int index);

    /**
     * <code>optional uint64 tv_master_steamid = 10;</code>
     */
    boolean hasTvMasterSteamid();
    /**
     * <code>optional uint64 tv_master_steamid = 10;</code>
     */
    long getTvMasterSteamid();

    /**
     * <code>optional .TournamentEvent tournament_event = 11;</code>
     */
    boolean hasTournamentEvent();
    /**
     * <code>optional .TournamentEvent tournament_event = 11;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent getTournamentEvent();
    /**
     * <code>optional .TournamentEvent tournament_event = 11;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder getTournamentEventOrBuilder();

    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam> 
        getTournamentTeamsList();
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam getTournamentTeams(int index);
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    int getTournamentTeamsCount();
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder> 
        getTournamentTeamsOrBuilderList();
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder getTournamentTeamsOrBuilder(
        int index);

    /**
     * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
     */
    java.util.List<java.lang.Integer> getTournamentCastersAccountIdsList();
    /**
     * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
     */
    int getTournamentCastersAccountIdsCount();
    /**
     * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
     */
    int getTournamentCastersAccountIds(int index);

    /**
     * <code>optional uint64 tv_relay_steamid = 14;</code>
     */
    boolean hasTvRelaySteamid();
    /**
     * <code>optional uint64 tv_relay_steamid = 14;</code>
     */
    long getTvRelaySteamid();

    /**
     * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
     */
    boolean hasPreMatchData();
    /**
     * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData getPreMatchData();
    /**
     * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder getPreMatchDataOrBuilder();

    /**
     * <code>optional uint32 rtime32_event_start = 16;</code>
     */
    boolean hasRtime32EventStart();
    /**
     * <code>optional uint32 rtime32_event_start = 16;</code>
     */
    int getRtime32EventStart();

    /**
     * <code>optional uint32 tv_control = 17;</code>
     */
    boolean hasTvControl();
    /**
     * <code>optional uint32 tv_control = 17;</code>
     */
    int getTvControl();
  }
  /**
   * Protobuf type {@code CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve}
   *
   * <pre>
   * 483
   * </pre>
   */
  public static final class CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
      CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveOrBuilder {
    // Use CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.newBuilder() to construct.
    private CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve defaultInstance;
    public static CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              accountIds_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                accountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                accountIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              gameType_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              matchId_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              serverVersion_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                rankings_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo>();
                mutable_bitField0_ |= 0x00000020;
              }
              rankings_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              encryptionKey_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              encryptionKeyPub_ = input.readUInt64();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                partyIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              partyIds_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                partyIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                partyIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                whitelist_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask>();
                mutable_bitField0_ |= 0x00000200;
              }
              whitelist_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              tvMasterSteamid_ = input.readUInt64();
              break;
            }
            case 90: {
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = tournamentEvent_.toBuilder();
              }
              tournamentEvent_ = input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tournamentEvent_);
                tournamentEvent_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                tournamentTeams_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam>();
                mutable_bitField0_ |= 0x00001000;
              }
              tournamentTeams_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                tournamentCastersAccountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              tournamentCastersAccountIds_.add(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                tournamentCastersAccountIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                tournamentCastersAccountIds_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              tvRelaySteamid_ = input.readUInt64();
              break;
            }
            case 122: {
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = preMatchData_.toBuilder();
              }
              preMatchData_ = input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(preMatchData_);
                preMatchData_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 128: {
              bitField0_ |= 0x00000400;
              rtime32EventStart_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000800;
              tvControl_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000008;
              flags_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          rankings_ = java.util.Collections.unmodifiableList(rankings_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          partyIds_ = java.util.Collections.unmodifiableList(partyIds_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          whitelist_ = java.util.Collections.unmodifiableList(whitelist_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          tournamentTeams_ = java.util.Collections.unmodifiableList(tournamentTeams_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          tournamentCastersAccountIds_ = java.util.Collections.unmodifiableList(tournamentCastersAccountIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve>() {
      public CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ACCOUNT_IDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> accountIds_;
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getAccountIdsList() {
      return accountIds_;
    }
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    public int getAccountIdsCount() {
      return accountIds_.size();
    }
    /**
     * <code>repeated uint32 account_ids = 1;</code>
     */
    public int getAccountIds(int index) {
      return accountIds_.get(index);
    }

    public static final int GAME_TYPE_FIELD_NUMBER = 2;
    private int gameType_;
    /**
     * <code>optional uint32 game_type = 2;</code>
     */
    public boolean hasGameType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 game_type = 2;</code>
     */
    public int getGameType() {
      return gameType_;
    }

    public static final int MATCH_ID_FIELD_NUMBER = 3;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 3;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 match_id = 3;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int SERVER_VERSION_FIELD_NUMBER = 4;
    private int serverVersion_;
    /**
     * <code>optional uint32 server_version = 4;</code>
     */
    public boolean hasServerVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 server_version = 4;</code>
     */
    public int getServerVersion() {
      return serverVersion_;
    }

    public static final int FLAGS_FIELD_NUMBER = 18;
    private int flags_;
    /**
     * <code>optional uint32 flags = 18;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 flags = 18;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int RANKINGS_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo> rankings_;
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo> getRankingsList() {
      return rankings_;
    }
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder> 
        getRankingsOrBuilderList() {
      return rankings_;
    }
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    public int getRankingsCount() {
      return rankings_.size();
    }
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo getRankings(int index) {
      return rankings_.get(index);
    }
    /**
     * <code>repeated .PlayerRankingInfo rankings = 5;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder getRankingsOrBuilder(
        int index) {
      return rankings_.get(index);
    }

    public static final int ENCRYPTION_KEY_FIELD_NUMBER = 6;
    private long encryptionKey_;
    /**
     * <code>optional uint64 encryption_key = 6;</code>
     */
    public boolean hasEncryptionKey() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint64 encryption_key = 6;</code>
     */
    public long getEncryptionKey() {
      return encryptionKey_;
    }

    public static final int ENCRYPTION_KEY_PUB_FIELD_NUMBER = 7;
    private long encryptionKeyPub_;
    /**
     * <code>optional uint64 encryption_key_pub = 7;</code>
     */
    public boolean hasEncryptionKeyPub() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint64 encryption_key_pub = 7;</code>
     */
    public long getEncryptionKeyPub() {
      return encryptionKeyPub_;
    }

    public static final int PARTY_IDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> partyIds_;
    /**
     * <code>repeated uint32 party_ids = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getPartyIdsList() {
      return partyIds_;
    }
    /**
     * <code>repeated uint32 party_ids = 8;</code>
     */
    public int getPartyIdsCount() {
      return partyIds_.size();
    }
    /**
     * <code>repeated uint32 party_ids = 8;</code>
     */
    public int getPartyIds(int index) {
      return partyIds_.get(index);
    }

    public static final int WHITELIST_FIELD_NUMBER = 9;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask> whitelist_;
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask> getWhitelistList() {
      return whitelist_;
    }
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder> 
        getWhitelistOrBuilderList() {
      return whitelist_;
    }
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    public int getWhitelistCount() {
      return whitelist_.size();
    }
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask getWhitelist(int index) {
      return whitelist_.get(index);
    }
    /**
     * <code>repeated .IpAddressMask whitelist = 9;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder getWhitelistOrBuilder(
        int index) {
      return whitelist_.get(index);
    }

    public static final int TV_MASTER_STEAMID_FIELD_NUMBER = 10;
    private long tvMasterSteamid_;
    /**
     * <code>optional uint64 tv_master_steamid = 10;</code>
     */
    public boolean hasTvMasterSteamid() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint64 tv_master_steamid = 10;</code>
     */
    public long getTvMasterSteamid() {
      return tvMasterSteamid_;
    }

    public static final int TOURNAMENT_EVENT_FIELD_NUMBER = 11;
    private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent tournamentEvent_;
    /**
     * <code>optional .TournamentEvent tournament_event = 11;</code>
     */
    public boolean hasTournamentEvent() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .TournamentEvent tournament_event = 11;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent getTournamentEvent() {
      return tournamentEvent_;
    }
    /**
     * <code>optional .TournamentEvent tournament_event = 11;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder getTournamentEventOrBuilder() {
      return tournamentEvent_;
    }

    public static final int TOURNAMENT_TEAMS_FIELD_NUMBER = 12;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam> tournamentTeams_;
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam> getTournamentTeamsList() {
      return tournamentTeams_;
    }
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder> 
        getTournamentTeamsOrBuilderList() {
      return tournamentTeams_;
    }
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    public int getTournamentTeamsCount() {
      return tournamentTeams_.size();
    }
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam getTournamentTeams(int index) {
      return tournamentTeams_.get(index);
    }
    /**
     * <code>repeated .TournamentTeam tournament_teams = 12;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder getTournamentTeamsOrBuilder(
        int index) {
      return tournamentTeams_.get(index);
    }

    public static final int TOURNAMENT_CASTERS_ACCOUNT_IDS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> tournamentCastersAccountIds_;
    /**
     * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
     */
    public java.util.List<java.lang.Integer>
        getTournamentCastersAccountIdsList() {
      return tournamentCastersAccountIds_;
    }
    /**
     * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
     */
    public int getTournamentCastersAccountIdsCount() {
      return tournamentCastersAccountIds_.size();
    }
    /**
     * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
     */
    public int getTournamentCastersAccountIds(int index) {
      return tournamentCastersAccountIds_.get(index);
    }

    public static final int TV_RELAY_STEAMID_FIELD_NUMBER = 14;
    private long tvRelaySteamid_;
    /**
     * <code>optional uint64 tv_relay_steamid = 14;</code>
     */
    public boolean hasTvRelaySteamid() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint64 tv_relay_steamid = 14;</code>
     */
    public long getTvRelaySteamid() {
      return tvRelaySteamid_;
    }

    public static final int PRE_MATCH_DATA_FIELD_NUMBER = 15;
    private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData preMatchData_;
    /**
     * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
     */
    public boolean hasPreMatchData() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData getPreMatchData() {
      return preMatchData_;
    }
    /**
     * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder getPreMatchDataOrBuilder() {
      return preMatchData_;
    }

    public static final int RTIME32_EVENT_START_FIELD_NUMBER = 16;
    private int rtime32EventStart_;
    /**
     * <code>optional uint32 rtime32_event_start = 16;</code>
     */
    public boolean hasRtime32EventStart() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 rtime32_event_start = 16;</code>
     */
    public int getRtime32EventStart() {
      return rtime32EventStart_;
    }

    public static final int TV_CONTROL_FIELD_NUMBER = 17;
    private int tvControl_;
    /**
     * <code>optional uint32 tv_control = 17;</code>
     */
    public boolean hasTvControl() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 tv_control = 17;</code>
     */
    public int getTvControl() {
      return tvControl_;
    }

    private void initFields() {
      accountIds_ = java.util.Collections.emptyList();
      gameType_ = 0;
      matchId_ = 0L;
      serverVersion_ = 0;
      flags_ = 0;
      rankings_ = java.util.Collections.emptyList();
      encryptionKey_ = 0L;
      encryptionKeyPub_ = 0L;
      partyIds_ = java.util.Collections.emptyList();
      whitelist_ = java.util.Collections.emptyList();
      tvMasterSteamid_ = 0L;
      tournamentEvent_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance();
      tournamentTeams_ = java.util.Collections.emptyList();
      tournamentCastersAccountIds_ = java.util.Collections.emptyList();
      tvRelaySteamid_ = 0L;
      preMatchData_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance();
      rtime32EventStart_ = 0;
      tvControl_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < accountIds_.size(); i++) {
        output.writeUInt32(1, accountIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, gameType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(3, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, serverVersion_);
      }
      for (int i = 0; i < rankings_.size(); i++) {
        output.writeMessage(5, rankings_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(6, encryptionKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(7, encryptionKeyPub_);
      }
      for (int i = 0; i < partyIds_.size(); i++) {
        output.writeUInt32(8, partyIds_.get(i));
      }
      for (int i = 0; i < whitelist_.size(); i++) {
        output.writeMessage(9, whitelist_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(10, tvMasterSteamid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(11, tournamentEvent_);
      }
      for (int i = 0; i < tournamentTeams_.size(); i++) {
        output.writeMessage(12, tournamentTeams_.get(i));
      }
      for (int i = 0; i < tournamentCastersAccountIds_.size(); i++) {
        output.writeUInt32(13, tournamentCastersAccountIds_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt64(14, tvRelaySteamid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, preMatchData_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(16, rtime32EventStart_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(17, tvControl_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(18, flags_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < accountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(accountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAccountIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, gameType_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, matchId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, serverVersion_);
      }
      for (int i = 0; i < rankings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, rankings_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, encryptionKey_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, encryptionKeyPub_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < partyIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(partyIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPartyIdsList().size();
      }
      for (int i = 0; i < whitelist_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, whitelist_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, tvMasterSteamid_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, tournamentEvent_);
      }
      for (int i = 0; i < tournamentTeams_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, tournamentTeams_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tournamentCastersAccountIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tournamentCastersAccountIds_.get(i));
        }
        size += dataSize;
        size += 1 * getTournamentCastersAccountIdsList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(14, tvRelaySteamid_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, preMatchData_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, rtime32EventStart_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, tvControl_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, flags_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve}
     *
     * <pre>
     * 483
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserveOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRankingsFieldBuilder();
          getWhitelistFieldBuilder();
          getTournamentEventFieldBuilder();
          getTournamentTeamsFieldBuilder();
          getPreMatchDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        gameType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        serverVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (rankingsBuilder_ == null) {
          rankings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          rankingsBuilder_.clear();
        }
        encryptionKey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        encryptionKeyPub_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        partyIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        if (whitelistBuilder_ == null) {
          whitelist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          whitelistBuilder_.clear();
        }
        tvMasterSteamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (tournamentEventBuilder_ == null) {
          tournamentEvent_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance();
        } else {
          tournamentEventBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (tournamentTeamsBuilder_ == null) {
          tournamentTeams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          tournamentTeamsBuilder_.clear();
        }
        tournamentCastersAccountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        tvRelaySteamid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        if (preMatchDataBuilder_ == null) {
          preMatchData_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance();
        } else {
          preMatchDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        rtime32EventStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tvControl_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          accountIds_ = java.util.Collections.unmodifiableList(accountIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.accountIds_ = accountIds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.gameType_ = gameType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.matchId_ = matchId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverVersion_ = serverVersion_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.flags_ = flags_;
        if (rankingsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            rankings_ = java.util.Collections.unmodifiableList(rankings_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.rankings_ = rankings_;
        } else {
          result.rankings_ = rankingsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.encryptionKey_ = encryptionKey_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.encryptionKeyPub_ = encryptionKeyPub_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          partyIds_ = java.util.Collections.unmodifiableList(partyIds_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.partyIds_ = partyIds_;
        if (whitelistBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            whitelist_ = java.util.Collections.unmodifiableList(whitelist_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.whitelist_ = whitelist_;
        } else {
          result.whitelist_ = whitelistBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tvMasterSteamid_ = tvMasterSteamid_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        if (tournamentEventBuilder_ == null) {
          result.tournamentEvent_ = tournamentEvent_;
        } else {
          result.tournamentEvent_ = tournamentEventBuilder_.build();
        }
        if (tournamentTeamsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            tournamentTeams_ = java.util.Collections.unmodifiableList(tournamentTeams_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.tournamentTeams_ = tournamentTeams_;
        } else {
          result.tournamentTeams_ = tournamentTeamsBuilder_.build();
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          tournamentCastersAccountIds_ = java.util.Collections.unmodifiableList(tournamentCastersAccountIds_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.tournamentCastersAccountIds_ = tournamentCastersAccountIds_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.tvRelaySteamid_ = tvRelaySteamid_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000200;
        }
        if (preMatchDataBuilder_ == null) {
          result.preMatchData_ = preMatchData_;
        } else {
          result.preMatchData_ = preMatchDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.rtime32EventStart_ = rtime32EventStart_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tvControl_ = tvControl_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve.getDefaultInstance()) return this;
        if (!other.accountIds_.isEmpty()) {
          if (accountIds_.isEmpty()) {
            accountIds_ = other.accountIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAccountIdsIsMutable();
            accountIds_.addAll(other.accountIds_);
          }
          onChanged();
        }
        if (other.hasGameType()) {
          setGameType(other.getGameType());
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (other.hasServerVersion()) {
          setServerVersion(other.getServerVersion());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (rankingsBuilder_ == null) {
          if (!other.rankings_.isEmpty()) {
            if (rankings_.isEmpty()) {
              rankings_ = other.rankings_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureRankingsIsMutable();
              rankings_.addAll(other.rankings_);
            }
            onChanged();
          }
        } else {
          if (!other.rankings_.isEmpty()) {
            if (rankingsBuilder_.isEmpty()) {
              rankingsBuilder_.dispose();
              rankingsBuilder_ = null;
              rankings_ = other.rankings_;
              bitField0_ = (bitField0_ & ~0x00000020);
              rankingsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRankingsFieldBuilder() : null;
            } else {
              rankingsBuilder_.addAllMessages(other.rankings_);
            }
          }
        }
        if (other.hasEncryptionKey()) {
          setEncryptionKey(other.getEncryptionKey());
        }
        if (other.hasEncryptionKeyPub()) {
          setEncryptionKeyPub(other.getEncryptionKeyPub());
        }
        if (!other.partyIds_.isEmpty()) {
          if (partyIds_.isEmpty()) {
            partyIds_ = other.partyIds_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensurePartyIdsIsMutable();
            partyIds_.addAll(other.partyIds_);
          }
          onChanged();
        }
        if (whitelistBuilder_ == null) {
          if (!other.whitelist_.isEmpty()) {
            if (whitelist_.isEmpty()) {
              whitelist_ = other.whitelist_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureWhitelistIsMutable();
              whitelist_.addAll(other.whitelist_);
            }
            onChanged();
          }
        } else {
          if (!other.whitelist_.isEmpty()) {
            if (whitelistBuilder_.isEmpty()) {
              whitelistBuilder_.dispose();
              whitelistBuilder_ = null;
              whitelist_ = other.whitelist_;
              bitField0_ = (bitField0_ & ~0x00000200);
              whitelistBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWhitelistFieldBuilder() : null;
            } else {
              whitelistBuilder_.addAllMessages(other.whitelist_);
            }
          }
        }
        if (other.hasTvMasterSteamid()) {
          setTvMasterSteamid(other.getTvMasterSteamid());
        }
        if (other.hasTournamentEvent()) {
          mergeTournamentEvent(other.getTournamentEvent());
        }
        if (tournamentTeamsBuilder_ == null) {
          if (!other.tournamentTeams_.isEmpty()) {
            if (tournamentTeams_.isEmpty()) {
              tournamentTeams_ = other.tournamentTeams_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureTournamentTeamsIsMutable();
              tournamentTeams_.addAll(other.tournamentTeams_);
            }
            onChanged();
          }
        } else {
          if (!other.tournamentTeams_.isEmpty()) {
            if (tournamentTeamsBuilder_.isEmpty()) {
              tournamentTeamsBuilder_.dispose();
              tournamentTeamsBuilder_ = null;
              tournamentTeams_ = other.tournamentTeams_;
              bitField0_ = (bitField0_ & ~0x00001000);
              tournamentTeamsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTournamentTeamsFieldBuilder() : null;
            } else {
              tournamentTeamsBuilder_.addAllMessages(other.tournamentTeams_);
            }
          }
        }
        if (!other.tournamentCastersAccountIds_.isEmpty()) {
          if (tournamentCastersAccountIds_.isEmpty()) {
            tournamentCastersAccountIds_ = other.tournamentCastersAccountIds_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureTournamentCastersAccountIdsIsMutable();
            tournamentCastersAccountIds_.addAll(other.tournamentCastersAccountIds_);
          }
          onChanged();
        }
        if (other.hasTvRelaySteamid()) {
          setTvRelaySteamid(other.getTvRelaySteamid());
        }
        if (other.hasPreMatchData()) {
          mergePreMatchData(other.getPreMatchData());
        }
        if (other.hasRtime32EventStart()) {
          setRtime32EventStart(other.getRtime32EventStart());
        }
        if (other.hasTvControl()) {
          setTvControl(other.getTvControl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> accountIds_ = java.util.Collections.emptyList();
      private void ensureAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          accountIds_ = new java.util.ArrayList<java.lang.Integer>(accountIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getAccountIdsList() {
        return java.util.Collections.unmodifiableList(accountIds_);
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public int getAccountIdsCount() {
        return accountIds_.size();
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public int getAccountIds(int index) {
        return accountIds_.get(index);
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder setAccountIds(
          int index, int value) {
        ensureAccountIdsIsMutable();
        accountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder addAccountIds(int value) {
        ensureAccountIdsIsMutable();
        accountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder addAllAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAccountIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, accountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 account_ids = 1;</code>
       */
      public Builder clearAccountIds() {
        accountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int gameType_ ;
      /**
       * <code>optional uint32 game_type = 2;</code>
       */
      public boolean hasGameType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 game_type = 2;</code>
       */
      public int getGameType() {
        return gameType_;
      }
      /**
       * <code>optional uint32 game_type = 2;</code>
       */
      public Builder setGameType(int value) {
        bitField0_ |= 0x00000002;
        gameType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 game_type = 2;</code>
       */
      public Builder clearGameType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        gameType_ = 0;
        onChanged();
        return this;
      }

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000004;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 3;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private int serverVersion_ ;
      /**
       * <code>optional uint32 server_version = 4;</code>
       */
      public boolean hasServerVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 server_version = 4;</code>
       */
      public int getServerVersion() {
        return serverVersion_;
      }
      /**
       * <code>optional uint32 server_version = 4;</code>
       */
      public Builder setServerVersion(int value) {
        bitField0_ |= 0x00000008;
        serverVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 server_version = 4;</code>
       */
      public Builder clearServerVersion() {
        bitField0_ = (bitField0_ & ~0x00000008);
        serverVersion_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <code>optional uint32 flags = 18;</code>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 flags = 18;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional uint32 flags = 18;</code>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000010;
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 flags = 18;</code>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000010);
        flags_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo> rankings_ =
        java.util.Collections.emptyList();
      private void ensureRankingsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          rankings_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo>(rankings_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder> rankingsBuilder_;

      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo> getRankingsList() {
        if (rankingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rankings_);
        } else {
          return rankingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public int getRankingsCount() {
        if (rankingsBuilder_ == null) {
          return rankings_.size();
        } else {
          return rankingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo getRankings(int index) {
        if (rankingsBuilder_ == null) {
          return rankings_.get(index);
        } else {
          return rankingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder setRankings(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo value) {
        if (rankingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRankingsIsMutable();
          rankings_.set(index, value);
          onChanged();
        } else {
          rankingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder setRankings(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder builderForValue) {
        if (rankingsBuilder_ == null) {
          ensureRankingsIsMutable();
          rankings_.set(index, builderForValue.build());
          onChanged();
        } else {
          rankingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder addRankings(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo value) {
        if (rankingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRankingsIsMutable();
          rankings_.add(value);
          onChanged();
        } else {
          rankingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder addRankings(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo value) {
        if (rankingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRankingsIsMutable();
          rankings_.add(index, value);
          onChanged();
        } else {
          rankingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder addRankings(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder builderForValue) {
        if (rankingsBuilder_ == null) {
          ensureRankingsIsMutable();
          rankings_.add(builderForValue.build());
          onChanged();
        } else {
          rankingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder addRankings(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder builderForValue) {
        if (rankingsBuilder_ == null) {
          ensureRankingsIsMutable();
          rankings_.add(index, builderForValue.build());
          onChanged();
        } else {
          rankingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder addAllRankings(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo> values) {
        if (rankingsBuilder_ == null) {
          ensureRankingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rankings_);
          onChanged();
        } else {
          rankingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder clearRankings() {
        if (rankingsBuilder_ == null) {
          rankings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          rankingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public Builder removeRankings(int index) {
        if (rankingsBuilder_ == null) {
          ensureRankingsIsMutable();
          rankings_.remove(index);
          onChanged();
        } else {
          rankingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder getRankingsBuilder(
          int index) {
        return getRankingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder getRankingsOrBuilder(
          int index) {
        if (rankingsBuilder_ == null) {
          return rankings_.get(index);  } else {
          return rankingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder> 
           getRankingsOrBuilderList() {
        if (rankingsBuilder_ != null) {
          return rankingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rankings_);
        }
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder addRankingsBuilder() {
        return getRankingsFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder addRankingsBuilder(
          int index) {
        return getRankingsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .PlayerRankingInfo rankings = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder> 
           getRankingsBuilderList() {
        return getRankingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder> 
          getRankingsFieldBuilder() {
        if (rankingsBuilder_ == null) {
          rankingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfo.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerRankingInfoOrBuilder>(
                  rankings_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          rankings_ = null;
        }
        return rankingsBuilder_;
      }

      private long encryptionKey_ ;
      /**
       * <code>optional uint64 encryption_key = 6;</code>
       */
      public boolean hasEncryptionKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint64 encryption_key = 6;</code>
       */
      public long getEncryptionKey() {
        return encryptionKey_;
      }
      /**
       * <code>optional uint64 encryption_key = 6;</code>
       */
      public Builder setEncryptionKey(long value) {
        bitField0_ |= 0x00000040;
        encryptionKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 encryption_key = 6;</code>
       */
      public Builder clearEncryptionKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        encryptionKey_ = 0L;
        onChanged();
        return this;
      }

      private long encryptionKeyPub_ ;
      /**
       * <code>optional uint64 encryption_key_pub = 7;</code>
       */
      public boolean hasEncryptionKeyPub() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 encryption_key_pub = 7;</code>
       */
      public long getEncryptionKeyPub() {
        return encryptionKeyPub_;
      }
      /**
       * <code>optional uint64 encryption_key_pub = 7;</code>
       */
      public Builder setEncryptionKeyPub(long value) {
        bitField0_ |= 0x00000080;
        encryptionKeyPub_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 encryption_key_pub = 7;</code>
       */
      public Builder clearEncryptionKeyPub() {
        bitField0_ = (bitField0_ & ~0x00000080);
        encryptionKeyPub_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> partyIds_ = java.util.Collections.emptyList();
      private void ensurePartyIdsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          partyIds_ = new java.util.ArrayList<java.lang.Integer>(partyIds_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getPartyIdsList() {
        return java.util.Collections.unmodifiableList(partyIds_);
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public int getPartyIdsCount() {
        return partyIds_.size();
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public int getPartyIds(int index) {
        return partyIds_.get(index);
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public Builder setPartyIds(
          int index, int value) {
        ensurePartyIdsIsMutable();
        partyIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public Builder addPartyIds(int value) {
        ensurePartyIdsIsMutable();
        partyIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public Builder addAllPartyIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePartyIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, partyIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 party_ids = 8;</code>
       */
      public Builder clearPartyIds() {
        partyIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask> whitelist_ =
        java.util.Collections.emptyList();
      private void ensureWhitelistIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          whitelist_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask>(whitelist_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder> whitelistBuilder_;

      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask> getWhitelistList() {
        if (whitelistBuilder_ == null) {
          return java.util.Collections.unmodifiableList(whitelist_);
        } else {
          return whitelistBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public int getWhitelistCount() {
        if (whitelistBuilder_ == null) {
          return whitelist_.size();
        } else {
          return whitelistBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask getWhitelist(int index) {
        if (whitelistBuilder_ == null) {
          return whitelist_.get(index);
        } else {
          return whitelistBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder setWhitelist(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask value) {
        if (whitelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWhitelistIsMutable();
          whitelist_.set(index, value);
          onChanged();
        } else {
          whitelistBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder setWhitelist(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder builderForValue) {
        if (whitelistBuilder_ == null) {
          ensureWhitelistIsMutable();
          whitelist_.set(index, builderForValue.build());
          onChanged();
        } else {
          whitelistBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder addWhitelist(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask value) {
        if (whitelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWhitelistIsMutable();
          whitelist_.add(value);
          onChanged();
        } else {
          whitelistBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder addWhitelist(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask value) {
        if (whitelistBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWhitelistIsMutable();
          whitelist_.add(index, value);
          onChanged();
        } else {
          whitelistBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder addWhitelist(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder builderForValue) {
        if (whitelistBuilder_ == null) {
          ensureWhitelistIsMutable();
          whitelist_.add(builderForValue.build());
          onChanged();
        } else {
          whitelistBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder addWhitelist(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder builderForValue) {
        if (whitelistBuilder_ == null) {
          ensureWhitelistIsMutable();
          whitelist_.add(index, builderForValue.build());
          onChanged();
        } else {
          whitelistBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder addAllWhitelist(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask> values) {
        if (whitelistBuilder_ == null) {
          ensureWhitelistIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, whitelist_);
          onChanged();
        } else {
          whitelistBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder clearWhitelist() {
        if (whitelistBuilder_ == null) {
          whitelist_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          whitelistBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public Builder removeWhitelist(int index) {
        if (whitelistBuilder_ == null) {
          ensureWhitelistIsMutable();
          whitelist_.remove(index);
          onChanged();
        } else {
          whitelistBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder getWhitelistBuilder(
          int index) {
        return getWhitelistFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder getWhitelistOrBuilder(
          int index) {
        if (whitelistBuilder_ == null) {
          return whitelist_.get(index);  } else {
          return whitelistBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder> 
           getWhitelistOrBuilderList() {
        if (whitelistBuilder_ != null) {
          return whitelistBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(whitelist_);
        }
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder addWhitelistBuilder() {
        return getWhitelistFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.getDefaultInstance());
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder addWhitelistBuilder(
          int index) {
        return getWhitelistFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.getDefaultInstance());
      }
      /**
       * <code>repeated .IpAddressMask whitelist = 9;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder> 
           getWhitelistBuilderList() {
        return getWhitelistFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder> 
          getWhitelistFieldBuilder() {
        if (whitelistBuilder_ == null) {
          whitelistBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMask.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.IpAddressMaskOrBuilder>(
                  whitelist_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          whitelist_ = null;
        }
        return whitelistBuilder_;
      }

      private long tvMasterSteamid_ ;
      /**
       * <code>optional uint64 tv_master_steamid = 10;</code>
       */
      public boolean hasTvMasterSteamid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint64 tv_master_steamid = 10;</code>
       */
      public long getTvMasterSteamid() {
        return tvMasterSteamid_;
      }
      /**
       * <code>optional uint64 tv_master_steamid = 10;</code>
       */
      public Builder setTvMasterSteamid(long value) {
        bitField0_ |= 0x00000400;
        tvMasterSteamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 tv_master_steamid = 10;</code>
       */
      public Builder clearTvMasterSteamid() {
        bitField0_ = (bitField0_ & ~0x00000400);
        tvMasterSteamid_ = 0L;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent tournamentEvent_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder> tournamentEventBuilder_;
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public boolean hasTournamentEvent() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent getTournamentEvent() {
        if (tournamentEventBuilder_ == null) {
          return tournamentEvent_;
        } else {
          return tournamentEventBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public Builder setTournamentEvent(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent value) {
        if (tournamentEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tournamentEvent_ = value;
          onChanged();
        } else {
          tournamentEventBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public Builder setTournamentEvent(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder builderForValue) {
        if (tournamentEventBuilder_ == null) {
          tournamentEvent_ = builderForValue.build();
          onChanged();
        } else {
          tournamentEventBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public Builder mergeTournamentEvent(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent value) {
        if (tournamentEventBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              tournamentEvent_ != skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance()) {
            tournamentEvent_ =
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.newBuilder(tournamentEvent_).mergeFrom(value).buildPartial();
          } else {
            tournamentEvent_ = value;
          }
          onChanged();
        } else {
          tournamentEventBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public Builder clearTournamentEvent() {
        if (tournamentEventBuilder_ == null) {
          tournamentEvent_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.getDefaultInstance();
          onChanged();
        } else {
          tournamentEventBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder getTournamentEventBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getTournamentEventFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder getTournamentEventOrBuilder() {
        if (tournamentEventBuilder_ != null) {
          return tournamentEventBuilder_.getMessageOrBuilder();
        } else {
          return tournamentEvent_;
        }
      }
      /**
       * <code>optional .TournamentEvent tournament_event = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder> 
          getTournamentEventFieldBuilder() {
        if (tournamentEventBuilder_ == null) {
          tournamentEventBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEvent.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentEventOrBuilder>(
                  getTournamentEvent(),
                  getParentForChildren(),
                  isClean());
          tournamentEvent_ = null;
        }
        return tournamentEventBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam> tournamentTeams_ =
        java.util.Collections.emptyList();
      private void ensureTournamentTeamsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          tournamentTeams_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam>(tournamentTeams_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder> tournamentTeamsBuilder_;

      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam> getTournamentTeamsList() {
        if (tournamentTeamsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tournamentTeams_);
        } else {
          return tournamentTeamsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public int getTournamentTeamsCount() {
        if (tournamentTeamsBuilder_ == null) {
          return tournamentTeams_.size();
        } else {
          return tournamentTeamsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam getTournamentTeams(int index) {
        if (tournamentTeamsBuilder_ == null) {
          return tournamentTeams_.get(index);
        } else {
          return tournamentTeamsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder setTournamentTeams(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam value) {
        if (tournamentTeamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.set(index, value);
          onChanged();
        } else {
          tournamentTeamsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder setTournamentTeams(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder builderForValue) {
        if (tournamentTeamsBuilder_ == null) {
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.set(index, builderForValue.build());
          onChanged();
        } else {
          tournamentTeamsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder addTournamentTeams(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam value) {
        if (tournamentTeamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.add(value);
          onChanged();
        } else {
          tournamentTeamsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder addTournamentTeams(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam value) {
        if (tournamentTeamsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.add(index, value);
          onChanged();
        } else {
          tournamentTeamsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder addTournamentTeams(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder builderForValue) {
        if (tournamentTeamsBuilder_ == null) {
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.add(builderForValue.build());
          onChanged();
        } else {
          tournamentTeamsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder addTournamentTeams(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder builderForValue) {
        if (tournamentTeamsBuilder_ == null) {
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.add(index, builderForValue.build());
          onChanged();
        } else {
          tournamentTeamsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder addAllTournamentTeams(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam> values) {
        if (tournamentTeamsBuilder_ == null) {
          ensureTournamentTeamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tournamentTeams_);
          onChanged();
        } else {
          tournamentTeamsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder clearTournamentTeams() {
        if (tournamentTeamsBuilder_ == null) {
          tournamentTeams_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          tournamentTeamsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public Builder removeTournamentTeams(int index) {
        if (tournamentTeamsBuilder_ == null) {
          ensureTournamentTeamsIsMutable();
          tournamentTeams_.remove(index);
          onChanged();
        } else {
          tournamentTeamsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder getTournamentTeamsBuilder(
          int index) {
        return getTournamentTeamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder getTournamentTeamsOrBuilder(
          int index) {
        if (tournamentTeamsBuilder_ == null) {
          return tournamentTeams_.get(index);  } else {
          return tournamentTeamsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder> 
           getTournamentTeamsOrBuilderList() {
        if (tournamentTeamsBuilder_ != null) {
          return tournamentTeamsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tournamentTeams_);
        }
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder addTournamentTeamsBuilder() {
        return getTournamentTeamsFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.getDefaultInstance());
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder addTournamentTeamsBuilder(
          int index) {
        return getTournamentTeamsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.getDefaultInstance());
      }
      /**
       * <code>repeated .TournamentTeam tournament_teams = 12;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder> 
           getTournamentTeamsBuilderList() {
        return getTournamentTeamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder> 
          getTournamentTeamsFieldBuilder() {
        if (tournamentTeamsBuilder_ == null) {
          tournamentTeamsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeam.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.TournamentTeamOrBuilder>(
                  tournamentTeams_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          tournamentTeams_ = null;
        }
        return tournamentTeamsBuilder_;
      }

      private java.util.List<java.lang.Integer> tournamentCastersAccountIds_ = java.util.Collections.emptyList();
      private void ensureTournamentCastersAccountIdsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          tournamentCastersAccountIds_ = new java.util.ArrayList<java.lang.Integer>(tournamentCastersAccountIds_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public java.util.List<java.lang.Integer>
          getTournamentCastersAccountIdsList() {
        return java.util.Collections.unmodifiableList(tournamentCastersAccountIds_);
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public int getTournamentCastersAccountIdsCount() {
        return tournamentCastersAccountIds_.size();
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public int getTournamentCastersAccountIds(int index) {
        return tournamentCastersAccountIds_.get(index);
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public Builder setTournamentCastersAccountIds(
          int index, int value) {
        ensureTournamentCastersAccountIdsIsMutable();
        tournamentCastersAccountIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public Builder addTournamentCastersAccountIds(int value) {
        ensureTournamentCastersAccountIdsIsMutable();
        tournamentCastersAccountIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public Builder addAllTournamentCastersAccountIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTournamentCastersAccountIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tournamentCastersAccountIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tournament_casters_account_ids = 13;</code>
       */
      public Builder clearTournamentCastersAccountIds() {
        tournamentCastersAccountIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      private long tvRelaySteamid_ ;
      /**
       * <code>optional uint64 tv_relay_steamid = 14;</code>
       */
      public boolean hasTvRelaySteamid() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint64 tv_relay_steamid = 14;</code>
       */
      public long getTvRelaySteamid() {
        return tvRelaySteamid_;
      }
      /**
       * <code>optional uint64 tv_relay_steamid = 14;</code>
       */
      public Builder setTvRelaySteamid(long value) {
        bitField0_ |= 0x00004000;
        tvRelaySteamid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 tv_relay_steamid = 14;</code>
       */
      public Builder clearTvRelaySteamid() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tvRelaySteamid_ = 0L;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData preMatchData_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder> preMatchDataBuilder_;
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public boolean hasPreMatchData() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData getPreMatchData() {
        if (preMatchDataBuilder_ == null) {
          return preMatchData_;
        } else {
          return preMatchDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public Builder setPreMatchData(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData value) {
        if (preMatchDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          preMatchData_ = value;
          onChanged();
        } else {
          preMatchDataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public Builder setPreMatchData(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder builderForValue) {
        if (preMatchDataBuilder_ == null) {
          preMatchData_ = builderForValue.build();
          onChanged();
        } else {
          preMatchDataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public Builder mergePreMatchData(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData value) {
        if (preMatchDataBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000) &&
              preMatchData_ != skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance()) {
            preMatchData_ =
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.newBuilder(preMatchData_).mergeFrom(value).buildPartial();
          } else {
            preMatchData_ = value;
          }
          onChanged();
        } else {
          preMatchDataBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00008000;
        return this;
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public Builder clearPreMatchData() {
        if (preMatchDataBuilder_ == null) {
          preMatchData_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.getDefaultInstance();
          onChanged();
        } else {
          preMatchDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder getPreMatchDataBuilder() {
        bitField0_ |= 0x00008000;
        onChanged();
        return getPreMatchDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder getPreMatchDataOrBuilder() {
        if (preMatchDataBuilder_ != null) {
          return preMatchDataBuilder_.getMessageOrBuilder();
        } else {
          return preMatchData_;
        }
      }
      /**
       * <code>optional .CPreMatchInfoData pre_match_data = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder> 
          getPreMatchDataFieldBuilder() {
        if (preMatchDataBuilder_ == null) {
          preMatchDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoData.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CPreMatchInfoDataOrBuilder>(
                  getPreMatchData(),
                  getParentForChildren(),
                  isClean());
          preMatchData_ = null;
        }
        return preMatchDataBuilder_;
      }

      private int rtime32EventStart_ ;
      /**
       * <code>optional uint32 rtime32_event_start = 16;</code>
       */
      public boolean hasRtime32EventStart() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 rtime32_event_start = 16;</code>
       */
      public int getRtime32EventStart() {
        return rtime32EventStart_;
      }
      /**
       * <code>optional uint32 rtime32_event_start = 16;</code>
       */
      public Builder setRtime32EventStart(int value) {
        bitField0_ |= 0x00010000;
        rtime32EventStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rtime32_event_start = 16;</code>
       */
      public Builder clearRtime32EventStart() {
        bitField0_ = (bitField0_ & ~0x00010000);
        rtime32EventStart_ = 0;
        onChanged();
        return this;
      }

      private int tvControl_ ;
      /**
       * <code>optional uint32 tv_control = 17;</code>
       */
      public boolean hasTvControl() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 tv_control = 17;</code>
       */
      public int getTvControl() {
        return tvControl_;
      }
      /**
       * <code>optional uint32 tv_control = 17;</code>
       */
      public Builder setTvControl(int value) {
        bitField0_ |= 0x00020000;
        tvControl_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tv_control = 17;</code>
       */
      public Builder clearTvControl() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tvControl_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
    }

    static {
      defaultInstance = new CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve)
  }

  public interface CMsgGCCStrike15_ClientDeepStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCCStrike15_ClientDeepStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    int getAccountId();

    /**
     * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
     */
    boolean hasRange();
    /**
     * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange getRange();
    /**
     * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder getRangeOrBuilder();

    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch> 
        getMatchesList();
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch getMatches(int index);
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    int getMatchesCount();
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder> 
        getMatchesOrBuilderList();
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder getMatchesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgGCCStrike15_ClientDeepStats}
   *
   * <pre>
   * 713
   * </pre>
   */
  public static final class CMsgGCCStrike15_ClientDeepStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCCStrike15_ClientDeepStats)
      CMsgGCCStrike15_ClientDeepStatsOrBuilder {
    // Use CMsgGCCStrike15_ClientDeepStats.newBuilder() to construct.
    private CMsgGCCStrike15_ClientDeepStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCCStrike15_ClientDeepStats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCCStrike15_ClientDeepStats defaultInstance;
    public static CMsgGCCStrike15_ClientDeepStats getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCCStrike15_ClientDeepStats getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCCStrike15_ClientDeepStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 18: {
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = range_.toBuilder();
              }
              range_ = input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(range_);
                range_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                matches_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch>();
                mutable_bitField0_ |= 0x00000004;
              }
              matches_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          matches_ = java.util.Collections.unmodifiableList(matches_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCCStrike15_ClientDeepStats> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCCStrike15_ClientDeepStats>() {
      public CMsgGCCStrike15_ClientDeepStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCCStrike15_ClientDeepStats(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCCStrike15_ClientDeepStats> getParserForType() {
      return PARSER;
    }

    public interface DeepStatsRangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 begin = 1;</code>
       */
      boolean hasBegin();
      /**
       * <code>optional uint32 begin = 1;</code>
       */
      int getBegin();

      /**
       * <code>optional uint32 end = 2;</code>
       */
      boolean hasEnd();
      /**
       * <code>optional uint32 end = 2;</code>
       */
      int getEnd();

      /**
       * <code>optional bool frozen = 3;</code>
       */
      boolean hasFrozen();
      /**
       * <code>optional bool frozen = 3;</code>
       */
      boolean getFrozen();
    }
    /**
     * Protobuf type {@code CMsgGCCStrike15_ClientDeepStats.DeepStatsRange}
     */
    public static final class DeepStatsRange extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
        DeepStatsRangeOrBuilder {
      // Use DeepStatsRange.newBuilder() to construct.
      private DeepStatsRange(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DeepStatsRange(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DeepStatsRange defaultInstance;
      public static DeepStatsRange getDefaultInstance() {
        return defaultInstance;
      }

      public DeepStatsRange getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DeepStatsRange(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                begin_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                end_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                frozen_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder.class);
      }

      public static com.google.protobuf.Parser<DeepStatsRange> PARSER =
          new com.google.protobuf.AbstractParser<DeepStatsRange>() {
        public DeepStatsRange parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeepStatsRange(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DeepStatsRange> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int BEGIN_FIELD_NUMBER = 1;
      private int begin_;
      /**
       * <code>optional uint32 begin = 1;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 begin = 1;</code>
       */
      public int getBegin() {
        return begin_;
      }

      public static final int END_FIELD_NUMBER = 2;
      private int end_;
      /**
       * <code>optional uint32 end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }

      public static final int FROZEN_FIELD_NUMBER = 3;
      private boolean frozen_;
      /**
       * <code>optional bool frozen = 3;</code>
       */
      public boolean hasFrozen() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool frozen = 3;</code>
       */
      public boolean getFrozen() {
        return frozen_;
      }

      private void initFields() {
        begin_ = 0;
        end_ = 0;
        frozen_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, begin_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, end_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, frozen_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, begin_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, end_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, frozen_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgGCCStrike15_ClientDeepStats.DeepStatsRange}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          begin_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          end_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          frozen_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.begin_ = begin_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.end_ = end_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.frozen_ = frozen_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance()) return this;
          if (other.hasBegin()) {
            setBegin(other.getBegin());
          }
          if (other.hasEnd()) {
            setEnd(other.getEnd());
          }
          if (other.hasFrozen()) {
            setFrozen(other.getFrozen());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int begin_ ;
        /**
         * <code>optional uint32 begin = 1;</code>
         */
        public boolean hasBegin() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 begin = 1;</code>
         */
        public int getBegin() {
          return begin_;
        }
        /**
         * <code>optional uint32 begin = 1;</code>
         */
        public Builder setBegin(int value) {
          bitField0_ |= 0x00000001;
          begin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 begin = 1;</code>
         */
        public Builder clearBegin() {
          bitField0_ = (bitField0_ & ~0x00000001);
          begin_ = 0;
          onChanged();
          return this;
        }

        private int end_ ;
        /**
         * <code>optional uint32 end = 2;</code>
         */
        public boolean hasEnd() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 end = 2;</code>
         */
        public int getEnd() {
          return end_;
        }
        /**
         * <code>optional uint32 end = 2;</code>
         */
        public Builder setEnd(int value) {
          bitField0_ |= 0x00000002;
          end_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 end = 2;</code>
         */
        public Builder clearEnd() {
          bitField0_ = (bitField0_ & ~0x00000002);
          end_ = 0;
          onChanged();
          return this;
        }

        private boolean frozen_ ;
        /**
         * <code>optional bool frozen = 3;</code>
         */
        public boolean hasFrozen() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool frozen = 3;</code>
         */
        public boolean getFrozen() {
          return frozen_;
        }
        /**
         * <code>optional bool frozen = 3;</code>
         */
        public Builder setFrozen(boolean value) {
          bitField0_ |= 0x00000004;
          frozen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool frozen = 3;</code>
         */
        public Builder clearFrozen() {
          bitField0_ = (bitField0_ & ~0x00000004);
          frozen_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
      }

      static {
        defaultInstance = new DeepStatsRange(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgGCCStrike15_ClientDeepStats.DeepStatsRange)
    }

    public interface DeepStatsMatchOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional .DeepPlayerStatsEntry player = 1;</code>
       */
      boolean hasPlayer();
      /**
       * <code>optional .DeepPlayerStatsEntry player = 1;</code>
       */
      skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry getPlayer();
      /**
       * <code>optional .DeepPlayerStatsEntry player = 1;</code>
       */
      skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder getPlayerOrBuilder();

      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent> 
          getEventsList();
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent getEvents(int index);
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      int getEventsCount();
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder> 
          getEventsOrBuilderList();
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder getEventsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch}
     */
    public static final class DeepStatsMatch extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
        DeepStatsMatchOrBuilder {
      // Use DeepStatsMatch.newBuilder() to construct.
      private DeepStatsMatch(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private DeepStatsMatch(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final DeepStatsMatch defaultInstance;
      public static DeepStatsMatch getDefaultInstance() {
        return defaultInstance;
      }

      public DeepStatsMatch getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private DeepStatsMatch(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = player_.toBuilder();
                }
                player_ = input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(player_);
                  player_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  events_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent>();
                  mutable_bitField0_ |= 0x00000002;
                }
                events_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            events_ = java.util.Collections.unmodifiableList(events_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder.class);
      }

      public static com.google.protobuf.Parser<DeepStatsMatch> PARSER =
          new com.google.protobuf.AbstractParser<DeepStatsMatch>() {
        public DeepStatsMatch parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DeepStatsMatch(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<DeepStatsMatch> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int PLAYER_FIELD_NUMBER = 1;
      private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry player_;
      /**
       * <code>optional .DeepPlayerStatsEntry player = 1;</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .DeepPlayerStatsEntry player = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry getPlayer() {
        return player_;
      }
      /**
       * <code>optional .DeepPlayerStatsEntry player = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder getPlayerOrBuilder() {
        return player_;
      }

      public static final int EVENTS_FIELD_NUMBER = 2;
      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent> events_;
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent> getEventsList() {
        return events_;
      }
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder> 
          getEventsOrBuilderList() {
        return events_;
      }
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      public int getEventsCount() {
        return events_.size();
      }
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent getEvents(int index) {
        return events_.get(index);
      }
      /**
       * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder getEventsOrBuilder(
          int index) {
        return events_.get(index);
      }

      private void initFields() {
        player_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance();
        events_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, player_);
        }
        for (int i = 0; i < events_.size(); i++) {
          output.writeMessage(2, events_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, player_);
        }
        for (int i = 0; i < events_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, events_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPlayerFieldBuilder();
            getEventsFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (playerBuilder_ == null) {
            player_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance();
          } else {
            playerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (eventsBuilder_ == null) {
            events_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            eventsBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (playerBuilder_ == null) {
            result.player_ = player_;
          } else {
            result.player_ = playerBuilder_.build();
          }
          if (eventsBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              events_ = java.util.Collections.unmodifiableList(events_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.events_ = events_;
          } else {
            result.events_ = eventsBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.getDefaultInstance()) return this;
          if (other.hasPlayer()) {
            mergePlayer(other.getPlayer());
          }
          if (eventsBuilder_ == null) {
            if (!other.events_.isEmpty()) {
              if (events_.isEmpty()) {
                events_ = other.events_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureEventsIsMutable();
                events_.addAll(other.events_);
              }
              onChanged();
            }
          } else {
            if (!other.events_.isEmpty()) {
              if (eventsBuilder_.isEmpty()) {
                eventsBuilder_.dispose();
                eventsBuilder_ = null;
                events_ = other.events_;
                bitField0_ = (bitField0_ & ~0x00000002);
                eventsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getEventsFieldBuilder() : null;
              } else {
                eventsBuilder_.addAllMessages(other.events_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry player_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder> playerBuilder_;
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public boolean hasPlayer() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry getPlayer() {
          if (playerBuilder_ == null) {
            return player_;
          } else {
            return playerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public Builder setPlayer(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry value) {
          if (playerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            player_ = value;
            onChanged();
          } else {
            playerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public Builder setPlayer(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder builderForValue) {
          if (playerBuilder_ == null) {
            player_ = builderForValue.build();
            onChanged();
          } else {
            playerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public Builder mergePlayer(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry value) {
          if (playerBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                player_ != skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance()) {
              player_ =
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.newBuilder(player_).mergeFrom(value).buildPartial();
            } else {
              player_ = value;
            }
            onChanged();
          } else {
            playerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public Builder clearPlayer() {
          if (playerBuilder_ == null) {
            player_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.getDefaultInstance();
            onChanged();
          } else {
            playerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder getPlayerBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPlayerFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder getPlayerOrBuilder() {
          if (playerBuilder_ != null) {
            return playerBuilder_.getMessageOrBuilder();
          } else {
            return player_;
          }
        }
        /**
         * <code>optional .DeepPlayerStatsEntry player = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder> 
            getPlayerFieldBuilder() {
          if (playerBuilder_ == null) {
            playerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntry.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerStatsEntryOrBuilder>(
                    getPlayer(),
                    getParentForChildren(),
                    isClean());
            player_ = null;
          }
          return playerBuilder_;
        }

        private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent> events_ =
          java.util.Collections.emptyList();
        private void ensureEventsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            events_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent>(events_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder> eventsBuilder_;

        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent> getEventsList() {
          if (eventsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(events_);
          } else {
            return eventsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public int getEventsCount() {
          if (eventsBuilder_ == null) {
            return events_.size();
          } else {
            return eventsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent getEvents(int index) {
          if (eventsBuilder_ == null) {
            return events_.get(index);
          } else {
            return eventsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder setEvents(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent value) {
          if (eventsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEventsIsMutable();
            events_.set(index, value);
            onChanged();
          } else {
            eventsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder setEvents(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder builderForValue) {
          if (eventsBuilder_ == null) {
            ensureEventsIsMutable();
            events_.set(index, builderForValue.build());
            onChanged();
          } else {
            eventsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder addEvents(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent value) {
          if (eventsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEventsIsMutable();
            events_.add(value);
            onChanged();
          } else {
            eventsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder addEvents(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent value) {
          if (eventsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureEventsIsMutable();
            events_.add(index, value);
            onChanged();
          } else {
            eventsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder addEvents(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder builderForValue) {
          if (eventsBuilder_ == null) {
            ensureEventsIsMutable();
            events_.add(builderForValue.build());
            onChanged();
          } else {
            eventsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder addEvents(
            int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder builderForValue) {
          if (eventsBuilder_ == null) {
            ensureEventsIsMutable();
            events_.add(index, builderForValue.build());
            onChanged();
          } else {
            eventsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder addAllEvents(
            java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent> values) {
          if (eventsBuilder_ == null) {
            ensureEventsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, events_);
            onChanged();
          } else {
            eventsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder clearEvents() {
          if (eventsBuilder_ == null) {
            events_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            eventsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public Builder removeEvents(int index) {
          if (eventsBuilder_ == null) {
            ensureEventsIsMutable();
            events_.remove(index);
            onChanged();
          } else {
            eventsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder getEventsBuilder(
            int index) {
          return getEventsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder getEventsOrBuilder(
            int index) {
          if (eventsBuilder_ == null) {
            return events_.get(index);  } else {
            return eventsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder> 
             getEventsOrBuilderList() {
          if (eventsBuilder_ != null) {
            return eventsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(events_);
          }
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder addEventsBuilder() {
          return getEventsFieldBuilder().addBuilder(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.getDefaultInstance());
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder addEventsBuilder(
            int index) {
          return getEventsFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.getDefaultInstance());
        }
        /**
         * <code>repeated .DeepPlayerMatchEvent events = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder> 
             getEventsBuilderList() {
          return getEventsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder> 
            getEventsFieldBuilder() {
          if (eventsBuilder_ == null) {
            eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEvent.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.DeepPlayerMatchEventOrBuilder>(
                    events_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            events_ = null;
          }
          return eventsBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
      }

      static {
        defaultInstance = new DeepStatsMatch(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch)
    }

    private int bitField0_;
    public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 1;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int RANGE_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range_;
    /**
     * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
     */
    public boolean hasRange() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange getRange() {
      return range_;
    }
    /**
     * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder getRangeOrBuilder() {
      return range_;
    }

    public static final int MATCHES_FIELD_NUMBER = 3;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch> matches_;
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch> getMatchesList() {
      return matches_;
    }
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder> 
        getMatchesOrBuilderList() {
      return matches_;
    }
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    public int getMatchesCount() {
      return matches_.size();
    }
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch getMatches(int index) {
      return matches_.get(index);
    }
    /**
     * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder getMatchesOrBuilder(
        int index) {
      return matches_.get(index);
    }

    private void initFields() {
      accountId_ = 0;
      range_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance();
      matches_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, range_);
      }
      for (int i = 0; i < matches_.size(); i++) {
        output.writeMessage(3, matches_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, range_);
      }
      for (int i = 0; i < matches_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, matches_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCCStrike15_ClientDeepStats}
     *
     * <pre>
     * 713
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCCStrike15_ClientDeepStats)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getRangeFieldBuilder();
          getMatchesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rangeBuilder_ == null) {
          range_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance();
        } else {
          rangeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (matchesBuilder_ == null) {
          matches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          matchesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (rangeBuilder_ == null) {
          result.range_ = range_;
        } else {
          result.range_ = rangeBuilder_.build();
        }
        if (matchesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            matches_ = java.util.Collections.unmodifiableList(matches_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.matches_ = matches_;
        } else {
          result.matches_ = matchesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.getDefaultInstance()) return this;
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasRange()) {
          mergeRange(other.getRange());
        }
        if (matchesBuilder_ == null) {
          if (!other.matches_.isEmpty()) {
            if (matches_.isEmpty()) {
              matches_ = other.matches_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMatchesIsMutable();
              matches_.addAll(other.matches_);
            }
            onChanged();
          }
        } else {
          if (!other.matches_.isEmpty()) {
            if (matchesBuilder_.isEmpty()) {
              matchesBuilder_.dispose();
              matchesBuilder_ = null;
              matches_ = other.matches_;
              bitField0_ = (bitField0_ & ~0x00000004);
              matchesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMatchesFieldBuilder() : null;
            } else {
              matchesBuilder_.addAllMessages(other.matches_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000001;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder> rangeBuilder_;
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange getRange() {
        if (rangeBuilder_ == null) {
          return range_;
        } else {
          return rangeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public Builder setRange(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange value) {
        if (rangeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          range_ = value;
          onChanged();
        } else {
          rangeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public Builder setRange(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder builderForValue) {
        if (rangeBuilder_ == null) {
          range_ = builderForValue.build();
          onChanged();
        } else {
          rangeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public Builder mergeRange(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange value) {
        if (rangeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              range_ != skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance()) {
            range_ =
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.newBuilder(range_).mergeFrom(value).buildPartial();
          } else {
            range_ = value;
          }
          onChanged();
        } else {
          rangeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public Builder clearRange() {
        if (rangeBuilder_ == null) {
          range_ = skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.getDefaultInstance();
          onChanged();
        } else {
          rangeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder getRangeBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRangeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder getRangeOrBuilder() {
        if (rangeBuilder_ != null) {
          return rangeBuilder_.getMessageOrBuilder();
        } else {
          return range_;
        }
      }
      /**
       * <code>optional .CMsgGCCStrike15_ClientDeepStats.DeepStatsRange range = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder> 
          getRangeFieldBuilder() {
        if (rangeBuilder_ == null) {
          rangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRange.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsRangeOrBuilder>(
                  getRange(),
                  getParentForChildren(),
                  isClean());
          range_ = null;
        }
        return rangeBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch> matches_ =
        java.util.Collections.emptyList();
      private void ensureMatchesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          matches_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch>(matches_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder> matchesBuilder_;

      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch> getMatchesList() {
        if (matchesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(matches_);
        } else {
          return matchesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public int getMatchesCount() {
        if (matchesBuilder_ == null) {
          return matches_.size();
        } else {
          return matchesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch getMatches(int index) {
        if (matchesBuilder_ == null) {
          return matches_.get(index);
        } else {
          return matchesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder setMatches(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch value) {
        if (matchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchesIsMutable();
          matches_.set(index, value);
          onChanged();
        } else {
          matchesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder setMatches(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder builderForValue) {
        if (matchesBuilder_ == null) {
          ensureMatchesIsMutable();
          matches_.set(index, builderForValue.build());
          onChanged();
        } else {
          matchesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder addMatches(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch value) {
        if (matchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchesIsMutable();
          matches_.add(value);
          onChanged();
        } else {
          matchesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder addMatches(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch value) {
        if (matchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMatchesIsMutable();
          matches_.add(index, value);
          onChanged();
        } else {
          matchesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder addMatches(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder builderForValue) {
        if (matchesBuilder_ == null) {
          ensureMatchesIsMutable();
          matches_.add(builderForValue.build());
          onChanged();
        } else {
          matchesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder addMatches(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder builderForValue) {
        if (matchesBuilder_ == null) {
          ensureMatchesIsMutable();
          matches_.add(index, builderForValue.build());
          onChanged();
        } else {
          matchesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder addAllMatches(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch> values) {
        if (matchesBuilder_ == null) {
          ensureMatchesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, matches_);
          onChanged();
        } else {
          matchesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder clearMatches() {
        if (matchesBuilder_ == null) {
          matches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          matchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public Builder removeMatches(int index) {
        if (matchesBuilder_ == null) {
          ensureMatchesIsMutable();
          matches_.remove(index);
          onChanged();
        } else {
          matchesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder getMatchesBuilder(
          int index) {
        return getMatchesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder getMatchesOrBuilder(
          int index) {
        if (matchesBuilder_ == null) {
          return matches_.get(index);  } else {
          return matchesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder> 
           getMatchesOrBuilderList() {
        if (matchesBuilder_ != null) {
          return matchesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(matches_);
        }
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder addMatchesBuilder() {
        return getMatchesFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder addMatchesBuilder(
          int index) {
        return getMatchesFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch matches = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder> 
           getMatchesBuilderList() {
        return getMatchesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder> 
          getMatchesFieldBuilder() {
        if (matchesBuilder_ == null) {
          matchesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatch.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCStrike15_ClientDeepStats.DeepStatsMatchOrBuilder>(
                  matches_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          matches_ = null;
        }
        return matchesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCCStrike15_ClientDeepStats)
    }

    static {
      defaultInstance = new CMsgGCCStrike15_ClientDeepStats(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCCStrike15_ClientDeepStats)
  }

  public interface CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData> 
        getXpProgressDataList();
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData getXpProgressData(int index);
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    int getXpProgressDataCount();
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder> 
        getXpProgressDataOrBuilderList();
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder getXpProgressDataOrBuilder(
        int index);

    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 current_xp = 3;</code>
     */
    boolean hasCurrentXp();
    /**
     * <code>optional uint32 current_xp = 3;</code>
     */
    int getCurrentXp();

    /**
     * <code>optional uint32 current_level = 4;</code>
     */
    boolean hasCurrentLevel();
    /**
     * <code>optional uint32 current_level = 4;</code>
     */
    int getCurrentLevel();

    /**
     * <code>optional uint32 upgraded_defidx = 5;</code>
     */
    boolean hasUpgradedDefidx();
    /**
     * <code>optional uint32 upgraded_defidx = 5;</code>
     */
    int getUpgradedDefidx();

    /**
     * <code>optional uint32 operation_points_awarded = 6;</code>
     */
    boolean hasOperationPointsAwarded();
    /**
     * <code>optional uint32 operation_points_awarded = 6;</code>
     */
    int getOperationPointsAwarded();
  }
  /**
   * Protobuf type {@code CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded}
   *
   * <pre>
   * 721
   * </pre>
   */
  public static final class CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
      CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedOrBuilder {
    // Use CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.newBuilder() to construct.
    private CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded defaultInstance;
    public static CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                xpProgressData_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData>();
                mutable_bitField0_ |= 0x00000001;
              }
              xpProgressData_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              accountId_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              currentXp_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              currentLevel_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              upgradedDefidx_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              operationPointsAwarded_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          xpProgressData_ = java.util.Collections.unmodifiableList(xpProgressData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded> PARSER =
        new com.google.protobuf.AbstractParser<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded>() {
      public CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int XP_PROGRESS_DATA_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData> xpProgressData_;
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData> getXpProgressDataList() {
      return xpProgressData_;
    }
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder> 
        getXpProgressDataOrBuilderList() {
      return xpProgressData_;
    }
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    public int getXpProgressDataCount() {
      return xpProgressData_.size();
    }
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData getXpProgressData(int index) {
      return xpProgressData_.get(index);
    }
    /**
     * <code>repeated .XpProgressData xp_progress_data = 1;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder getXpProgressDataOrBuilder(
        int index) {
      return xpProgressData_.get(index);
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 2;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 account_id = 2;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int CURRENT_XP_FIELD_NUMBER = 3;
    private int currentXp_;
    /**
     * <code>optional uint32 current_xp = 3;</code>
     */
    public boolean hasCurrentXp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 current_xp = 3;</code>
     */
    public int getCurrentXp() {
      return currentXp_;
    }

    public static final int CURRENT_LEVEL_FIELD_NUMBER = 4;
    private int currentLevel_;
    /**
     * <code>optional uint32 current_level = 4;</code>
     */
    public boolean hasCurrentLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 current_level = 4;</code>
     */
    public int getCurrentLevel() {
      return currentLevel_;
    }

    public static final int UPGRADED_DEFIDX_FIELD_NUMBER = 5;
    private int upgradedDefidx_;
    /**
     * <code>optional uint32 upgraded_defidx = 5;</code>
     */
    public boolean hasUpgradedDefidx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 upgraded_defidx = 5;</code>
     */
    public int getUpgradedDefidx() {
      return upgradedDefidx_;
    }

    public static final int OPERATION_POINTS_AWARDED_FIELD_NUMBER = 6;
    private int operationPointsAwarded_;
    /**
     * <code>optional uint32 operation_points_awarded = 6;</code>
     */
    public boolean hasOperationPointsAwarded() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 operation_points_awarded = 6;</code>
     */
    public int getOperationPointsAwarded() {
      return operationPointsAwarded_;
    }

    private void initFields() {
      xpProgressData_ = java.util.Collections.emptyList();
      accountId_ = 0;
      currentXp_ = 0;
      currentLevel_ = 0;
      upgradedDefidx_ = 0;
      operationPointsAwarded_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < xpProgressData_.size(); i++) {
        output.writeMessage(1, xpProgressData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, currentXp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, currentLevel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, upgradedDefidx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, operationPointsAwarded_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < xpProgressData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, xpProgressData_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, currentXp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, currentLevel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, upgradedDefidx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, operationPointsAwarded_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded}
     *
     * <pre>
     * 721
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewardedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getXpProgressDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (xpProgressDataBuilder_ == null) {
          xpProgressData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          xpProgressDataBuilder_.clear();
        }
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        currentXp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        currentLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        upgradedDefidx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        operationPointsAwarded_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (xpProgressDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            xpProgressData_ = java.util.Collections.unmodifiableList(xpProgressData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.xpProgressData_ = xpProgressData_;
        } else {
          result.xpProgressData_ = xpProgressDataBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentXp_ = currentXp_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.currentLevel_ = currentLevel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.upgradedDefidx_ = upgradedDefidx_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.operationPointsAwarded_ = operationPointsAwarded_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded.getDefaultInstance()) return this;
        if (xpProgressDataBuilder_ == null) {
          if (!other.xpProgressData_.isEmpty()) {
            if (xpProgressData_.isEmpty()) {
              xpProgressData_ = other.xpProgressData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureXpProgressDataIsMutable();
              xpProgressData_.addAll(other.xpProgressData_);
            }
            onChanged();
          }
        } else {
          if (!other.xpProgressData_.isEmpty()) {
            if (xpProgressDataBuilder_.isEmpty()) {
              xpProgressDataBuilder_.dispose();
              xpProgressDataBuilder_ = null;
              xpProgressData_ = other.xpProgressData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              xpProgressDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getXpProgressDataFieldBuilder() : null;
            } else {
              xpProgressDataBuilder_.addAllMessages(other.xpProgressData_);
            }
          }
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasCurrentXp()) {
          setCurrentXp(other.getCurrentXp());
        }
        if (other.hasCurrentLevel()) {
          setCurrentLevel(other.getCurrentLevel());
        }
        if (other.hasUpgradedDefidx()) {
          setUpgradedDefidx(other.getUpgradedDefidx());
        }
        if (other.hasOperationPointsAwarded()) {
          setOperationPointsAwarded(other.getOperationPointsAwarded());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData> xpProgressData_ =
        java.util.Collections.emptyList();
      private void ensureXpProgressDataIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          xpProgressData_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData>(xpProgressData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder> xpProgressDataBuilder_;

      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData> getXpProgressDataList() {
        if (xpProgressDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(xpProgressData_);
        } else {
          return xpProgressDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public int getXpProgressDataCount() {
        if (xpProgressDataBuilder_ == null) {
          return xpProgressData_.size();
        } else {
          return xpProgressDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData getXpProgressData(int index) {
        if (xpProgressDataBuilder_ == null) {
          return xpProgressData_.get(index);
        } else {
          return xpProgressDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder setXpProgressData(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData value) {
        if (xpProgressDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXpProgressDataIsMutable();
          xpProgressData_.set(index, value);
          onChanged();
        } else {
          xpProgressDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder setXpProgressData(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder builderForValue) {
        if (xpProgressDataBuilder_ == null) {
          ensureXpProgressDataIsMutable();
          xpProgressData_.set(index, builderForValue.build());
          onChanged();
        } else {
          xpProgressDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder addXpProgressData(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData value) {
        if (xpProgressDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXpProgressDataIsMutable();
          xpProgressData_.add(value);
          onChanged();
        } else {
          xpProgressDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder addXpProgressData(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData value) {
        if (xpProgressDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureXpProgressDataIsMutable();
          xpProgressData_.add(index, value);
          onChanged();
        } else {
          xpProgressDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder addXpProgressData(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder builderForValue) {
        if (xpProgressDataBuilder_ == null) {
          ensureXpProgressDataIsMutable();
          xpProgressData_.add(builderForValue.build());
          onChanged();
        } else {
          xpProgressDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder addXpProgressData(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder builderForValue) {
        if (xpProgressDataBuilder_ == null) {
          ensureXpProgressDataIsMutable();
          xpProgressData_.add(index, builderForValue.build());
          onChanged();
        } else {
          xpProgressDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder addAllXpProgressData(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData> values) {
        if (xpProgressDataBuilder_ == null) {
          ensureXpProgressDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, xpProgressData_);
          onChanged();
        } else {
          xpProgressDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder clearXpProgressData() {
        if (xpProgressDataBuilder_ == null) {
          xpProgressData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          xpProgressDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public Builder removeXpProgressData(int index) {
        if (xpProgressDataBuilder_ == null) {
          ensureXpProgressDataIsMutable();
          xpProgressData_.remove(index);
          onChanged();
        } else {
          xpProgressDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder getXpProgressDataBuilder(
          int index) {
        return getXpProgressDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder getXpProgressDataOrBuilder(
          int index) {
        if (xpProgressDataBuilder_ == null) {
          return xpProgressData_.get(index);  } else {
          return xpProgressDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder> 
           getXpProgressDataOrBuilderList() {
        if (xpProgressDataBuilder_ != null) {
          return xpProgressDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(xpProgressData_);
        }
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder addXpProgressDataBuilder() {
        return getXpProgressDataFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.getDefaultInstance());
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder addXpProgressDataBuilder(
          int index) {
        return getXpProgressDataFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.getDefaultInstance());
      }
      /**
       * <code>repeated .XpProgressData xp_progress_data = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder> 
           getXpProgressDataBuilderList() {
        return getXpProgressDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder> 
          getXpProgressDataFieldBuilder() {
        if (xpProgressDataBuilder_ == null) {
          xpProgressDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressData.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.XpProgressDataOrBuilder>(
                  xpProgressData_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          xpProgressData_ = null;
        }
        return xpProgressDataBuilder_;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000002;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 2;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int currentXp_ ;
      /**
       * <code>optional uint32 current_xp = 3;</code>
       */
      public boolean hasCurrentXp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 current_xp = 3;</code>
       */
      public int getCurrentXp() {
        return currentXp_;
      }
      /**
       * <code>optional uint32 current_xp = 3;</code>
       */
      public Builder setCurrentXp(int value) {
        bitField0_ |= 0x00000004;
        currentXp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_xp = 3;</code>
       */
      public Builder clearCurrentXp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        currentXp_ = 0;
        onChanged();
        return this;
      }

      private int currentLevel_ ;
      /**
       * <code>optional uint32 current_level = 4;</code>
       */
      public boolean hasCurrentLevel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 current_level = 4;</code>
       */
      public int getCurrentLevel() {
        return currentLevel_;
      }
      /**
       * <code>optional uint32 current_level = 4;</code>
       */
      public Builder setCurrentLevel(int value) {
        bitField0_ |= 0x00000008;
        currentLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_level = 4;</code>
       */
      public Builder clearCurrentLevel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        currentLevel_ = 0;
        onChanged();
        return this;
      }

      private int upgradedDefidx_ ;
      /**
       * <code>optional uint32 upgraded_defidx = 5;</code>
       */
      public boolean hasUpgradedDefidx() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 upgraded_defidx = 5;</code>
       */
      public int getUpgradedDefidx() {
        return upgradedDefidx_;
      }
      /**
       * <code>optional uint32 upgraded_defidx = 5;</code>
       */
      public Builder setUpgradedDefidx(int value) {
        bitField0_ |= 0x00000010;
        upgradedDefidx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 upgraded_defidx = 5;</code>
       */
      public Builder clearUpgradedDefidx() {
        bitField0_ = (bitField0_ & ~0x00000010);
        upgradedDefidx_ = 0;
        onChanged();
        return this;
      }

      private int operationPointsAwarded_ ;
      /**
       * <code>optional uint32 operation_points_awarded = 6;</code>
       */
      public boolean hasOperationPointsAwarded() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 operation_points_awarded = 6;</code>
       */
      public int getOperationPointsAwarded() {
        return operationPointsAwarded_;
      }
      /**
       * <code>optional uint32 operation_points_awarded = 6;</code>
       */
      public Builder setOperationPointsAwarded(int value) {
        bitField0_ |= 0x00000020;
        operationPointsAwarded_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 operation_points_awarded = 6;</code>
       */
      public Builder clearOperationPointsAwarded() {
        bitField0_ = (bitField0_ & ~0x00000020);
        operationPointsAwarded_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
    }

    static {
      defaultInstance = new CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded)
  }

  public interface CEconItemPreviewDataBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CEconItemPreviewDataBlock)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    int getAccountid();

    /**
     * <code>optional uint64 itemid = 2;</code>
     */
    boolean hasItemid();
    /**
     * <code>optional uint64 itemid = 2;</code>
     */
    long getItemid();

    /**
     * <code>optional uint32 defindex = 3;</code>
     */
    boolean hasDefindex();
    /**
     * <code>optional uint32 defindex = 3;</code>
     */
    int getDefindex();

    /**
     * <code>optional uint32 paintindex = 4;</code>
     */
    boolean hasPaintindex();
    /**
     * <code>optional uint32 paintindex = 4;</code>
     */
    int getPaintindex();

    /**
     * <code>optional uint32 rarity = 5;</code>
     */
    boolean hasRarity();
    /**
     * <code>optional uint32 rarity = 5;</code>
     */
    int getRarity();

    /**
     * <code>optional uint32 quality = 6;</code>
     */
    boolean hasQuality();
    /**
     * <code>optional uint32 quality = 6;</code>
     */
    int getQuality();

    /**
     * <code>optional uint32 paintwear = 7;</code>
     */
    boolean hasPaintwear();
    /**
     * <code>optional uint32 paintwear = 7;</code>
     */
    int getPaintwear();

    /**
     * <code>optional uint32 paintseed = 8;</code>
     */
    boolean hasPaintseed();
    /**
     * <code>optional uint32 paintseed = 8;</code>
     */
    int getPaintseed();

    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     */
    boolean hasKilleaterscoretype();
    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     */
    int getKilleaterscoretype();

    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     */
    boolean hasKilleatervalue();
    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     */
    int getKilleatervalue();

    /**
     * <code>optional string customname = 11;</code>
     */
    boolean hasCustomname();
    /**
     * <code>optional string customname = 11;</code>
     */
    java.lang.String getCustomname();
    /**
     * <code>optional string customname = 11;</code>
     */
    com.google.protobuf.ByteString
        getCustomnameBytes();

    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker> 
        getStickersList();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker getStickers(int index);
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    int getStickersCount();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder> 
        getStickersOrBuilderList();
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder getStickersOrBuilder(
        int index);

    /**
     * <code>optional uint32 inventory = 13;</code>
     */
    boolean hasInventory();
    /**
     * <code>optional uint32 inventory = 13;</code>
     */
    int getInventory();

    /**
     * <code>optional uint32 origin = 14;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 origin = 14;</code>
     */
    int getOrigin();

    /**
     * <code>optional uint32 questid = 15;</code>
     */
    boolean hasQuestid();
    /**
     * <code>optional uint32 questid = 15;</code>
     */
    int getQuestid();

    /**
     * <code>optional uint32 dropreason = 16;</code>
     */
    boolean hasDropreason();
    /**
     * <code>optional uint32 dropreason = 16;</code>
     */
    int getDropreason();

    /**
     * <code>optional uint32 musicindex = 17;</code>
     */
    boolean hasMusicindex();
    /**
     * <code>optional uint32 musicindex = 17;</code>
     */
    int getMusicindex();

    /**
     * <code>optional int32 entindex = 18;</code>
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 18;</code>
     */
    int getEntindex();
  }
  /**
   * Protobuf type {@code CEconItemPreviewDataBlock}
   *
   * <pre>
   * 817
   * </pre>
   */
  public static final class CEconItemPreviewDataBlock extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CEconItemPreviewDataBlock)
      CEconItemPreviewDataBlockOrBuilder {
    // Use CEconItemPreviewDataBlock.newBuilder() to construct.
    private CEconItemPreviewDataBlock(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CEconItemPreviewDataBlock(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CEconItemPreviewDataBlock defaultInstance;
    public static CEconItemPreviewDataBlock getDefaultInstance() {
      return defaultInstance;
    }

    public CEconItemPreviewDataBlock getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CEconItemPreviewDataBlock(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              accountid_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              itemid_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              defindex_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              paintindex_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              rarity_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              quality_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              paintwear_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              paintseed_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              killeaterscoretype_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              killeatervalue_ = input.readUInt32();
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              customname_ = bs;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                stickers_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker>();
                mutable_bitField0_ |= 0x00000800;
              }
              stickers_.add(input.readMessage(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.PARSER, extensionRegistry));
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              inventory_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              origin_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              questid_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              dropreason_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              musicindex_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              entindex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          stickers_ = java.util.Collections.unmodifiableList(stickers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Builder.class);
    }

    public static com.google.protobuf.Parser<CEconItemPreviewDataBlock> PARSER =
        new com.google.protobuf.AbstractParser<CEconItemPreviewDataBlock>() {
      public CEconItemPreviewDataBlock parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CEconItemPreviewDataBlock(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CEconItemPreviewDataBlock> getParserForType() {
      return PARSER;
    }

    public interface StickerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CEconItemPreviewDataBlock.Sticker)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 slot = 1;</code>
       */
      boolean hasSlot();
      /**
       * <code>optional uint32 slot = 1;</code>
       */
      int getSlot();

      /**
       * <code>optional uint32 sticker_id = 2;</code>
       */
      boolean hasStickerId();
      /**
       * <code>optional uint32 sticker_id = 2;</code>
       */
      int getStickerId();

      /**
       * <code>optional float wear = 3;</code>
       */
      boolean hasWear();
      /**
       * <code>optional float wear = 3;</code>
       */
      float getWear();

      /**
       * <code>optional float scale = 4;</code>
       */
      boolean hasScale();
      /**
       * <code>optional float scale = 4;</code>
       */
      float getScale();

      /**
       * <code>optional float rotation = 5;</code>
       */
      boolean hasRotation();
      /**
       * <code>optional float rotation = 5;</code>
       */
      float getRotation();

      /**
       * <code>optional uint32 tint_id = 6;</code>
       */
      boolean hasTintId();
      /**
       * <code>optional uint32 tint_id = 6;</code>
       */
      int getTintId();
    }
    /**
     * Protobuf type {@code CEconItemPreviewDataBlock.Sticker}
     */
    public static final class Sticker extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CEconItemPreviewDataBlock.Sticker)
        StickerOrBuilder {
      // Use Sticker.newBuilder() to construct.
      private Sticker(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Sticker(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Sticker defaultInstance;
      public static Sticker getDefaultInstance() {
        return defaultInstance;
      }

      public Sticker getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Sticker(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                slot_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                stickerId_ = input.readUInt32();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                wear_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                scale_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                rotation_ = input.readFloat();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                tintId_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder.class);
      }

      public static com.google.protobuf.Parser<Sticker> PARSER =
          new com.google.protobuf.AbstractParser<Sticker>() {
        public Sticker parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Sticker(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Sticker> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SLOT_FIELD_NUMBER = 1;
      private int slot_;
      /**
       * <code>optional uint32 slot = 1;</code>
       */
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 slot = 1;</code>
       */
      public int getSlot() {
        return slot_;
      }

      public static final int STICKER_ID_FIELD_NUMBER = 2;
      private int stickerId_;
      /**
       * <code>optional uint32 sticker_id = 2;</code>
       */
      public boolean hasStickerId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 sticker_id = 2;</code>
       */
      public int getStickerId() {
        return stickerId_;
      }

      public static final int WEAR_FIELD_NUMBER = 3;
      private float wear_;
      /**
       * <code>optional float wear = 3;</code>
       */
      public boolean hasWear() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float wear = 3;</code>
       */
      public float getWear() {
        return wear_;
      }

      public static final int SCALE_FIELD_NUMBER = 4;
      private float scale_;
      /**
       * <code>optional float scale = 4;</code>
       */
      public boolean hasScale() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float scale = 4;</code>
       */
      public float getScale() {
        return scale_;
      }

      public static final int ROTATION_FIELD_NUMBER = 5;
      private float rotation_;
      /**
       * <code>optional float rotation = 5;</code>
       */
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float rotation = 5;</code>
       */
      public float getRotation() {
        return rotation_;
      }

      public static final int TINT_ID_FIELD_NUMBER = 6;
      private int tintId_;
      /**
       * <code>optional uint32 tint_id = 6;</code>
       */
      public boolean hasTintId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 tint_id = 6;</code>
       */
      public int getTintId() {
        return tintId_;
      }

      private void initFields() {
        slot_ = 0;
        stickerId_ = 0;
        wear_ = 0F;
        scale_ = 0F;
        rotation_ = 0F;
        tintId_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, slot_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, stickerId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, wear_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, scale_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, rotation_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, tintId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, slot_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, stickerId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, wear_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, scale_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, rotation_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, tintId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CEconItemPreviewDataBlock.Sticker}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CEconItemPreviewDataBlock.Sticker)
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder.class);
        }

        // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          slot_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          stickerId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          wear_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          scale_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          rotation_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          tintId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker getDefaultInstanceForType() {
          return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.getDefaultInstance();
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker build() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker buildPartial() {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.slot_ = slot_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.stickerId_ = stickerId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.wear_ = wear_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.scale_ = scale_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.rotation_ = rotation_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.tintId_ = tintId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker) {
            return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker other) {
          if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.getDefaultInstance()) return this;
          if (other.hasSlot()) {
            setSlot(other.getSlot());
          }
          if (other.hasStickerId()) {
            setStickerId(other.getStickerId());
          }
          if (other.hasWear()) {
            setWear(other.getWear());
          }
          if (other.hasScale()) {
            setScale(other.getScale());
          }
          if (other.hasRotation()) {
            setRotation(other.getRotation());
          }
          if (other.hasTintId()) {
            setTintId(other.getTintId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int slot_ ;
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public boolean hasSlot() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public int getSlot() {
          return slot_;
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public Builder setSlot(int value) {
          bitField0_ |= 0x00000001;
          slot_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public Builder clearSlot() {
          bitField0_ = (bitField0_ & ~0x00000001);
          slot_ = 0;
          onChanged();
          return this;
        }

        private int stickerId_ ;
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         */
        public boolean hasStickerId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         */
        public int getStickerId() {
          return stickerId_;
        }
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         */
        public Builder setStickerId(int value) {
          bitField0_ |= 0x00000002;
          stickerId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 sticker_id = 2;</code>
         */
        public Builder clearStickerId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          stickerId_ = 0;
          onChanged();
          return this;
        }

        private float wear_ ;
        /**
         * <code>optional float wear = 3;</code>
         */
        public boolean hasWear() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float wear = 3;</code>
         */
        public float getWear() {
          return wear_;
        }
        /**
         * <code>optional float wear = 3;</code>
         */
        public Builder setWear(float value) {
          bitField0_ |= 0x00000004;
          wear_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float wear = 3;</code>
         */
        public Builder clearWear() {
          bitField0_ = (bitField0_ & ~0x00000004);
          wear_ = 0F;
          onChanged();
          return this;
        }

        private float scale_ ;
        /**
         * <code>optional float scale = 4;</code>
         */
        public boolean hasScale() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float scale = 4;</code>
         */
        public float getScale() {
          return scale_;
        }
        /**
         * <code>optional float scale = 4;</code>
         */
        public Builder setScale(float value) {
          bitField0_ |= 0x00000008;
          scale_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float scale = 4;</code>
         */
        public Builder clearScale() {
          bitField0_ = (bitField0_ & ~0x00000008);
          scale_ = 0F;
          onChanged();
          return this;
        }

        private float rotation_ ;
        /**
         * <code>optional float rotation = 5;</code>
         */
        public boolean hasRotation() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float rotation = 5;</code>
         */
        public float getRotation() {
          return rotation_;
        }
        /**
         * <code>optional float rotation = 5;</code>
         */
        public Builder setRotation(float value) {
          bitField0_ |= 0x00000010;
          rotation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float rotation = 5;</code>
         */
        public Builder clearRotation() {
          bitField0_ = (bitField0_ & ~0x00000010);
          rotation_ = 0F;
          onChanged();
          return this;
        }

        private int tintId_ ;
        /**
         * <code>optional uint32 tint_id = 6;</code>
         */
        public boolean hasTintId() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 tint_id = 6;</code>
         */
        public int getTintId() {
          return tintId_;
        }
        /**
         * <code>optional uint32 tint_id = 6;</code>
         */
        public Builder setTintId(int value) {
          bitField0_ |= 0x00000020;
          tintId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tint_id = 6;</code>
         */
        public Builder clearTintId() {
          bitField0_ = (bitField0_ & ~0x00000020);
          tintId_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CEconItemPreviewDataBlock.Sticker)
      }

      static {
        defaultInstance = new Sticker(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock.Sticker)
    }

    private int bitField0_;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 accountid = 1;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int ITEMID_FIELD_NUMBER = 2;
    private long itemid_;
    /**
     * <code>optional uint64 itemid = 2;</code>
     */
    public boolean hasItemid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 itemid = 2;</code>
     */
    public long getItemid() {
      return itemid_;
    }

    public static final int DEFINDEX_FIELD_NUMBER = 3;
    private int defindex_;
    /**
     * <code>optional uint32 defindex = 3;</code>
     */
    public boolean hasDefindex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 defindex = 3;</code>
     */
    public int getDefindex() {
      return defindex_;
    }

    public static final int PAINTINDEX_FIELD_NUMBER = 4;
    private int paintindex_;
    /**
     * <code>optional uint32 paintindex = 4;</code>
     */
    public boolean hasPaintindex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 paintindex = 4;</code>
     */
    public int getPaintindex() {
      return paintindex_;
    }

    public static final int RARITY_FIELD_NUMBER = 5;
    private int rarity_;
    /**
     * <code>optional uint32 rarity = 5;</code>
     */
    public boolean hasRarity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 rarity = 5;</code>
     */
    public int getRarity() {
      return rarity_;
    }

    public static final int QUALITY_FIELD_NUMBER = 6;
    private int quality_;
    /**
     * <code>optional uint32 quality = 6;</code>
     */
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 quality = 6;</code>
     */
    public int getQuality() {
      return quality_;
    }

    public static final int PAINTWEAR_FIELD_NUMBER = 7;
    private int paintwear_;
    /**
     * <code>optional uint32 paintwear = 7;</code>
     */
    public boolean hasPaintwear() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 paintwear = 7;</code>
     */
    public int getPaintwear() {
      return paintwear_;
    }

    public static final int PAINTSEED_FIELD_NUMBER = 8;
    private int paintseed_;
    /**
     * <code>optional uint32 paintseed = 8;</code>
     */
    public boolean hasPaintseed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 paintseed = 8;</code>
     */
    public int getPaintseed() {
      return paintseed_;
    }

    public static final int KILLEATERSCORETYPE_FIELD_NUMBER = 9;
    private int killeaterscoretype_;
    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     */
    public boolean hasKilleaterscoretype() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 killeaterscoretype = 9;</code>
     */
    public int getKilleaterscoretype() {
      return killeaterscoretype_;
    }

    public static final int KILLEATERVALUE_FIELD_NUMBER = 10;
    private int killeatervalue_;
    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     */
    public boolean hasKilleatervalue() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 killeatervalue = 10;</code>
     */
    public int getKilleatervalue() {
      return killeatervalue_;
    }

    public static final int CUSTOMNAME_FIELD_NUMBER = 11;
    private java.lang.Object customname_;
    /**
     * <code>optional string customname = 11;</code>
     */
    public boolean hasCustomname() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string customname = 11;</code>
     */
    public java.lang.String getCustomname() {
      java.lang.Object ref = customname_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          customname_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string customname = 11;</code>
     */
    public com.google.protobuf.ByteString
        getCustomnameBytes() {
      java.lang.Object ref = customname_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        customname_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STICKERS_FIELD_NUMBER = 12;
    private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker> stickers_;
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker> getStickersList() {
      return stickers_;
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder> 
        getStickersOrBuilderList() {
      return stickers_;
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    public int getStickersCount() {
      return stickers_.size();
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker getStickers(int index) {
      return stickers_.get(index);
    }
    /**
     * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
     */
    public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder getStickersOrBuilder(
        int index) {
      return stickers_.get(index);
    }

    public static final int INVENTORY_FIELD_NUMBER = 13;
    private int inventory_;
    /**
     * <code>optional uint32 inventory = 13;</code>
     */
    public boolean hasInventory() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 inventory = 13;</code>
     */
    public int getInventory() {
      return inventory_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 14;
    private int origin_;
    /**
     * <code>optional uint32 origin = 14;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 origin = 14;</code>
     */
    public int getOrigin() {
      return origin_;
    }

    public static final int QUESTID_FIELD_NUMBER = 15;
    private int questid_;
    /**
     * <code>optional uint32 questid = 15;</code>
     */
    public boolean hasQuestid() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 questid = 15;</code>
     */
    public int getQuestid() {
      return questid_;
    }

    public static final int DROPREASON_FIELD_NUMBER = 16;
    private int dropreason_;
    /**
     * <code>optional uint32 dropreason = 16;</code>
     */
    public boolean hasDropreason() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 dropreason = 16;</code>
     */
    public int getDropreason() {
      return dropreason_;
    }

    public static final int MUSICINDEX_FIELD_NUMBER = 17;
    private int musicindex_;
    /**
     * <code>optional uint32 musicindex = 17;</code>
     */
    public boolean hasMusicindex() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 musicindex = 17;</code>
     */
    public int getMusicindex() {
      return musicindex_;
    }

    public static final int ENTINDEX_FIELD_NUMBER = 18;
    private int entindex_;
    /**
     * <code>optional int32 entindex = 18;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 entindex = 18;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    private void initFields() {
      accountid_ = 0;
      itemid_ = 0L;
      defindex_ = 0;
      paintindex_ = 0;
      rarity_ = 0;
      quality_ = 0;
      paintwear_ = 0;
      paintseed_ = 0;
      killeaterscoretype_ = 0;
      killeatervalue_ = 0;
      customname_ = "";
      stickers_ = java.util.Collections.emptyList();
      inventory_ = 0;
      origin_ = 0;
      questid_ = 0;
      dropreason_ = 0;
      musicindex_ = 0;
      entindex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, defindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, paintindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, rarity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, quality_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, paintwear_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(8, paintseed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, killeaterscoretype_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, killeatervalue_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCustomnameBytes());
      }
      for (int i = 0; i < stickers_.size(); i++) {
        output.writeMessage(12, stickers_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(13, inventory_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(14, origin_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(15, questid_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(16, dropreason_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(17, musicindex_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(18, entindex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, accountid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, itemid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, defindex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, paintindex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, rarity_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, quality_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, paintwear_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, paintseed_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, killeaterscoretype_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, killeatervalue_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCustomnameBytes());
      }
      for (int i = 0; i < stickers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, stickers_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, inventory_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, origin_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, questid_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, dropreason_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, musicindex_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, entindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CEconItemPreviewDataBlock}
     *
     * <pre>
     * 817
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CEconItemPreviewDataBlock)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlockOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStickersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        itemid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        defindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        paintindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        rarity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        paintwear_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        paintseed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        killeaterscoretype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        killeatervalue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        customname_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        if (stickersBuilder_ == null) {
          stickers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          stickersBuilder_.clear();
        }
        inventory_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        origin_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        questid_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        dropreason_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        musicindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_CEconItemPreviewDataBlock_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.itemid_ = itemid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.defindex_ = defindex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.paintindex_ = paintindex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rarity_ = rarity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.paintwear_ = paintwear_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.paintseed_ = paintseed_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.killeaterscoretype_ = killeaterscoretype_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.killeatervalue_ = killeatervalue_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.customname_ = customname_;
        if (stickersBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            stickers_ = java.util.Collections.unmodifiableList(stickers_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.stickers_ = stickers_;
        } else {
          result.stickers_ = stickersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.inventory_ = inventory_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.origin_ = origin_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.questid_ = questid_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.dropreason_ = dropreason_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.musicindex_ = musicindex_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.entindex_ = entindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.getDefaultInstance()) return this;
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasItemid()) {
          setItemid(other.getItemid());
        }
        if (other.hasDefindex()) {
          setDefindex(other.getDefindex());
        }
        if (other.hasPaintindex()) {
          setPaintindex(other.getPaintindex());
        }
        if (other.hasRarity()) {
          setRarity(other.getRarity());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasPaintwear()) {
          setPaintwear(other.getPaintwear());
        }
        if (other.hasPaintseed()) {
          setPaintseed(other.getPaintseed());
        }
        if (other.hasKilleaterscoretype()) {
          setKilleaterscoretype(other.getKilleaterscoretype());
        }
        if (other.hasKilleatervalue()) {
          setKilleatervalue(other.getKilleatervalue());
        }
        if (other.hasCustomname()) {
          bitField0_ |= 0x00000400;
          customname_ = other.customname_;
          onChanged();
        }
        if (stickersBuilder_ == null) {
          if (!other.stickers_.isEmpty()) {
            if (stickers_.isEmpty()) {
              stickers_ = other.stickers_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureStickersIsMutable();
              stickers_.addAll(other.stickers_);
            }
            onChanged();
          }
        } else {
          if (!other.stickers_.isEmpty()) {
            if (stickersBuilder_.isEmpty()) {
              stickersBuilder_.dispose();
              stickersBuilder_ = null;
              stickers_ = other.stickers_;
              bitField0_ = (bitField0_ & ~0x00000800);
              stickersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getStickersFieldBuilder() : null;
            } else {
              stickersBuilder_.addAllMessages(other.stickers_);
            }
          }
        }
        if (other.hasInventory()) {
          setInventory(other.getInventory());
        }
        if (other.hasOrigin()) {
          setOrigin(other.getOrigin());
        }
        if (other.hasQuestid()) {
          setQuestid(other.getQuestid());
        }
        if (other.hasDropreason()) {
          setDropreason(other.getDropreason());
        }
        if (other.hasMusicindex()) {
          setMusicindex(other.getMusicindex());
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000001;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 1;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private long itemid_ ;
      /**
       * <code>optional uint64 itemid = 2;</code>
       */
      public boolean hasItemid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 itemid = 2;</code>
       */
      public long getItemid() {
        return itemid_;
      }
      /**
       * <code>optional uint64 itemid = 2;</code>
       */
      public Builder setItemid(long value) {
        bitField0_ |= 0x00000002;
        itemid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 itemid = 2;</code>
       */
      public Builder clearItemid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        itemid_ = 0L;
        onChanged();
        return this;
      }

      private int defindex_ ;
      /**
       * <code>optional uint32 defindex = 3;</code>
       */
      public boolean hasDefindex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 defindex = 3;</code>
       */
      public int getDefindex() {
        return defindex_;
      }
      /**
       * <code>optional uint32 defindex = 3;</code>
       */
      public Builder setDefindex(int value) {
        bitField0_ |= 0x00000004;
        defindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 defindex = 3;</code>
       */
      public Builder clearDefindex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defindex_ = 0;
        onChanged();
        return this;
      }

      private int paintindex_ ;
      /**
       * <code>optional uint32 paintindex = 4;</code>
       */
      public boolean hasPaintindex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 paintindex = 4;</code>
       */
      public int getPaintindex() {
        return paintindex_;
      }
      /**
       * <code>optional uint32 paintindex = 4;</code>
       */
      public Builder setPaintindex(int value) {
        bitField0_ |= 0x00000008;
        paintindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paintindex = 4;</code>
       */
      public Builder clearPaintindex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        paintindex_ = 0;
        onChanged();
        return this;
      }

      private int rarity_ ;
      /**
       * <code>optional uint32 rarity = 5;</code>
       */
      public boolean hasRarity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 rarity = 5;</code>
       */
      public int getRarity() {
        return rarity_;
      }
      /**
       * <code>optional uint32 rarity = 5;</code>
       */
      public Builder setRarity(int value) {
        bitField0_ |= 0x00000010;
        rarity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rarity = 5;</code>
       */
      public Builder clearRarity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        rarity_ = 0;
        onChanged();
        return this;
      }

      private int quality_ ;
      /**
       * <code>optional uint32 quality = 6;</code>
       */
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 quality = 6;</code>
       */
      public int getQuality() {
        return quality_;
      }
      /**
       * <code>optional uint32 quality = 6;</code>
       */
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000020;
        quality_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 quality = 6;</code>
       */
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000020);
        quality_ = 0;
        onChanged();
        return this;
      }

      private int paintwear_ ;
      /**
       * <code>optional uint32 paintwear = 7;</code>
       */
      public boolean hasPaintwear() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 paintwear = 7;</code>
       */
      public int getPaintwear() {
        return paintwear_;
      }
      /**
       * <code>optional uint32 paintwear = 7;</code>
       */
      public Builder setPaintwear(int value) {
        bitField0_ |= 0x00000040;
        paintwear_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paintwear = 7;</code>
       */
      public Builder clearPaintwear() {
        bitField0_ = (bitField0_ & ~0x00000040);
        paintwear_ = 0;
        onChanged();
        return this;
      }

      private int paintseed_ ;
      /**
       * <code>optional uint32 paintseed = 8;</code>
       */
      public boolean hasPaintseed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 paintseed = 8;</code>
       */
      public int getPaintseed() {
        return paintseed_;
      }
      /**
       * <code>optional uint32 paintseed = 8;</code>
       */
      public Builder setPaintseed(int value) {
        bitField0_ |= 0x00000080;
        paintseed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paintseed = 8;</code>
       */
      public Builder clearPaintseed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        paintseed_ = 0;
        onChanged();
        return this;
      }

      private int killeaterscoretype_ ;
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       */
      public boolean hasKilleaterscoretype() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       */
      public int getKilleaterscoretype() {
        return killeaterscoretype_;
      }
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       */
      public Builder setKilleaterscoretype(int value) {
        bitField0_ |= 0x00000100;
        killeaterscoretype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 killeaterscoretype = 9;</code>
       */
      public Builder clearKilleaterscoretype() {
        bitField0_ = (bitField0_ & ~0x00000100);
        killeaterscoretype_ = 0;
        onChanged();
        return this;
      }

      private int killeatervalue_ ;
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       */
      public boolean hasKilleatervalue() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       */
      public int getKilleatervalue() {
        return killeatervalue_;
      }
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       */
      public Builder setKilleatervalue(int value) {
        bitField0_ |= 0x00000200;
        killeatervalue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 killeatervalue = 10;</code>
       */
      public Builder clearKilleatervalue() {
        bitField0_ = (bitField0_ & ~0x00000200);
        killeatervalue_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object customname_ = "";
      /**
       * <code>optional string customname = 11;</code>
       */
      public boolean hasCustomname() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string customname = 11;</code>
       */
      public java.lang.String getCustomname() {
        java.lang.Object ref = customname_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            customname_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string customname = 11;</code>
       */
      public com.google.protobuf.ByteString
          getCustomnameBytes() {
        java.lang.Object ref = customname_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          customname_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string customname = 11;</code>
       */
      public Builder setCustomname(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        customname_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string customname = 11;</code>
       */
      public Builder clearCustomname() {
        bitField0_ = (bitField0_ & ~0x00000400);
        customname_ = getDefaultInstance().getCustomname();
        onChanged();
        return this;
      }
      /**
       * <code>optional string customname = 11;</code>
       */
      public Builder setCustomnameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        customname_ = value;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker> stickers_ =
        java.util.Collections.emptyList();
      private void ensureStickersIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          stickers_ = new java.util.ArrayList<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker>(stickers_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder> stickersBuilder_;

      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker> getStickersList() {
        if (stickersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stickers_);
        } else {
          return stickersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public int getStickersCount() {
        if (stickersBuilder_ == null) {
          return stickers_.size();
        } else {
          return stickersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker getStickers(int index) {
        if (stickersBuilder_ == null) {
          return stickers_.get(index);
        } else {
          return stickersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder setStickers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.set(index, value);
          onChanged();
        } else {
          stickersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder setStickers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.set(index, builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.add(value);
          onChanged();
        } else {
          stickersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker value) {
        if (stickersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStickersIsMutable();
          stickers_.add(index, value);
          onChanged();
        } else {
          stickersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.add(builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addStickers(
          int index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder builderForValue) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.add(index, builderForValue.build());
          onChanged();
        } else {
          stickersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder addAllStickers(
          java.lang.Iterable<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker> values) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stickers_);
          onChanged();
        } else {
          stickersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder clearStickers() {
        if (stickersBuilder_ == null) {
          stickers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          stickersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public Builder removeStickers(int index) {
        if (stickersBuilder_ == null) {
          ensureStickersIsMutable();
          stickers_.remove(index);
          onChanged();
        } else {
          stickersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder getStickersBuilder(
          int index) {
        return getStickersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder getStickersOrBuilder(
          int index) {
        if (stickersBuilder_ == null) {
          return stickers_.get(index);  } else {
          return stickersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder> 
           getStickersOrBuilderList() {
        if (stickersBuilder_ != null) {
          return stickersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stickers_);
        }
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder addStickersBuilder() {
        return getStickersFieldBuilder().addBuilder(
            skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder addStickersBuilder(
          int index) {
        return getStickersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.getDefaultInstance());
      }
      /**
       * <code>repeated .CEconItemPreviewDataBlock.Sticker stickers = 12;</code>
       */
      public java.util.List<skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder> 
           getStickersBuilderList() {
        return getStickersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder> 
          getStickersFieldBuilder() {
        if (stickersBuilder_ == null) {
          stickersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.Sticker.Builder, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.CEconItemPreviewDataBlock.StickerOrBuilder>(
                  stickers_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          stickers_ = null;
        }
        return stickersBuilder_;
      }

      private int inventory_ ;
      /**
       * <code>optional uint32 inventory = 13;</code>
       */
      public boolean hasInventory() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 inventory = 13;</code>
       */
      public int getInventory() {
        return inventory_;
      }
      /**
       * <code>optional uint32 inventory = 13;</code>
       */
      public Builder setInventory(int value) {
        bitField0_ |= 0x00001000;
        inventory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inventory = 13;</code>
       */
      public Builder clearInventory() {
        bitField0_ = (bitField0_ & ~0x00001000);
        inventory_ = 0;
        onChanged();
        return this;
      }

      private int origin_ ;
      /**
       * <code>optional uint32 origin = 14;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 origin = 14;</code>
       */
      public int getOrigin() {
        return origin_;
      }
      /**
       * <code>optional uint32 origin = 14;</code>
       */
      public Builder setOrigin(int value) {
        bitField0_ |= 0x00002000;
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 origin = 14;</code>
       */
      public Builder clearOrigin() {
        bitField0_ = (bitField0_ & ~0x00002000);
        origin_ = 0;
        onChanged();
        return this;
      }

      private int questid_ ;
      /**
       * <code>optional uint32 questid = 15;</code>
       */
      public boolean hasQuestid() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 questid = 15;</code>
       */
      public int getQuestid() {
        return questid_;
      }
      /**
       * <code>optional uint32 questid = 15;</code>
       */
      public Builder setQuestid(int value) {
        bitField0_ |= 0x00004000;
        questid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 questid = 15;</code>
       */
      public Builder clearQuestid() {
        bitField0_ = (bitField0_ & ~0x00004000);
        questid_ = 0;
        onChanged();
        return this;
      }

      private int dropreason_ ;
      /**
       * <code>optional uint32 dropreason = 16;</code>
       */
      public boolean hasDropreason() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 dropreason = 16;</code>
       */
      public int getDropreason() {
        return dropreason_;
      }
      /**
       * <code>optional uint32 dropreason = 16;</code>
       */
      public Builder setDropreason(int value) {
        bitField0_ |= 0x00008000;
        dropreason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dropreason = 16;</code>
       */
      public Builder clearDropreason() {
        bitField0_ = (bitField0_ & ~0x00008000);
        dropreason_ = 0;
        onChanged();
        return this;
      }

      private int musicindex_ ;
      /**
       * <code>optional uint32 musicindex = 17;</code>
       */
      public boolean hasMusicindex() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 musicindex = 17;</code>
       */
      public int getMusicindex() {
        return musicindex_;
      }
      /**
       * <code>optional uint32 musicindex = 17;</code>
       */
      public Builder setMusicindex(int value) {
        bitField0_ |= 0x00010000;
        musicindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 musicindex = 17;</code>
       */
      public Builder clearMusicindex() {
        bitField0_ = (bitField0_ & ~0x00010000);
        musicindex_ = 0;
        onChanged();
        return this;
      }

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 18;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 entindex = 18;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 18;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00020000;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 18;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00020000);
        entindex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CEconItemPreviewDataBlock)
    }

    static {
      defaultInstance = new CEconItemPreviewDataBlock(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CEconItemPreviewDataBlock)
  }

  public interface PlayerDecalDigitalSignatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PlayerDecalDigitalSignature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bytes signature = 1;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional bytes signature = 1;</code>
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    boolean hasAccountid();
    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    int getAccountid();

    /**
     * <code>optional uint32 rtime = 3;</code>
     */
    boolean hasRtime();
    /**
     * <code>optional uint32 rtime = 3;</code>
     */
    int getRtime();

    /**
     * <code>repeated float endpos = 4;</code>
     */
    java.util.List<java.lang.Float> getEndposList();
    /**
     * <code>repeated float endpos = 4;</code>
     */
    int getEndposCount();
    /**
     * <code>repeated float endpos = 4;</code>
     */
    float getEndpos(int index);

    /**
     * <code>repeated float startpos = 5;</code>
     */
    java.util.List<java.lang.Float> getStartposList();
    /**
     * <code>repeated float startpos = 5;</code>
     */
    int getStartposCount();
    /**
     * <code>repeated float startpos = 5;</code>
     */
    float getStartpos(int index);

    /**
     * <code>repeated float left = 6;</code>
     */
    java.util.List<java.lang.Float> getLeftList();
    /**
     * <code>repeated float left = 6;</code>
     */
    int getLeftCount();
    /**
     * <code>repeated float left = 6;</code>
     */
    float getLeft(int index);

    /**
     * <code>optional uint32 tx_defidx = 7;</code>
     */
    boolean hasTxDefidx();
    /**
     * <code>optional uint32 tx_defidx = 7;</code>
     */
    int getTxDefidx();

    /**
     * <code>optional int32 entindex = 8;</code>
     */
    boolean hasEntindex();
    /**
     * <code>optional int32 entindex = 8;</code>
     */
    int getEntindex();

    /**
     * <code>optional uint32 hitbox = 9;</code>
     */
    boolean hasHitbox();
    /**
     * <code>optional uint32 hitbox = 9;</code>
     */
    int getHitbox();

    /**
     * <code>optional float creationtime = 10;</code>
     */
    boolean hasCreationtime();
    /**
     * <code>optional float creationtime = 10;</code>
     */
    float getCreationtime();

    /**
     * <code>optional uint32 equipslot = 11;</code>
     */
    boolean hasEquipslot();
    /**
     * <code>optional uint32 equipslot = 11;</code>
     */
    int getEquipslot();

    /**
     * <code>optional uint32 trace_id = 12;</code>
     */
    boolean hasTraceId();
    /**
     * <code>optional uint32 trace_id = 12;</code>
     */
    int getTraceId();

    /**
     * <code>repeated float normal = 13;</code>
     */
    java.util.List<java.lang.Float> getNormalList();
    /**
     * <code>repeated float normal = 13;</code>
     */
    int getNormalCount();
    /**
     * <code>repeated float normal = 13;</code>
     */
    float getNormal(int index);

    /**
     * <code>optional uint32 tint_id = 14;</code>
     */
    boolean hasTintId();
    /**
     * <code>optional uint32 tint_id = 14;</code>
     */
    int getTintId();
  }
  /**
   * Protobuf type {@code PlayerDecalDigitalSignature}
   *
   * <pre>
   * 1133
   * </pre>
   */
  public static final class PlayerDecalDigitalSignature extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PlayerDecalDigitalSignature)
      PlayerDecalDigitalSignatureOrBuilder {
    // Use PlayerDecalDigitalSignature.newBuilder() to construct.
    private PlayerDecalDigitalSignature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerDecalDigitalSignature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerDecalDigitalSignature defaultInstance;
    public static PlayerDecalDigitalSignature getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerDecalDigitalSignature getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerDecalDigitalSignature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              signature_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accountid_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              rtime_ = input.readUInt32();
              break;
            }
            case 37: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                endpos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              endpos_.add(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                endpos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                endpos_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 45: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                startpos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              startpos_.add(input.readFloat());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                startpos_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                startpos_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 53: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                left_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              left_.add(input.readFloat());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                left_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                left_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000008;
              txDefidx_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              entindex_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              hitbox_ = input.readUInt32();
              break;
            }
            case 85: {
              bitField0_ |= 0x00000040;
              creationtime_ = input.readFloat();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              equipslot_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              traceId_ = input.readUInt32();
              break;
            }
            case 109: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                normal_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00001000;
              }
              normal_.add(input.readFloat());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                normal_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                normal_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000200;
              tintId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          endpos_ = java.util.Collections.unmodifiableList(endpos_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          startpos_ = java.util.Collections.unmodifiableList(startpos_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          left_ = java.util.Collections.unmodifiableList(left_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          normal_ = java.util.Collections.unmodifiableList(normal_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerDecalDigitalSignature_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerDecalDigitalSignature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerDecalDigitalSignature> PARSER =
        new com.google.protobuf.AbstractParser<PlayerDecalDigitalSignature>() {
      public PlayerDecalDigitalSignature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerDecalDigitalSignature(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerDecalDigitalSignature> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString signature_;
    /**
     * <code>optional bytes signature = 1;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bytes signature = 1;</code>
     */
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int ACCOUNTID_FIELD_NUMBER = 2;
    private int accountid_;
    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    public boolean hasAccountid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 accountid = 2;</code>
     */
    public int getAccountid() {
      return accountid_;
    }

    public static final int RTIME_FIELD_NUMBER = 3;
    private int rtime_;
    /**
     * <code>optional uint32 rtime = 3;</code>
     */
    public boolean hasRtime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 rtime = 3;</code>
     */
    public int getRtime() {
      return rtime_;
    }

    public static final int ENDPOS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Float> endpos_;
    /**
     * <code>repeated float endpos = 4;</code>
     */
    public java.util.List<java.lang.Float>
        getEndposList() {
      return endpos_;
    }
    /**
     * <code>repeated float endpos = 4;</code>
     */
    public int getEndposCount() {
      return endpos_.size();
    }
    /**
     * <code>repeated float endpos = 4;</code>
     */
    public float getEndpos(int index) {
      return endpos_.get(index);
    }

    public static final int STARTPOS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Float> startpos_;
    /**
     * <code>repeated float startpos = 5;</code>
     */
    public java.util.List<java.lang.Float>
        getStartposList() {
      return startpos_;
    }
    /**
     * <code>repeated float startpos = 5;</code>
     */
    public int getStartposCount() {
      return startpos_.size();
    }
    /**
     * <code>repeated float startpos = 5;</code>
     */
    public float getStartpos(int index) {
      return startpos_.get(index);
    }

    public static final int LEFT_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Float> left_;
    /**
     * <code>repeated float left = 6;</code>
     */
    public java.util.List<java.lang.Float>
        getLeftList() {
      return left_;
    }
    /**
     * <code>repeated float left = 6;</code>
     */
    public int getLeftCount() {
      return left_.size();
    }
    /**
     * <code>repeated float left = 6;</code>
     */
    public float getLeft(int index) {
      return left_.get(index);
    }

    public static final int TX_DEFIDX_FIELD_NUMBER = 7;
    private int txDefidx_;
    /**
     * <code>optional uint32 tx_defidx = 7;</code>
     */
    public boolean hasTxDefidx() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 tx_defidx = 7;</code>
     */
    public int getTxDefidx() {
      return txDefidx_;
    }

    public static final int ENTINDEX_FIELD_NUMBER = 8;
    private int entindex_;
    /**
     * <code>optional int32 entindex = 8;</code>
     */
    public boolean hasEntindex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 entindex = 8;</code>
     */
    public int getEntindex() {
      return entindex_;
    }

    public static final int HITBOX_FIELD_NUMBER = 9;
    private int hitbox_;
    /**
     * <code>optional uint32 hitbox = 9;</code>
     */
    public boolean hasHitbox() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 hitbox = 9;</code>
     */
    public int getHitbox() {
      return hitbox_;
    }

    public static final int CREATIONTIME_FIELD_NUMBER = 10;
    private float creationtime_;
    /**
     * <code>optional float creationtime = 10;</code>
     */
    public boolean hasCreationtime() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float creationtime = 10;</code>
     */
    public float getCreationtime() {
      return creationtime_;
    }

    public static final int EQUIPSLOT_FIELD_NUMBER = 11;
    private int equipslot_;
    /**
     * <code>optional uint32 equipslot = 11;</code>
     */
    public boolean hasEquipslot() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 equipslot = 11;</code>
     */
    public int getEquipslot() {
      return equipslot_;
    }

    public static final int TRACE_ID_FIELD_NUMBER = 12;
    private int traceId_;
    /**
     * <code>optional uint32 trace_id = 12;</code>
     */
    public boolean hasTraceId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 trace_id = 12;</code>
     */
    public int getTraceId() {
      return traceId_;
    }

    public static final int NORMAL_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Float> normal_;
    /**
     * <code>repeated float normal = 13;</code>
     */
    public java.util.List<java.lang.Float>
        getNormalList() {
      return normal_;
    }
    /**
     * <code>repeated float normal = 13;</code>
     */
    public int getNormalCount() {
      return normal_.size();
    }
    /**
     * <code>repeated float normal = 13;</code>
     */
    public float getNormal(int index) {
      return normal_.get(index);
    }

    public static final int TINT_ID_FIELD_NUMBER = 14;
    private int tintId_;
    /**
     * <code>optional uint32 tint_id = 14;</code>
     */
    public boolean hasTintId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 tint_id = 14;</code>
     */
    public int getTintId() {
      return tintId_;
    }

    private void initFields() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
      accountid_ = 0;
      rtime_ = 0;
      endpos_ = java.util.Collections.emptyList();
      startpos_ = java.util.Collections.emptyList();
      left_ = java.util.Collections.emptyList();
      txDefidx_ = 0;
      entindex_ = 0;
      hitbox_ = 0;
      creationtime_ = 0F;
      equipslot_ = 0;
      traceId_ = 0;
      normal_ = java.util.Collections.emptyList();
      tintId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, signature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, accountid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, rtime_);
      }
      for (int i = 0; i < endpos_.size(); i++) {
        output.writeFloat(4, endpos_.get(i));
      }
      for (int i = 0; i < startpos_.size(); i++) {
        output.writeFloat(5, startpos_.get(i));
      }
      for (int i = 0; i < left_.size(); i++) {
        output.writeFloat(6, left_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(7, txDefidx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, entindex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(9, hitbox_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(10, creationtime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(11, equipslot_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(12, traceId_);
      }
      for (int i = 0; i < normal_.size(); i++) {
        output.writeFloat(13, normal_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(14, tintId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, signature_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, accountid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, rtime_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getEndposList().size();
        size += dataSize;
        size += 1 * getEndposList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getStartposList().size();
        size += dataSize;
        size += 1 * getStartposList().size();
      }
      {
        int dataSize = 0;
        dataSize = 4 * getLeftList().size();
        size += dataSize;
        size += 1 * getLeftList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, txDefidx_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, entindex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, hitbox_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, creationtime_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, equipslot_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, traceId_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getNormalList().size();
        size += dataSize;
        size += 1 * getNormalList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, tintId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code PlayerDecalDigitalSignature}
     *
     * <pre>
     * 1133
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PlayerDecalDigitalSignature)
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerDecalDigitalSignature_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerDecalDigitalSignature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.class, skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        signature_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        accountid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rtime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        endpos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        startpos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        left_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        txDefidx_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        entindex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        hitbox_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        creationtime_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000200);
        equipslot_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        traceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        normal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        tintId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.internal_static_PlayerDecalDigitalSignature_descriptor;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature build() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature buildPartial() {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature result = new skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signature_ = signature_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accountid_ = accountid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rtime_ = rtime_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          endpos_ = java.util.Collections.unmodifiableList(endpos_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.endpos_ = endpos_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          startpos_ = java.util.Collections.unmodifiableList(startpos_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.startpos_ = startpos_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          left_ = java.util.Collections.unmodifiableList(left_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.txDefidx_ = txDefidx_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.entindex_ = entindex_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.hitbox_ = hitbox_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.creationtime_ = creationtime_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.equipslot_ = equipslot_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.traceId_ = traceId_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          normal_ = java.util.Collections.unmodifiableList(normal_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.normal_ = normal_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.tintId_ = tintId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature) {
          return mergeFrom((skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature other) {
        if (other == skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature.getDefaultInstance()) return this;
        if (other.hasSignature()) {
          setSignature(other.getSignature());
        }
        if (other.hasAccountid()) {
          setAccountid(other.getAccountid());
        }
        if (other.hasRtime()) {
          setRtime(other.getRtime());
        }
        if (!other.endpos_.isEmpty()) {
          if (endpos_.isEmpty()) {
            endpos_ = other.endpos_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEndposIsMutable();
            endpos_.addAll(other.endpos_);
          }
          onChanged();
        }
        if (!other.startpos_.isEmpty()) {
          if (startpos_.isEmpty()) {
            startpos_ = other.startpos_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureStartposIsMutable();
            startpos_.addAll(other.startpos_);
          }
          onChanged();
        }
        if (!other.left_.isEmpty()) {
          if (left_.isEmpty()) {
            left_ = other.left_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureLeftIsMutable();
            left_.addAll(other.left_);
          }
          onChanged();
        }
        if (other.hasTxDefidx()) {
          setTxDefidx(other.getTxDefidx());
        }
        if (other.hasEntindex()) {
          setEntindex(other.getEntindex());
        }
        if (other.hasHitbox()) {
          setHitbox(other.getHitbox());
        }
        if (other.hasCreationtime()) {
          setCreationtime(other.getCreationtime());
        }
        if (other.hasEquipslot()) {
          setEquipslot(other.getEquipslot());
        }
        if (other.hasTraceId()) {
          setTraceId(other.getTraceId());
        }
        if (!other.normal_.isEmpty()) {
          if (normal_.isEmpty()) {
            normal_ = other.normal_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureNormalIsMutable();
            normal_.addAll(other.normal_);
          }
          onChanged();
        }
        if (other.hasTintId()) {
          setTintId(other.getTintId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.common.proto.CsgoGcMessages.PlayerDecalDigitalSignature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes signature = 1;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private int accountid_ ;
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public boolean hasAccountid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public int getAccountid() {
        return accountid_;
      }
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public Builder setAccountid(int value) {
        bitField0_ |= 0x00000002;
        accountid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 accountid = 2;</code>
       */
      public Builder clearAccountid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accountid_ = 0;
        onChanged();
        return this;
      }

      private int rtime_ ;
      /**
       * <code>optional uint32 rtime = 3;</code>
       */
      public boolean hasRtime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 rtime = 3;</code>
       */
      public int getRtime() {
        return rtime_;
      }
      /**
       * <code>optional uint32 rtime = 3;</code>
       */
      public Builder setRtime(int value) {
        bitField0_ |= 0x00000004;
        rtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 rtime = 3;</code>
       */
      public Builder clearRtime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rtime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> endpos_ = java.util.Collections.emptyList();
      private void ensureEndposIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          endpos_ = new java.util.ArrayList<java.lang.Float>(endpos_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public java.util.List<java.lang.Float>
          getEndposList() {
        return java.util.Collections.unmodifiableList(endpos_);
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public int getEndposCount() {
        return endpos_.size();
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public float getEndpos(int index) {
        return endpos_.get(index);
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public Builder setEndpos(
          int index, float value) {
        ensureEndposIsMutable();
        endpos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public Builder addEndpos(float value) {
        ensureEndposIsMutable();
        endpos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public Builder addAllEndpos(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureEndposIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, endpos_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float endpos = 4;</code>
       */
      public Builder clearEndpos() {
        endpos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> startpos_ = java.util.Collections.emptyList();
      private void ensureStartposIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          startpos_ = new java.util.ArrayList<java.lang.Float>(startpos_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public java.util.List<java.lang.Float>
          getStartposList() {
        return java.util.Collections.unmodifiableList(startpos_);
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public int getStartposCount() {
        return startpos_.size();
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public float getStartpos(int index) {
        return startpos_.get(index);
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public Builder setStartpos(
          int index, float value) {
        ensureStartposIsMutable();
        startpos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public Builder addStartpos(float value) {
        ensureStartposIsMutable();
        startpos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public Builder addAllStartpos(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureStartposIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, startpos_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float startpos = 5;</code>
       */
      public Builder clearStartpos() {
        startpos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> left_ = java.util.Collections.emptyList();
      private void ensureLeftIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          left_ = new java.util.ArrayList<java.lang.Float>(left_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public java.util.List<java.lang.Float>
          getLeftList() {
        return java.util.Collections.unmodifiableList(left_);
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public int getLeftCount() {
        return left_.size();
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public float getLeft(int index) {
        return left_.get(index);
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public Builder setLeft(
          int index, float value) {
        ensureLeftIsMutable();
        left_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public Builder addLeft(float value) {
        ensureLeftIsMutable();
        left_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public Builder addAllLeft(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureLeftIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, left_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float left = 6;</code>
       */
      public Builder clearLeft() {
        left_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private int txDefidx_ ;
      /**
       * <code>optional uint32 tx_defidx = 7;</code>
       */
      public boolean hasTxDefidx() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 tx_defidx = 7;</code>
       */
      public int getTxDefidx() {
        return txDefidx_;
      }
      /**
       * <code>optional uint32 tx_defidx = 7;</code>
       */
      public Builder setTxDefidx(int value) {
        bitField0_ |= 0x00000040;
        txDefidx_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tx_defidx = 7;</code>
       */
      public Builder clearTxDefidx() {
        bitField0_ = (bitField0_ & ~0x00000040);
        txDefidx_ = 0;
        onChanged();
        return this;
      }

      private int entindex_ ;
      /**
       * <code>optional int32 entindex = 8;</code>
       */
      public boolean hasEntindex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 entindex = 8;</code>
       */
      public int getEntindex() {
        return entindex_;
      }
      /**
       * <code>optional int32 entindex = 8;</code>
       */
      public Builder setEntindex(int value) {
        bitField0_ |= 0x00000080;
        entindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 entindex = 8;</code>
       */
      public Builder clearEntindex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        entindex_ = 0;
        onChanged();
        return this;
      }

      private int hitbox_ ;
      /**
       * <code>optional uint32 hitbox = 9;</code>
       */
      public boolean hasHitbox() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 hitbox = 9;</code>
       */
      public int getHitbox() {
        return hitbox_;
      }
      /**
       * <code>optional uint32 hitbox = 9;</code>
       */
      public Builder setHitbox(int value) {
        bitField0_ |= 0x00000100;
        hitbox_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hitbox = 9;</code>
       */
      public Builder clearHitbox() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hitbox_ = 0;
        onChanged();
        return this;
      }

      private float creationtime_ ;
      /**
       * <code>optional float creationtime = 10;</code>
       */
      public boolean hasCreationtime() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional float creationtime = 10;</code>
       */
      public float getCreationtime() {
        return creationtime_;
      }
      /**
       * <code>optional float creationtime = 10;</code>
       */
      public Builder setCreationtime(float value) {
        bitField0_ |= 0x00000200;
        creationtime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float creationtime = 10;</code>
       */
      public Builder clearCreationtime() {
        bitField0_ = (bitField0_ & ~0x00000200);
        creationtime_ = 0F;
        onChanged();
        return this;
      }

      private int equipslot_ ;
      /**
       * <code>optional uint32 equipslot = 11;</code>
       */
      public boolean hasEquipslot() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 equipslot = 11;</code>
       */
      public int getEquipslot() {
        return equipslot_;
      }
      /**
       * <code>optional uint32 equipslot = 11;</code>
       */
      public Builder setEquipslot(int value) {
        bitField0_ |= 0x00000400;
        equipslot_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 equipslot = 11;</code>
       */
      public Builder clearEquipslot() {
        bitField0_ = (bitField0_ & ~0x00000400);
        equipslot_ = 0;
        onChanged();
        return this;
      }

      private int traceId_ ;
      /**
       * <code>optional uint32 trace_id = 12;</code>
       */
      public boolean hasTraceId() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 trace_id = 12;</code>
       */
      public int getTraceId() {
        return traceId_;
      }
      /**
       * <code>optional uint32 trace_id = 12;</code>
       */
      public Builder setTraceId(int value) {
        bitField0_ |= 0x00000800;
        traceId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 trace_id = 12;</code>
       */
      public Builder clearTraceId() {
        bitField0_ = (bitField0_ & ~0x00000800);
        traceId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> normal_ = java.util.Collections.emptyList();
      private void ensureNormalIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          normal_ = new java.util.ArrayList<java.lang.Float>(normal_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public java.util.List<java.lang.Float>
          getNormalList() {
        return java.util.Collections.unmodifiableList(normal_);
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public int getNormalCount() {
        return normal_.size();
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public float getNormal(int index) {
        return normal_.get(index);
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public Builder setNormal(
          int index, float value) {
        ensureNormalIsMutable();
        normal_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public Builder addNormal(float value) {
        ensureNormalIsMutable();
        normal_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public Builder addAllNormal(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureNormalIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, normal_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float normal = 13;</code>
       */
      public Builder clearNormal() {
        normal_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      private int tintId_ ;
      /**
       * <code>optional uint32 tint_id = 14;</code>
       */
      public boolean hasTintId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 tint_id = 14;</code>
       */
      public int getTintId() {
        return tintId_;
      }
      /**
       * <code>optional uint32 tint_id = 14;</code>
       */
      public Builder setTintId(int value) {
        bitField0_ |= 0x00002000;
        tintId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tint_id = 14;</code>
       */
      public Builder clearTintId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        tintId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:PlayerDecalDigitalSignature)
    }

    static {
      defaultInstance = new PlayerDecalDigitalSignature(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:PlayerDecalDigitalSignature)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TournamentPlayer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TournamentPlayer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TournamentTeam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TournamentTeam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_TournamentEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TournamentEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerRankingInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerRankingInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_IpAddressMask_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_IpAddressMask_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_XpProgressData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_XpProgressData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ScoreLeaderboardData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ScoreLeaderboardData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ScoreLeaderboardData_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ScoreLeaderboardData_Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ScoreLeaderboardData_AccountEntries_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_ScoreLeaderboardData_AccountEntries_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DeepPlayerStatsEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeepPlayerStatsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DeepPlayerMatchEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeepPlayerMatchEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPreMatchInfoData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPreMatchInfoData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CPreMatchInfoData_TeamStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CPreMatchInfoData_TeamStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCCStrike15_ClientDeepStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CEconItemPreviewDataBlock_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CEconItemPreviewDataBlock_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CEconItemPreviewDataBlock_Sticker_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PlayerDecalDigitalSignature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PlayerDecalDigitalSignature_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032cstrike15_gcmessages.proto\"\247\001\n\020Tournam" +
      "entPlayer\022\022\n\naccount_id\030\001 \001(\r\022\023\n\013player_" +
      "nick\030\002 \001(\t\022\023\n\013player_name\030\003 \001(\t\022\022\n\nplaye" +
      "r_dob\030\004 \001(\r\022\023\n\013player_flag\030\005 \001(\t\022\027\n\017play" +
      "er_location\030\006 \001(\t\022\023\n\013player_desc\030\007 \001(\t\"}" +
      "\n\016TournamentTeam\022\017\n\007team_id\030\001 \001(\005\022\020\n\010tea" +
      "m_tag\030\002 \001(\t\022\021\n\tteam_flag\030\003 \001(\t\022\021\n\tteam_n" +
      "ame\030\004 \001(\t\022\"\n\007players\030\005 \003(\0132\021.TournamentP" +
      "layer\"\337\001\n\017TournamentEvent\022\020\n\010event_id\030\001 " +
      "\001(\005\022\021\n\tevent_tag\030\002 \001(\t\022\022\n\nevent_name\030\003 \001",
      "(\t\022\030\n\020event_time_start\030\004 \001(\r\022\026\n\016event_ti" +
      "me_end\030\005 \001(\r\022\024\n\014event_public\030\006 \001(\005\022\026\n\016ev" +
      "ent_stage_id\030\007 \001(\005\022\030\n\020event_stage_name\030\010" +
      " \001(\t\022\031\n\021active_section_id\030\t \001(\r\"\205\001\n\021Play" +
      "erRankingInfo\022\022\n\naccount_id\030\001 \001(\r\022\017\n\007ran" +
      "k_id\030\002 \001(\r\022\014\n\004wins\030\003 \001(\r\022\023\n\013rank_change\030" +
      "\004 \001(\002\022\024\n\014rank_type_id\030\006 \001(\r\022\022\n\ntv_contro" +
      "l\030\007 \001(\r\"X\n\rIpAddressMask\022\t\n\001a\030\001 \001(\r\022\t\n\001b" +
      "\030\002 \001(\r\022\t\n\001c\030\003 \001(\r\022\t\n\001d\030\004 \001(\r\022\014\n\004bits\030\005 \001" +
      "(\r\022\r\n\005token\030\006 \001(\r\"8\n\016XpProgressData\022\021\n\tx",
      "p_points\030\001 \001(\r\022\023\n\013xp_category\030\002 \001(\005\"\236\002\n\024" +
      "ScoreLeaderboardData\022\020\n\010quest_id\030\001 \001(\004\022\r" +
      "\n\005score\030\002 \001(\r\022<\n\016accountentries\030\003 \003(\0132$." +
      "ScoreLeaderboardData.AccountEntries\0221\n\014m" +
      "atchentries\030\005 \003(\0132\033.ScoreLeaderboardData" +
      ".Entry\032!\n\005Entry\022\013\n\003tag\030\001 \001(\r\022\013\n\003val\030\002 \001(" +
      "\r\032Q\n\016AccountEntries\022\021\n\taccountid\030\001 \001(\r\022," +
      "\n\007entries\030\002 \003(\0132\033.ScoreLeaderboardData.E" +
      "ntry\"\226\005\n\024DeepPlayerStatsEntry\022\021\n\taccount" +
      "id\030\001 \001(\r\022\020\n\010match_id\030\002 \001(\004\022\024\n\014mm_game_mo",
      "de\030\003 \001(\r\022\r\n\005mapid\030\004 \001(\r\022\025\n\rb_starting_ct" +
      "\030\005 \001(\010\022\025\n\rmatch_outcome\030\006 \001(\r\022\022\n\nrounds_" +
      "won\030\007 \001(\r\022\023\n\013rounds_lost\030\010 \001(\r\022\022\n\nstat_s" +
      "core\030\t \001(\r\022\023\n\013stat_deaths\030\014 \001(\r\022\021\n\tstat_" +
      "mvps\030\r \001(\r\022\023\n\013enemy_kills\030\016 \001(\r\022\027\n\017enemy" +
      "_headshots\030\017 \001(\r\022\021\n\tenemy_2ks\030\020 \001(\r\022\021\n\te" +
      "nemy_3ks\030\021 \001(\r\022\021\n\tenemy_4ks\030\022 \001(\r\022\024\n\014tot" +
      "al_damage\030\023 \001(\r\022\037\n\027engagements_entry_cou" +
      "nt\030\027 \001(\r\022\036\n\026engagements_entry_wins\030\030 \001(\r" +
      "\022\035\n\025engagements_1v1_count\030\031 \001(\r\022\034\n\024engag",
      "ements_1v1_wins\030\032 \001(\r\022\035\n\025engagements_1v2" +
      "_count\030\033 \001(\r\022\034\n\024engagements_1v2_wins\030\034 \001" +
      "(\r\022\025\n\rutility_count\030\035 \001(\r\022\027\n\017utility_suc" +
      "cess\030\036 \001(\r\022\023\n\013flash_count\030  \001(\r\022\025\n\rflash" +
      "_success\030! \001(\r\022\r\n\005mates\030\" \003(\r\"\261\002\n\024DeepPl" +
      "ayerMatchEvent\022\021\n\taccountid\030\001 \001(\r\022\020\n\010mat" +
      "ch_id\030\002 \001(\004\022\020\n\010event_id\030\003 \001(\r\022\022\n\nevent_t" +
      "ype\030\004 \001(\r\022\024\n\014b_playing_ct\030\005 \001(\010\022\022\n\nuser_" +
      "pos_x\030\006 \001(\005\022\022\n\nuser_pos_y\030\007 \001(\005\022\022\n\nuser_" +
      "pos_z\030\014 \001(\005\022\023\n\013user_defidx\030\010 \001(\r\022\023\n\013othe",
      "r_pos_x\030\t \001(\005\022\023\n\013other_pos_y\030\n \001(\005\022\023\n\013ot" +
      "her_pos_z\030\r \001(\005\022\024\n\014other_defidx\030\013 \001(\r\022\022\n" +
      "\nevent_data\030\016 \001(\005\"\326\002\n(CDataGCCStrike15_v" +
      "2_TournamentMatchDraft\022\020\n\010event_id\030\001 \001(\005" +
      "\022\026\n\016event_stage_id\030\002 \001(\005\022\021\n\tteam_id_0\030\003 " +
      "\001(\005\022\021\n\tteam_id_1\030\004 \001(\005\022\022\n\nmaps_count\030\005 \001" +
      "(\005\022\024\n\014maps_current\030\006 \001(\005\022\025\n\rteam_id_star" +
      "t\030\007 \001(\005\022\025\n\rteam_id_veto1\030\010 \001(\005\022\025\n\rteam_i" +
      "d_pickn\030\t \001(\005\022?\n\006drafts\030\n \003(\0132/.CDataGCC" +
      "Strike15_v2_TournamentMatchDraft.Entry\032*",
      "\n\005Entry\022\r\n\005mapid\030\001 \001(\005\022\022\n\nteam_id_ct\030\002 \001" +
      "(\005\"\373\001\n\021CPreMatchInfoData\022\027\n\017predictions_" +
      "pct\030\001 \001(\005\0228\n\005draft\030\004 \001(\0132).CDataGCCStrik" +
      "e15_v2_TournamentMatchDraft\022+\n\005stats\030\005 \003" +
      "(\0132\034.CPreMatchInfoData.TeamStats\022\014\n\004wins" +
      "\030\006 \003(\005\032X\n\tTeamStats\022\031\n\021match_info_idxtxt" +
      "\030\001 \001(\005\022\026\n\016match_info_txt\030\002 \001(\t\022\030\n\020match_" +
      "info_teams\030\003 \003(\t\"\262\004\n.CMsgGCCStrike15_v2_" +
      "MatchmakingGC2ServerReserve\022\023\n\013account_i" +
      "ds\030\001 \003(\r\022\021\n\tgame_type\030\002 \001(\r\022\020\n\010match_id\030",
      "\003 \001(\004\022\026\n\016server_version\030\004 \001(\r\022\r\n\005flags\030\022" +
      " \001(\r\022$\n\010rankings\030\005 \003(\0132\022.PlayerRankingIn" +
      "fo\022\026\n\016encryption_key\030\006 \001(\004\022\032\n\022encryption" +
      "_key_pub\030\007 \001(\004\022\021\n\tparty_ids\030\010 \003(\r\022!\n\twhi" +
      "telist\030\t \003(\0132\016.IpAddressMask\022\031\n\021tv_maste" +
      "r_steamid\030\n \001(\004\022*\n\020tournament_event\030\013 \001(" +
      "\0132\020.TournamentEvent\022)\n\020tournament_teams\030" +
      "\014 \003(\0132\017.TournamentTeam\022&\n\036tournament_cas" +
      "ters_account_ids\030\r \003(\r\022\030\n\020tv_relay_steam" +
      "id\030\016 \001(\004\022*\n\016pre_match_data\030\017 \001(\0132\022.CPreM",
      "atchInfoData\022\033\n\023rtime32_event_start\030\020 \001(" +
      "\r\022\022\n\ntv_control\030\021 \001(\r\"\325\002\n\037CMsgGCCStrike1" +
      "5_ClientDeepStats\022\022\n\naccount_id\030\001 \001(\r\022>\n" +
      "\005range\030\002 \001(\0132/.CMsgGCCStrike15_ClientDee" +
      "pStats.DeepStatsRange\022@\n\007matches\030\003 \003(\0132/" +
      ".CMsgGCCStrike15_ClientDeepStats.DeepSta" +
      "tsMatch\032<\n\016DeepStatsRange\022\r\n\005begin\030\001 \001(\r" +
      "\022\013\n\003end\030\002 \001(\r\022\016\n\006frozen\030\003 \001(\010\032^\n\016DeepSta" +
      "tsMatch\022%\n\006player\030\001 \001(\0132\025.DeepPlayerStat" +
      "sEntry\022%\n\006events\030\002 \003(\0132\025.DeepPlayerMatch",
      "Event\"\323\001\n,CMsgGCCstrike15_v2_GC2ServerNo" +
      "tifyXPRewarded\022)\n\020xp_progress_data\030\001 \003(\013" +
      "2\017.XpProgressData\022\022\n\naccount_id\030\002 \001(\r\022\022\n" +
      "\ncurrent_xp\030\003 \001(\r\022\025\n\rcurrent_level\030\004 \001(\r" +
      "\022\027\n\017upgraded_defidx\030\005 \001(\r\022 \n\030operation_p" +
      "oints_awarded\030\006 \001(\r\"\204\004\n\031CEconItemPreview" +
      "DataBlock\022\021\n\taccountid\030\001 \001(\r\022\016\n\006itemid\030\002" +
      " \001(\004\022\020\n\010defindex\030\003 \001(\r\022\022\n\npaintindex\030\004 \001" +
      "(\r\022\016\n\006rarity\030\005 \001(\r\022\017\n\007quality\030\006 \001(\r\022\021\n\tp" +
      "aintwear\030\007 \001(\r\022\021\n\tpaintseed\030\010 \001(\r\022\032\n\022kil",
      "leaterscoretype\030\t \001(\r\022\026\n\016killeatervalue\030" +
      "\n \001(\r\022\022\n\ncustomname\030\013 \001(\t\0224\n\010stickers\030\014 " +
      "\003(\0132\".CEconItemPreviewDataBlock.Sticker\022" +
      "\021\n\tinventory\030\r \001(\r\022\016\n\006origin\030\016 \001(\r\022\017\n\007qu" +
      "estid\030\017 \001(\r\022\022\n\ndropreason\030\020 \001(\r\022\022\n\nmusic" +
      "index\030\021 \001(\r\022\020\n\010entindex\030\022 \001(\005\032k\n\007Sticker" +
      "\022\014\n\004slot\030\001 \001(\r\022\022\n\nsticker_id\030\002 \001(\r\022\014\n\004we" +
      "ar\030\003 \001(\002\022\r\n\005scale\030\004 \001(\002\022\020\n\010rotation\030\005 \001(" +
      "\002\022\017\n\007tint_id\030\006 \001(\r\"\223\002\n\033PlayerDecalDigita" +
      "lSignature\022\021\n\tsignature\030\001 \001(\014\022\021\n\taccount",
      "id\030\002 \001(\r\022\r\n\005rtime\030\003 \001(\r\022\016\n\006endpos\030\004 \003(\002\022" +
      "\020\n\010startpos\030\005 \003(\002\022\014\n\004left\030\006 \003(\002\022\021\n\ttx_de" +
      "fidx\030\007 \001(\r\022\020\n\010entindex\030\010 \001(\005\022\016\n\006hitbox\030\t" +
      " \001(\r\022\024\n\014creationtime\030\n \001(\002\022\021\n\tequipslot\030" +
      "\013 \001(\r\022\020\n\010trace_id\030\014 \001(\r\022\016\n\006normal\030\r \003(\002\022" +
      "\017\n\007tint_id\030\016 \001(\rB;\n)skadistats.clarity.w" +
      "ire.csgo.common.protoB\016CsgoGcMessages"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_TournamentPlayer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_TournamentPlayer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_TournamentPlayer_descriptor,
        new java.lang.String[] { "AccountId", "PlayerNick", "PlayerName", "PlayerDob", "PlayerFlag", "PlayerLocation", "PlayerDesc", });
    internal_static_TournamentTeam_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_TournamentTeam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_TournamentTeam_descriptor,
        new java.lang.String[] { "TeamId", "TeamTag", "TeamFlag", "TeamName", "Players", });
    internal_static_TournamentEvent_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_TournamentEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_TournamentEvent_descriptor,
        new java.lang.String[] { "EventId", "EventTag", "EventName", "EventTimeStart", "EventTimeEnd", "EventPublic", "EventStageId", "EventStageName", "ActiveSectionId", });
    internal_static_PlayerRankingInfo_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_PlayerRankingInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PlayerRankingInfo_descriptor,
        new java.lang.String[] { "AccountId", "RankId", "Wins", "RankChange", "RankTypeId", "TvControl", });
    internal_static_IpAddressMask_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_IpAddressMask_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_IpAddressMask_descriptor,
        new java.lang.String[] { "A", "B", "C", "D", "Bits", "Token", });
    internal_static_XpProgressData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_XpProgressData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_XpProgressData_descriptor,
        new java.lang.String[] { "XpPoints", "XpCategory", });
    internal_static_ScoreLeaderboardData_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_ScoreLeaderboardData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ScoreLeaderboardData_descriptor,
        new java.lang.String[] { "QuestId", "Score", "Accountentries", "Matchentries", });
    internal_static_ScoreLeaderboardData_Entry_descriptor =
      internal_static_ScoreLeaderboardData_descriptor.getNestedTypes().get(0);
    internal_static_ScoreLeaderboardData_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ScoreLeaderboardData_Entry_descriptor,
        new java.lang.String[] { "Tag", "Val", });
    internal_static_ScoreLeaderboardData_AccountEntries_descriptor =
      internal_static_ScoreLeaderboardData_descriptor.getNestedTypes().get(1);
    internal_static_ScoreLeaderboardData_AccountEntries_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_ScoreLeaderboardData_AccountEntries_descriptor,
        new java.lang.String[] { "Accountid", "Entries", });
    internal_static_DeepPlayerStatsEntry_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_DeepPlayerStatsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DeepPlayerStatsEntry_descriptor,
        new java.lang.String[] { "Accountid", "MatchId", "MmGameMode", "Mapid", "BStartingCt", "MatchOutcome", "RoundsWon", "RoundsLost", "StatScore", "StatDeaths", "StatMvps", "EnemyKills", "EnemyHeadshots", "Enemy2Ks", "Enemy3Ks", "Enemy4Ks", "TotalDamage", "EngagementsEntryCount", "EngagementsEntryWins", "Engagements1V1Count", "Engagements1V1Wins", "Engagements1V2Count", "Engagements1V2Wins", "UtilityCount", "UtilitySuccess", "FlashCount", "FlashSuccess", "Mates", });
    internal_static_DeepPlayerMatchEvent_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_DeepPlayerMatchEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DeepPlayerMatchEvent_descriptor,
        new java.lang.String[] { "Accountid", "MatchId", "EventId", "EventType", "BPlayingCt", "UserPosX", "UserPosY", "UserPosZ", "UserDefidx", "OtherPosX", "OtherPosY", "OtherPosZ", "OtherDefidx", "EventData", });
    internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor,
        new java.lang.String[] { "EventId", "EventStageId", "TeamId0", "TeamId1", "MapsCount", "MapsCurrent", "TeamIdStart", "TeamIdVeto1", "TeamIdPickn", "Drafts", });
    internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor =
      internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_descriptor.getNestedTypes().get(0);
    internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CDataGCCStrike15_v2_TournamentMatchDraft_Entry_descriptor,
        new java.lang.String[] { "Mapid", "TeamIdCt", });
    internal_static_CPreMatchInfoData_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_CPreMatchInfoData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPreMatchInfoData_descriptor,
        new java.lang.String[] { "PredictionsPct", "Draft", "Stats", "Wins", });
    internal_static_CPreMatchInfoData_TeamStats_descriptor =
      internal_static_CPreMatchInfoData_descriptor.getNestedTypes().get(0);
    internal_static_CPreMatchInfoData_TeamStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CPreMatchInfoData_TeamStats_descriptor,
        new java.lang.String[] { "MatchInfoIdxtxt", "MatchInfoTxt", "MatchInfoTeams", });
    internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCCStrike15_v2_MatchmakingGC2ServerReserve_descriptor,
        new java.lang.String[] { "AccountIds", "GameType", "MatchId", "ServerVersion", "Flags", "Rankings", "EncryptionKey", "EncryptionKeyPub", "PartyIds", "Whitelist", "TvMasterSteamid", "TournamentEvent", "TournamentTeams", "TournamentCastersAccountIds", "TvRelaySteamid", "PreMatchData", "Rtime32EventStart", "TvControl", });
    internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_CMsgGCCStrike15_ClientDeepStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor,
        new java.lang.String[] { "AccountId", "Range", "Matches", });
    internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_descriptor =
      internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor.getNestedTypes().get(0);
    internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsRange_descriptor,
        new java.lang.String[] { "Begin", "End", "Frozen", });
    internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_descriptor =
      internal_static_CMsgGCCStrike15_ClientDeepStats_descriptor.getNestedTypes().get(1);
    internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCCStrike15_ClientDeepStats_DeepStatsMatch_descriptor,
        new java.lang.String[] { "Player", "Events", });
    internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgGCCstrike15_v2_GC2ServerNotifyXPRewarded_descriptor,
        new java.lang.String[] { "XpProgressData", "AccountId", "CurrentXp", "CurrentLevel", "UpgradedDefidx", "OperationPointsAwarded", });
    internal_static_CEconItemPreviewDataBlock_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_CEconItemPreviewDataBlock_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CEconItemPreviewDataBlock_descriptor,
        new java.lang.String[] { "Accountid", "Itemid", "Defindex", "Paintindex", "Rarity", "Quality", "Paintwear", "Paintseed", "Killeaterscoretype", "Killeatervalue", "Customname", "Stickers", "Inventory", "Origin", "Questid", "Dropreason", "Musicindex", "Entindex", });
    internal_static_CEconItemPreviewDataBlock_Sticker_descriptor =
      internal_static_CEconItemPreviewDataBlock_descriptor.getNestedTypes().get(0);
    internal_static_CEconItemPreviewDataBlock_Sticker_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CEconItemPreviewDataBlock_Sticker_descriptor,
        new java.lang.String[] { "Slot", "StickerId", "Wear", "Scale", "Rotation", "TintId", });
    internal_static_PlayerDecalDigitalSignature_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_PlayerDecalDigitalSignature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PlayerDecalDigitalSignature_descriptor,
        new java.lang.String[] { "Signature", "Accountid", "Rtime", "Endpos", "Startpos", "Left", "TxDefidx", "Entindex", "Hitbox", "Creationtime", "Equipslot", "TraceId", "Normal", "TintId", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
