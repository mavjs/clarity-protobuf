// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_id.proto

package skadistats.clarity.wire.dota.s1.proto;

public final class DOTAS1MessageId {
  private DOTAS1MessageId() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code NET_Messages}
   */
  public enum NET_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>net_NOP = 0;</code>
     */
    net_NOP(0, 0),
    /**
     * <code>net_Disconnect = 1;</code>
     */
    net_Disconnect(1, 1),
    /**
     * <code>net_File = 2;</code>
     */
    net_File(2, 2),
    /**
     * <code>net_SplitScreenUser = 3;</code>
     */
    net_SplitScreenUser(3, 3),
    /**
     * <code>net_Tick = 4;</code>
     */
    net_Tick(4, 4),
    /**
     * <code>net_StringCmd = 5;</code>
     */
    net_StringCmd(5, 5),
    /**
     * <code>net_SetConVar = 6;</code>
     */
    net_SetConVar(6, 6),
    /**
     * <code>net_SignonState = 7;</code>
     */
    net_SignonState(7, 7),
    /**
     * <code>net_SpawnGroup_Load = 8;</code>
     */
    net_SpawnGroup_Load(8, 8),
    /**
     * <code>net_SpawnGroup_ManifestUpdate = 9;</code>
     */
    net_SpawnGroup_ManifestUpdate(9, 9),
    /**
     * <code>net_SpawnGroup_SetCreationTick = 11;</code>
     */
    net_SpawnGroup_SetCreationTick(10, 11),
    /**
     * <code>net_SpawnGroup_Unload = 12;</code>
     */
    net_SpawnGroup_Unload(11, 12),
    /**
     * <code>net_SpawnGroup_LoadCompleted = 13;</code>
     */
    net_SpawnGroup_LoadCompleted(12, 13),
    /**
     * <code>net_ReliableMessageEndMarker = 14;</code>
     */
    net_ReliableMessageEndMarker(13, 14),
    /**
     * <code>net_DebugOverlay = 15;</code>
     */
    net_DebugOverlay(14, 15),
    /**
     * <code>net_PlayerAvatarData = 100;</code>
     */
    net_PlayerAvatarData(15, 100),
    ;

    /**
     * <code>net_NOP = 0;</code>
     */
    public static final int net_NOP_VALUE = 0;
    /**
     * <code>net_Disconnect = 1;</code>
     */
    public static final int net_Disconnect_VALUE = 1;
    /**
     * <code>net_File = 2;</code>
     */
    public static final int net_File_VALUE = 2;
    /**
     * <code>net_SplitScreenUser = 3;</code>
     */
    public static final int net_SplitScreenUser_VALUE = 3;
    /**
     * <code>net_Tick = 4;</code>
     */
    public static final int net_Tick_VALUE = 4;
    /**
     * <code>net_StringCmd = 5;</code>
     */
    public static final int net_StringCmd_VALUE = 5;
    /**
     * <code>net_SetConVar = 6;</code>
     */
    public static final int net_SetConVar_VALUE = 6;
    /**
     * <code>net_SignonState = 7;</code>
     */
    public static final int net_SignonState_VALUE = 7;
    /**
     * <code>net_SpawnGroup_Load = 8;</code>
     */
    public static final int net_SpawnGroup_Load_VALUE = 8;
    /**
     * <code>net_SpawnGroup_ManifestUpdate = 9;</code>
     */
    public static final int net_SpawnGroup_ManifestUpdate_VALUE = 9;
    /**
     * <code>net_SpawnGroup_SetCreationTick = 11;</code>
     */
    public static final int net_SpawnGroup_SetCreationTick_VALUE = 11;
    /**
     * <code>net_SpawnGroup_Unload = 12;</code>
     */
    public static final int net_SpawnGroup_Unload_VALUE = 12;
    /**
     * <code>net_SpawnGroup_LoadCompleted = 13;</code>
     */
    public static final int net_SpawnGroup_LoadCompleted_VALUE = 13;
    /**
     * <code>net_ReliableMessageEndMarker = 14;</code>
     */
    public static final int net_ReliableMessageEndMarker_VALUE = 14;
    /**
     * <code>net_DebugOverlay = 15;</code>
     */
    public static final int net_DebugOverlay_VALUE = 15;
    /**
     * <code>net_PlayerAvatarData = 100;</code>
     */
    public static final int net_PlayerAvatarData_VALUE = 100;


    public final int getNumber() { return value; }

    public static NET_Messages valueOf(int value) {
      switch (value) {
        case 0: return net_NOP;
        case 1: return net_Disconnect;
        case 2: return net_File;
        case 3: return net_SplitScreenUser;
        case 4: return net_Tick;
        case 5: return net_StringCmd;
        case 6: return net_SetConVar;
        case 7: return net_SignonState;
        case 8: return net_SpawnGroup_Load;
        case 9: return net_SpawnGroup_ManifestUpdate;
        case 11: return net_SpawnGroup_SetCreationTick;
        case 12: return net_SpawnGroup_Unload;
        case 13: return net_SpawnGroup_LoadCompleted;
        case 14: return net_ReliableMessageEndMarker;
        case 15: return net_DebugOverlay;
        case 100: return net_PlayerAvatarData;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NET_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NET_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NET_Messages>() {
            public NET_Messages findValueByNumber(int number) {
              return NET_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s1.proto.DOTAS1MessageId.getDescriptor().getEnumTypes().get(0);
    }

    private static final NET_Messages[] VALUES = values();

    public static NET_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NET_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NET_Messages)
  }

  /**
   * Protobuf enum {@code SVC_Messages}
   */
  public enum SVC_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>svc_ServerInfo = 8;</code>
     */
    svc_ServerInfo(0, 8),
    /**
     * <code>svc_SendTable = 9;</code>
     */
    svc_SendTable(1, 9),
    /**
     * <code>svc_ClassInfo = 10;</code>
     */
    svc_ClassInfo(2, 10),
    /**
     * <code>svc_SetPause = 11;</code>
     */
    svc_SetPause(3, 11),
    /**
     * <code>svc_CreateStringTable = 12;</code>
     */
    svc_CreateStringTable(4, 12),
    /**
     * <code>svc_UpdateStringTable = 13;</code>
     */
    svc_UpdateStringTable(5, 13),
    /**
     * <code>svc_VoiceInit = 14;</code>
     */
    svc_VoiceInit(6, 14),
    /**
     * <code>svc_VoiceData = 15;</code>
     */
    svc_VoiceData(7, 15),
    /**
     * <code>svc_Print = 16;</code>
     */
    svc_Print(8, 16),
    /**
     * <code>svc_Sounds = 17;</code>
     */
    svc_Sounds(9, 17),
    /**
     * <code>svc_SetView = 18;</code>
     */
    svc_SetView(10, 18),
    /**
     * <code>svc_FixAngle = 19;</code>
     */
    svc_FixAngle(11, 19),
    /**
     * <code>svc_CrosshairAngle = 20;</code>
     */
    svc_CrosshairAngle(12, 20),
    /**
     * <code>svc_BSPDecal = 21;</code>
     */
    svc_BSPDecal(13, 21),
    /**
     * <code>svc_SplitScreen = 22;</code>
     */
    svc_SplitScreen(14, 22),
    /**
     * <code>svc_UserMessage = 23;</code>
     */
    svc_UserMessage(15, 23),
    /**
     * <code>svc_EntityMessage = 24;</code>
     */
    svc_EntityMessage(16, 24),
    /**
     * <code>svc_GameEvent = 25;</code>
     */
    svc_GameEvent(17, 25),
    /**
     * <code>svc_PacketEntities = 26;</code>
     */
    svc_PacketEntities(18, 26),
    /**
     * <code>svc_TempEntities = 27;</code>
     */
    svc_TempEntities(19, 27),
    /**
     * <code>svc_Prefetch = 28;</code>
     */
    svc_Prefetch(20, 28),
    /**
     * <code>svc_Menu = 29;</code>
     */
    svc_Menu(21, 29),
    /**
     * <code>svc_GameEventList = 30;</code>
     */
    svc_GameEventList(22, 30),
    /**
     * <code>svc_GetCvarValue = 31;</code>
     */
    svc_GetCvarValue(23, 31),
    /**
     * <code>svc_PacketReliable = 32;</code>
     */
    svc_PacketReliable(24, 32),
    /**
     * <code>svc_FullFrameSplit = 33;</code>
     */
    svc_FullFrameSplit(25, 33),
    ;

    /**
     * <code>svc_ServerInfo = 8;</code>
     */
    public static final int svc_ServerInfo_VALUE = 8;
    /**
     * <code>svc_SendTable = 9;</code>
     */
    public static final int svc_SendTable_VALUE = 9;
    /**
     * <code>svc_ClassInfo = 10;</code>
     */
    public static final int svc_ClassInfo_VALUE = 10;
    /**
     * <code>svc_SetPause = 11;</code>
     */
    public static final int svc_SetPause_VALUE = 11;
    /**
     * <code>svc_CreateStringTable = 12;</code>
     */
    public static final int svc_CreateStringTable_VALUE = 12;
    /**
     * <code>svc_UpdateStringTable = 13;</code>
     */
    public static final int svc_UpdateStringTable_VALUE = 13;
    /**
     * <code>svc_VoiceInit = 14;</code>
     */
    public static final int svc_VoiceInit_VALUE = 14;
    /**
     * <code>svc_VoiceData = 15;</code>
     */
    public static final int svc_VoiceData_VALUE = 15;
    /**
     * <code>svc_Print = 16;</code>
     */
    public static final int svc_Print_VALUE = 16;
    /**
     * <code>svc_Sounds = 17;</code>
     */
    public static final int svc_Sounds_VALUE = 17;
    /**
     * <code>svc_SetView = 18;</code>
     */
    public static final int svc_SetView_VALUE = 18;
    /**
     * <code>svc_FixAngle = 19;</code>
     */
    public static final int svc_FixAngle_VALUE = 19;
    /**
     * <code>svc_CrosshairAngle = 20;</code>
     */
    public static final int svc_CrosshairAngle_VALUE = 20;
    /**
     * <code>svc_BSPDecal = 21;</code>
     */
    public static final int svc_BSPDecal_VALUE = 21;
    /**
     * <code>svc_SplitScreen = 22;</code>
     */
    public static final int svc_SplitScreen_VALUE = 22;
    /**
     * <code>svc_UserMessage = 23;</code>
     */
    public static final int svc_UserMessage_VALUE = 23;
    /**
     * <code>svc_EntityMessage = 24;</code>
     */
    public static final int svc_EntityMessage_VALUE = 24;
    /**
     * <code>svc_GameEvent = 25;</code>
     */
    public static final int svc_GameEvent_VALUE = 25;
    /**
     * <code>svc_PacketEntities = 26;</code>
     */
    public static final int svc_PacketEntities_VALUE = 26;
    /**
     * <code>svc_TempEntities = 27;</code>
     */
    public static final int svc_TempEntities_VALUE = 27;
    /**
     * <code>svc_Prefetch = 28;</code>
     */
    public static final int svc_Prefetch_VALUE = 28;
    /**
     * <code>svc_Menu = 29;</code>
     */
    public static final int svc_Menu_VALUE = 29;
    /**
     * <code>svc_GameEventList = 30;</code>
     */
    public static final int svc_GameEventList_VALUE = 30;
    /**
     * <code>svc_GetCvarValue = 31;</code>
     */
    public static final int svc_GetCvarValue_VALUE = 31;
    /**
     * <code>svc_PacketReliable = 32;</code>
     */
    public static final int svc_PacketReliable_VALUE = 32;
    /**
     * <code>svc_FullFrameSplit = 33;</code>
     */
    public static final int svc_FullFrameSplit_VALUE = 33;


    public final int getNumber() { return value; }

    public static SVC_Messages valueOf(int value) {
      switch (value) {
        case 8: return svc_ServerInfo;
        case 9: return svc_SendTable;
        case 10: return svc_ClassInfo;
        case 11: return svc_SetPause;
        case 12: return svc_CreateStringTable;
        case 13: return svc_UpdateStringTable;
        case 14: return svc_VoiceInit;
        case 15: return svc_VoiceData;
        case 16: return svc_Print;
        case 17: return svc_Sounds;
        case 18: return svc_SetView;
        case 19: return svc_FixAngle;
        case 20: return svc_CrosshairAngle;
        case 21: return svc_BSPDecal;
        case 22: return svc_SplitScreen;
        case 23: return svc_UserMessage;
        case 24: return svc_EntityMessage;
        case 25: return svc_GameEvent;
        case 26: return svc_PacketEntities;
        case 27: return svc_TempEntities;
        case 28: return svc_Prefetch;
        case 29: return svc_Menu;
        case 30: return svc_GameEventList;
        case 31: return svc_GetCvarValue;
        case 32: return svc_PacketReliable;
        case 33: return svc_FullFrameSplit;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>() {
            public SVC_Messages findValueByNumber(int number) {
              return SVC_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s1.proto.DOTAS1MessageId.getDescriptor().getEnumTypes().get(1);
    }

    private static final SVC_Messages[] VALUES = values();

    public static SVC_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SVC_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SVC_Messages)
  }

  /**
   * Protobuf enum {@code EBaseUserMessages}
   */
  public enum EBaseUserMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UM_AchievementEvent = 1;</code>
     */
    UM_AchievementEvent(0, 1),
    /**
     * <code>UM_CloseCaption = 2;</code>
     */
    UM_CloseCaption(1, 2),
    /**
     * <code>UM_CloseCaptionDirect = 3;</code>
     */
    UM_CloseCaptionDirect(2, 3),
    /**
     * <code>UM_CurrentTimescale = 4;</code>
     */
    UM_CurrentTimescale(3, 4),
    /**
     * <code>UM_DesiredTimescale = 5;</code>
     */
    UM_DesiredTimescale(4, 5),
    /**
     * <code>UM_Fade = 6;</code>
     */
    UM_Fade(5, 6),
    /**
     * <code>UM_GameTitle = 7;</code>
     */
    UM_GameTitle(6, 7),
    /**
     * <code>UM_Geiger = 8;</code>
     */
    UM_Geiger(7, 8),
    /**
     * <code>UM_HintText = 9;</code>
     */
    UM_HintText(8, 9),
    /**
     * <code>UM_HudMsg = 10;</code>
     */
    UM_HudMsg(9, 10),
    /**
     * <code>UM_HudText = 11;</code>
     */
    UM_HudText(10, 11),
    /**
     * <code>UM_KeyHintText = 12;</code>
     */
    UM_KeyHintText(11, 12),
    /**
     * <code>UM_MessageText = 13;</code>
     */
    UM_MessageText(12, 13),
    /**
     * <code>UM_RequestState = 14;</code>
     */
    UM_RequestState(13, 14),
    /**
     * <code>UM_ResetHUD = 15;</code>
     */
    UM_ResetHUD(14, 15),
    /**
     * <code>UM_Rumble = 16;</code>
     */
    UM_Rumble(15, 16),
    /**
     * <code>UM_SayText = 17;</code>
     */
    UM_SayText(16, 17),
    /**
     * <code>UM_SayText2 = 18;</code>
     */
    UM_SayText2(17, 18),
    /**
     * <code>UM_SayTextChannel = 19;</code>
     */
    UM_SayTextChannel(18, 19),
    /**
     * <code>UM_Shake = 20;</code>
     */
    UM_Shake(19, 20),
    /**
     * <code>UM_ShakeDir = 21;</code>
     */
    UM_ShakeDir(20, 21),
    /**
     * <code>UM_StatsCrawlMsg = 22;</code>
     */
    UM_StatsCrawlMsg(21, 22),
    /**
     * <code>UM_StatsSkipState = 23;</code>
     */
    UM_StatsSkipState(22, 23),
    /**
     * <code>UM_TextMsg = 24;</code>
     */
    UM_TextMsg(23, 24),
    /**
     * <code>UM_Tilt = 25;</code>
     */
    UM_Tilt(24, 25),
    /**
     * <code>UM_Train = 26;</code>
     */
    UM_Train(25, 26),
    /**
     * <code>UM_VGUIMenu = 27;</code>
     */
    UM_VGUIMenu(26, 27),
    /**
     * <code>UM_VoiceMask = 28;</code>
     */
    UM_VoiceMask(27, 28),
    /**
     * <code>UM_VoiceSubtitle = 29;</code>
     */
    UM_VoiceSubtitle(28, 29),
    /**
     * <code>UM_SendAudio = 30;</code>
     */
    UM_SendAudio(29, 30),
    /**
     * <code>UM_CameraTransition = 31;</code>
     */
    UM_CameraTransition(30, 31),
    /**
     * <code>UM_MAX_BASE = 63;</code>
     */
    UM_MAX_BASE(31, 63),
    ;

    /**
     * <code>UM_AchievementEvent = 1;</code>
     */
    public static final int UM_AchievementEvent_VALUE = 1;
    /**
     * <code>UM_CloseCaption = 2;</code>
     */
    public static final int UM_CloseCaption_VALUE = 2;
    /**
     * <code>UM_CloseCaptionDirect = 3;</code>
     */
    public static final int UM_CloseCaptionDirect_VALUE = 3;
    /**
     * <code>UM_CurrentTimescale = 4;</code>
     */
    public static final int UM_CurrentTimescale_VALUE = 4;
    /**
     * <code>UM_DesiredTimescale = 5;</code>
     */
    public static final int UM_DesiredTimescale_VALUE = 5;
    /**
     * <code>UM_Fade = 6;</code>
     */
    public static final int UM_Fade_VALUE = 6;
    /**
     * <code>UM_GameTitle = 7;</code>
     */
    public static final int UM_GameTitle_VALUE = 7;
    /**
     * <code>UM_Geiger = 8;</code>
     */
    public static final int UM_Geiger_VALUE = 8;
    /**
     * <code>UM_HintText = 9;</code>
     */
    public static final int UM_HintText_VALUE = 9;
    /**
     * <code>UM_HudMsg = 10;</code>
     */
    public static final int UM_HudMsg_VALUE = 10;
    /**
     * <code>UM_HudText = 11;</code>
     */
    public static final int UM_HudText_VALUE = 11;
    /**
     * <code>UM_KeyHintText = 12;</code>
     */
    public static final int UM_KeyHintText_VALUE = 12;
    /**
     * <code>UM_MessageText = 13;</code>
     */
    public static final int UM_MessageText_VALUE = 13;
    /**
     * <code>UM_RequestState = 14;</code>
     */
    public static final int UM_RequestState_VALUE = 14;
    /**
     * <code>UM_ResetHUD = 15;</code>
     */
    public static final int UM_ResetHUD_VALUE = 15;
    /**
     * <code>UM_Rumble = 16;</code>
     */
    public static final int UM_Rumble_VALUE = 16;
    /**
     * <code>UM_SayText = 17;</code>
     */
    public static final int UM_SayText_VALUE = 17;
    /**
     * <code>UM_SayText2 = 18;</code>
     */
    public static final int UM_SayText2_VALUE = 18;
    /**
     * <code>UM_SayTextChannel = 19;</code>
     */
    public static final int UM_SayTextChannel_VALUE = 19;
    /**
     * <code>UM_Shake = 20;</code>
     */
    public static final int UM_Shake_VALUE = 20;
    /**
     * <code>UM_ShakeDir = 21;</code>
     */
    public static final int UM_ShakeDir_VALUE = 21;
    /**
     * <code>UM_StatsCrawlMsg = 22;</code>
     */
    public static final int UM_StatsCrawlMsg_VALUE = 22;
    /**
     * <code>UM_StatsSkipState = 23;</code>
     */
    public static final int UM_StatsSkipState_VALUE = 23;
    /**
     * <code>UM_TextMsg = 24;</code>
     */
    public static final int UM_TextMsg_VALUE = 24;
    /**
     * <code>UM_Tilt = 25;</code>
     */
    public static final int UM_Tilt_VALUE = 25;
    /**
     * <code>UM_Train = 26;</code>
     */
    public static final int UM_Train_VALUE = 26;
    /**
     * <code>UM_VGUIMenu = 27;</code>
     */
    public static final int UM_VGUIMenu_VALUE = 27;
    /**
     * <code>UM_VoiceMask = 28;</code>
     */
    public static final int UM_VoiceMask_VALUE = 28;
    /**
     * <code>UM_VoiceSubtitle = 29;</code>
     */
    public static final int UM_VoiceSubtitle_VALUE = 29;
    /**
     * <code>UM_SendAudio = 30;</code>
     */
    public static final int UM_SendAudio_VALUE = 30;
    /**
     * <code>UM_CameraTransition = 31;</code>
     */
    public static final int UM_CameraTransition_VALUE = 31;
    /**
     * <code>UM_MAX_BASE = 63;</code>
     */
    public static final int UM_MAX_BASE_VALUE = 63;


    public final int getNumber() { return value; }

    public static EBaseUserMessages valueOf(int value) {
      switch (value) {
        case 1: return UM_AchievementEvent;
        case 2: return UM_CloseCaption;
        case 3: return UM_CloseCaptionDirect;
        case 4: return UM_CurrentTimescale;
        case 5: return UM_DesiredTimescale;
        case 6: return UM_Fade;
        case 7: return UM_GameTitle;
        case 8: return UM_Geiger;
        case 9: return UM_HintText;
        case 10: return UM_HudMsg;
        case 11: return UM_HudText;
        case 12: return UM_KeyHintText;
        case 13: return UM_MessageText;
        case 14: return UM_RequestState;
        case 15: return UM_ResetHUD;
        case 16: return UM_Rumble;
        case 17: return UM_SayText;
        case 18: return UM_SayText2;
        case 19: return UM_SayTextChannel;
        case 20: return UM_Shake;
        case 21: return UM_ShakeDir;
        case 22: return UM_StatsCrawlMsg;
        case 23: return UM_StatsSkipState;
        case 24: return UM_TextMsg;
        case 25: return UM_Tilt;
        case 26: return UM_Train;
        case 27: return UM_VGUIMenu;
        case 28: return UM_VoiceMask;
        case 29: return UM_VoiceSubtitle;
        case 30: return UM_SendAudio;
        case 31: return UM_CameraTransition;
        case 63: return UM_MAX_BASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EBaseUserMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EBaseUserMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EBaseUserMessages>() {
            public EBaseUserMessages findValueByNumber(int number) {
              return EBaseUserMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s1.proto.DOTAS1MessageId.getDescriptor().getEnumTypes().get(2);
    }

    private static final EBaseUserMessages[] VALUES = values();

    public static EBaseUserMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EBaseUserMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EBaseUserMessages)
  }

  /**
   * Protobuf enum {@code EDotaUserMessages}
   */
  public enum EDotaUserMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_UM_AddUnitToSelection = 64;</code>
     */
    DOTA_UM_AddUnitToSelection(0, 64),
    /**
     * <code>DOTA_UM_AIDebugLine = 65;</code>
     */
    DOTA_UM_AIDebugLine(1, 65),
    /**
     * <code>DOTA_UM_ChatEvent = 66;</code>
     */
    DOTA_UM_ChatEvent(2, 66),
    /**
     * <code>DOTA_UM_CombatHeroPositions = 67;</code>
     */
    DOTA_UM_CombatHeroPositions(3, 67),
    /**
     * <code>DOTA_UM_CombatLogData = 68;</code>
     */
    DOTA_UM_CombatLogData(4, 68),
    /**
     * <code>DOTA_UM_CombatLogShowDeath = 70;</code>
     */
    DOTA_UM_CombatLogShowDeath(5, 70),
    /**
     * <code>DOTA_UM_CreateLinearProjectile = 71;</code>
     */
    DOTA_UM_CreateLinearProjectile(6, 71),
    /**
     * <code>DOTA_UM_DestroyLinearProjectile = 72;</code>
     */
    DOTA_UM_DestroyLinearProjectile(7, 72),
    /**
     * <code>DOTA_UM_DodgeTrackingProjectiles = 73;</code>
     */
    DOTA_UM_DodgeTrackingProjectiles(8, 73),
    /**
     * <code>DOTA_UM_GlobalLightColor = 74;</code>
     */
    DOTA_UM_GlobalLightColor(9, 74),
    /**
     * <code>DOTA_UM_GlobalLightDirection = 75;</code>
     */
    DOTA_UM_GlobalLightDirection(10, 75),
    /**
     * <code>DOTA_UM_InvalidCommand = 76;</code>
     */
    DOTA_UM_InvalidCommand(11, 76),
    /**
     * <code>DOTA_UM_LocationPing = 77;</code>
     */
    DOTA_UM_LocationPing(12, 77),
    /**
     * <code>DOTA_UM_MapLine = 78;</code>
     */
    DOTA_UM_MapLine(13, 78),
    /**
     * <code>DOTA_UM_MiniKillCamInfo = 79;</code>
     */
    DOTA_UM_MiniKillCamInfo(14, 79),
    /**
     * <code>DOTA_UM_MinimapDebugPoint = 80;</code>
     */
    DOTA_UM_MinimapDebugPoint(15, 80),
    /**
     * <code>DOTA_UM_MinimapEvent = 81;</code>
     */
    DOTA_UM_MinimapEvent(16, 81),
    /**
     * <code>DOTA_UM_NevermoreRequiem = 82;</code>
     */
    DOTA_UM_NevermoreRequiem(17, 82),
    /**
     * <code>DOTA_UM_OverheadEvent = 83;</code>
     */
    DOTA_UM_OverheadEvent(18, 83),
    /**
     * <code>DOTA_UM_SetNextAutobuyItem = 84;</code>
     */
    DOTA_UM_SetNextAutobuyItem(19, 84),
    /**
     * <code>DOTA_UM_SharedCooldown = 85;</code>
     */
    DOTA_UM_SharedCooldown(20, 85),
    /**
     * <code>DOTA_UM_SpectatorPlayerClick = 86;</code>
     */
    DOTA_UM_SpectatorPlayerClick(21, 86),
    /**
     * <code>DOTA_UM_TutorialTipInfo = 87;</code>
     */
    DOTA_UM_TutorialTipInfo(22, 87),
    /**
     * <code>DOTA_UM_UnitEvent = 88;</code>
     */
    DOTA_UM_UnitEvent(23, 88),
    /**
     * <code>DOTA_UM_ParticleManager = 89;</code>
     */
    DOTA_UM_ParticleManager(24, 89),
    /**
     * <code>DOTA_UM_BotChat = 90;</code>
     */
    DOTA_UM_BotChat(25, 90),
    /**
     * <code>DOTA_UM_HudError = 91;</code>
     */
    DOTA_UM_HudError(26, 91),
    /**
     * <code>DOTA_UM_ItemPurchased = 92;</code>
     */
    DOTA_UM_ItemPurchased(27, 92),
    /**
     * <code>DOTA_UM_Ping = 93;</code>
     */
    DOTA_UM_Ping(28, 93),
    /**
     * <code>DOTA_UM_ItemFound = 94;</code>
     */
    DOTA_UM_ItemFound(29, 94),
    /**
     * <code>DOTA_UM_CharacterSpeakConcept = 95;</code>
     */
    DOTA_UM_CharacterSpeakConcept(30, 95),
    /**
     * <code>DOTA_UM_SwapVerify = 96;</code>
     */
    DOTA_UM_SwapVerify(31, 96),
    /**
     * <code>DOTA_UM_WorldLine = 97;</code>
     */
    DOTA_UM_WorldLine(32, 97),
    /**
     * <code>DOTA_UM_TournamentDrop = 98;</code>
     */
    DOTA_UM_TournamentDrop(33, 98),
    /**
     * <code>DOTA_UM_ItemAlert = 99;</code>
     */
    DOTA_UM_ItemAlert(34, 99),
    /**
     * <code>DOTA_UM_HalloweenDrops = 100;</code>
     */
    DOTA_UM_HalloweenDrops(35, 100),
    /**
     * <code>DOTA_UM_ChatWheel = 101;</code>
     */
    DOTA_UM_ChatWheel(36, 101),
    /**
     * <code>DOTA_UM_ReceivedXmasGift = 102;</code>
     */
    DOTA_UM_ReceivedXmasGift(37, 102),
    /**
     * <code>DOTA_UM_UpdateSharedContent = 103;</code>
     */
    DOTA_UM_UpdateSharedContent(38, 103),
    /**
     * <code>DOTA_UM_TutorialRequestExp = 104;</code>
     */
    DOTA_UM_TutorialRequestExp(39, 104),
    /**
     * <code>DOTA_UM_TutorialPingMinimap = 105;</code>
     */
    DOTA_UM_TutorialPingMinimap(40, 105),
    /**
     * <code>DOTA_UM_GamerulesStateChanged = 106;</code>
     */
    DOTA_UM_GamerulesStateChanged(41, 106),
    /**
     * <code>DOTA_UM_ShowSurvey = 107;</code>
     */
    DOTA_UM_ShowSurvey(42, 107),
    /**
     * <code>DOTA_UM_TutorialFade = 108;</code>
     */
    DOTA_UM_TutorialFade(43, 108),
    /**
     * <code>DOTA_UM_AddQuestLogEntry = 109;</code>
     */
    DOTA_UM_AddQuestLogEntry(44, 109),
    /**
     * <code>DOTA_UM_SendStatPopup = 110;</code>
     */
    DOTA_UM_SendStatPopup(45, 110),
    /**
     * <code>DOTA_UM_TutorialFinish = 111;</code>
     */
    DOTA_UM_TutorialFinish(46, 111),
    /**
     * <code>DOTA_UM_SendRoshanPopup = 112;</code>
     */
    DOTA_UM_SendRoshanPopup(47, 112),
    /**
     * <code>DOTA_UM_SendGenericToolTip = 113;</code>
     */
    DOTA_UM_SendGenericToolTip(48, 113),
    /**
     * <code>DOTA_UM_SendFinalGold = 114;</code>
     */
    DOTA_UM_SendFinalGold(49, 114),
    /**
     * <code>DOTA_UM_CustomMsg = 115;</code>
     */
    DOTA_UM_CustomMsg(50, 115),
    /**
     * <code>DOTA_UM_CoachHUDPing = 116;</code>
     */
    DOTA_UM_CoachHUDPing(51, 116),
    /**
     * <code>DOTA_UM_ClientLoadGridNav = 117;</code>
     */
    DOTA_UM_ClientLoadGridNav(52, 117),
    /**
     * <code>DOTA_UM_AbilityPing = 118;</code>
     */
    DOTA_UM_AbilityPing(53, 118),
    /**
     * <code>DOTA_UM_ShowGenericPopup = 119;</code>
     */
    DOTA_UM_ShowGenericPopup(54, 119),
    /**
     * <code>DOTA_UM_VoteStart = 120;</code>
     */
    DOTA_UM_VoteStart(55, 120),
    /**
     * <code>DOTA_UM_VoteUpdate = 121;</code>
     */
    DOTA_UM_VoteUpdate(56, 121),
    /**
     * <code>DOTA_UM_VoteEnd = 122;</code>
     */
    DOTA_UM_VoteEnd(57, 122),
    /**
     * <code>DOTA_UM_BoosterState = 123;</code>
     */
    DOTA_UM_BoosterState(58, 123),
    /**
     * <code>DOTA_UM_WillPurchaseAlert = 124;</code>
     */
    DOTA_UM_WillPurchaseAlert(59, 124),
    /**
     * <code>DOTA_UM_TutorialMinimapPosition = 125;</code>
     */
    DOTA_UM_TutorialMinimapPosition(60, 125),
    /**
     * <code>DOTA_UM_PlayerMMR = 126;</code>
     */
    DOTA_UM_PlayerMMR(61, 126),
    /**
     * <code>DOTA_UM_AbilitySteal = 127;</code>
     */
    DOTA_UM_AbilitySteal(62, 127),
    /**
     * <code>DOTA_UM_CourierKilledAlert = 128;</code>
     */
    DOTA_UM_CourierKilledAlert(63, 128),
    /**
     * <code>DOTA_UM_EnemyItemAlert = 129;</code>
     */
    DOTA_UM_EnemyItemAlert(64, 129),
    /**
     * <code>DOTA_UM_StatsMatchDetails = 130;</code>
     */
    DOTA_UM_StatsMatchDetails(65, 130),
    /**
     * <code>DOTA_UM_MiniTaunt = 131;</code>
     */
    DOTA_UM_MiniTaunt(66, 131),
    /**
     * <code>DOTA_UM_BuyBackStateAlert = 132;</code>
     */
    DOTA_UM_BuyBackStateAlert(67, 132),
    /**
     * <code>DOTA_UM_QuickBuyAlert = 133;</code>
     */
    DOTA_UM_QuickBuyAlert(68, 133),
    /**
     * <code>DOTA_UM_StatsHeroDetails = 134;</code>
     */
    DOTA_UM_StatsHeroDetails(69, 134),
    /**
     * <code>DOTA_UM_PredictionResult = 135;</code>
     */
    DOTA_UM_PredictionResult(70, 135),
    /**
     * <code>DOTA_UM_ModifierAlert = 136;</code>
     */
    DOTA_UM_ModifierAlert(71, 136),
    /**
     * <code>DOTA_UM_HPManaAlert = 137;</code>
     */
    DOTA_UM_HPManaAlert(72, 137),
    /**
     * <code>DOTA_UM_GlyphAlert = 138;</code>
     */
    DOTA_UM_GlyphAlert(73, 138),
    /**
     * <code>DOTA_UM_BeastChat = 139;</code>
     */
    DOTA_UM_BeastChat(74, 139),
    /**
     * <code>DOTA_UM_SpectatorPlayerUnitOrders = 140;</code>
     */
    DOTA_UM_SpectatorPlayerUnitOrders(75, 140),
    /**
     * <code>DOTA_UM_CompendiumState = 141;</code>
     */
    DOTA_UM_CompendiumState(76, 141),
    /**
     * <code>DOTA_UM_ProjectionAbility = 142;</code>
     */
    DOTA_UM_ProjectionAbility(77, 142),
    /**
     * <code>DOTA_UM_ProjectionEvent = 143;</code>
     */
    DOTA_UM_ProjectionEvent(78, 143),
    ;

    /**
     * <code>DOTA_UM_AddUnitToSelection = 64;</code>
     */
    public static final int DOTA_UM_AddUnitToSelection_VALUE = 64;
    /**
     * <code>DOTA_UM_AIDebugLine = 65;</code>
     */
    public static final int DOTA_UM_AIDebugLine_VALUE = 65;
    /**
     * <code>DOTA_UM_ChatEvent = 66;</code>
     */
    public static final int DOTA_UM_ChatEvent_VALUE = 66;
    /**
     * <code>DOTA_UM_CombatHeroPositions = 67;</code>
     */
    public static final int DOTA_UM_CombatHeroPositions_VALUE = 67;
    /**
     * <code>DOTA_UM_CombatLogData = 68;</code>
     */
    public static final int DOTA_UM_CombatLogData_VALUE = 68;
    /**
     * <code>DOTA_UM_CombatLogShowDeath = 70;</code>
     */
    public static final int DOTA_UM_CombatLogShowDeath_VALUE = 70;
    /**
     * <code>DOTA_UM_CreateLinearProjectile = 71;</code>
     */
    public static final int DOTA_UM_CreateLinearProjectile_VALUE = 71;
    /**
     * <code>DOTA_UM_DestroyLinearProjectile = 72;</code>
     */
    public static final int DOTA_UM_DestroyLinearProjectile_VALUE = 72;
    /**
     * <code>DOTA_UM_DodgeTrackingProjectiles = 73;</code>
     */
    public static final int DOTA_UM_DodgeTrackingProjectiles_VALUE = 73;
    /**
     * <code>DOTA_UM_GlobalLightColor = 74;</code>
     */
    public static final int DOTA_UM_GlobalLightColor_VALUE = 74;
    /**
     * <code>DOTA_UM_GlobalLightDirection = 75;</code>
     */
    public static final int DOTA_UM_GlobalLightDirection_VALUE = 75;
    /**
     * <code>DOTA_UM_InvalidCommand = 76;</code>
     */
    public static final int DOTA_UM_InvalidCommand_VALUE = 76;
    /**
     * <code>DOTA_UM_LocationPing = 77;</code>
     */
    public static final int DOTA_UM_LocationPing_VALUE = 77;
    /**
     * <code>DOTA_UM_MapLine = 78;</code>
     */
    public static final int DOTA_UM_MapLine_VALUE = 78;
    /**
     * <code>DOTA_UM_MiniKillCamInfo = 79;</code>
     */
    public static final int DOTA_UM_MiniKillCamInfo_VALUE = 79;
    /**
     * <code>DOTA_UM_MinimapDebugPoint = 80;</code>
     */
    public static final int DOTA_UM_MinimapDebugPoint_VALUE = 80;
    /**
     * <code>DOTA_UM_MinimapEvent = 81;</code>
     */
    public static final int DOTA_UM_MinimapEvent_VALUE = 81;
    /**
     * <code>DOTA_UM_NevermoreRequiem = 82;</code>
     */
    public static final int DOTA_UM_NevermoreRequiem_VALUE = 82;
    /**
     * <code>DOTA_UM_OverheadEvent = 83;</code>
     */
    public static final int DOTA_UM_OverheadEvent_VALUE = 83;
    /**
     * <code>DOTA_UM_SetNextAutobuyItem = 84;</code>
     */
    public static final int DOTA_UM_SetNextAutobuyItem_VALUE = 84;
    /**
     * <code>DOTA_UM_SharedCooldown = 85;</code>
     */
    public static final int DOTA_UM_SharedCooldown_VALUE = 85;
    /**
     * <code>DOTA_UM_SpectatorPlayerClick = 86;</code>
     */
    public static final int DOTA_UM_SpectatorPlayerClick_VALUE = 86;
    /**
     * <code>DOTA_UM_TutorialTipInfo = 87;</code>
     */
    public static final int DOTA_UM_TutorialTipInfo_VALUE = 87;
    /**
     * <code>DOTA_UM_UnitEvent = 88;</code>
     */
    public static final int DOTA_UM_UnitEvent_VALUE = 88;
    /**
     * <code>DOTA_UM_ParticleManager = 89;</code>
     */
    public static final int DOTA_UM_ParticleManager_VALUE = 89;
    /**
     * <code>DOTA_UM_BotChat = 90;</code>
     */
    public static final int DOTA_UM_BotChat_VALUE = 90;
    /**
     * <code>DOTA_UM_HudError = 91;</code>
     */
    public static final int DOTA_UM_HudError_VALUE = 91;
    /**
     * <code>DOTA_UM_ItemPurchased = 92;</code>
     */
    public static final int DOTA_UM_ItemPurchased_VALUE = 92;
    /**
     * <code>DOTA_UM_Ping = 93;</code>
     */
    public static final int DOTA_UM_Ping_VALUE = 93;
    /**
     * <code>DOTA_UM_ItemFound = 94;</code>
     */
    public static final int DOTA_UM_ItemFound_VALUE = 94;
    /**
     * <code>DOTA_UM_CharacterSpeakConcept = 95;</code>
     */
    public static final int DOTA_UM_CharacterSpeakConcept_VALUE = 95;
    /**
     * <code>DOTA_UM_SwapVerify = 96;</code>
     */
    public static final int DOTA_UM_SwapVerify_VALUE = 96;
    /**
     * <code>DOTA_UM_WorldLine = 97;</code>
     */
    public static final int DOTA_UM_WorldLine_VALUE = 97;
    /**
     * <code>DOTA_UM_TournamentDrop = 98;</code>
     */
    public static final int DOTA_UM_TournamentDrop_VALUE = 98;
    /**
     * <code>DOTA_UM_ItemAlert = 99;</code>
     */
    public static final int DOTA_UM_ItemAlert_VALUE = 99;
    /**
     * <code>DOTA_UM_HalloweenDrops = 100;</code>
     */
    public static final int DOTA_UM_HalloweenDrops_VALUE = 100;
    /**
     * <code>DOTA_UM_ChatWheel = 101;</code>
     */
    public static final int DOTA_UM_ChatWheel_VALUE = 101;
    /**
     * <code>DOTA_UM_ReceivedXmasGift = 102;</code>
     */
    public static final int DOTA_UM_ReceivedXmasGift_VALUE = 102;
    /**
     * <code>DOTA_UM_UpdateSharedContent = 103;</code>
     */
    public static final int DOTA_UM_UpdateSharedContent_VALUE = 103;
    /**
     * <code>DOTA_UM_TutorialRequestExp = 104;</code>
     */
    public static final int DOTA_UM_TutorialRequestExp_VALUE = 104;
    /**
     * <code>DOTA_UM_TutorialPingMinimap = 105;</code>
     */
    public static final int DOTA_UM_TutorialPingMinimap_VALUE = 105;
    /**
     * <code>DOTA_UM_GamerulesStateChanged = 106;</code>
     */
    public static final int DOTA_UM_GamerulesStateChanged_VALUE = 106;
    /**
     * <code>DOTA_UM_ShowSurvey = 107;</code>
     */
    public static final int DOTA_UM_ShowSurvey_VALUE = 107;
    /**
     * <code>DOTA_UM_TutorialFade = 108;</code>
     */
    public static final int DOTA_UM_TutorialFade_VALUE = 108;
    /**
     * <code>DOTA_UM_AddQuestLogEntry = 109;</code>
     */
    public static final int DOTA_UM_AddQuestLogEntry_VALUE = 109;
    /**
     * <code>DOTA_UM_SendStatPopup = 110;</code>
     */
    public static final int DOTA_UM_SendStatPopup_VALUE = 110;
    /**
     * <code>DOTA_UM_TutorialFinish = 111;</code>
     */
    public static final int DOTA_UM_TutorialFinish_VALUE = 111;
    /**
     * <code>DOTA_UM_SendRoshanPopup = 112;</code>
     */
    public static final int DOTA_UM_SendRoshanPopup_VALUE = 112;
    /**
     * <code>DOTA_UM_SendGenericToolTip = 113;</code>
     */
    public static final int DOTA_UM_SendGenericToolTip_VALUE = 113;
    /**
     * <code>DOTA_UM_SendFinalGold = 114;</code>
     */
    public static final int DOTA_UM_SendFinalGold_VALUE = 114;
    /**
     * <code>DOTA_UM_CustomMsg = 115;</code>
     */
    public static final int DOTA_UM_CustomMsg_VALUE = 115;
    /**
     * <code>DOTA_UM_CoachHUDPing = 116;</code>
     */
    public static final int DOTA_UM_CoachHUDPing_VALUE = 116;
    /**
     * <code>DOTA_UM_ClientLoadGridNav = 117;</code>
     */
    public static final int DOTA_UM_ClientLoadGridNav_VALUE = 117;
    /**
     * <code>DOTA_UM_AbilityPing = 118;</code>
     */
    public static final int DOTA_UM_AbilityPing_VALUE = 118;
    /**
     * <code>DOTA_UM_ShowGenericPopup = 119;</code>
     */
    public static final int DOTA_UM_ShowGenericPopup_VALUE = 119;
    /**
     * <code>DOTA_UM_VoteStart = 120;</code>
     */
    public static final int DOTA_UM_VoteStart_VALUE = 120;
    /**
     * <code>DOTA_UM_VoteUpdate = 121;</code>
     */
    public static final int DOTA_UM_VoteUpdate_VALUE = 121;
    /**
     * <code>DOTA_UM_VoteEnd = 122;</code>
     */
    public static final int DOTA_UM_VoteEnd_VALUE = 122;
    /**
     * <code>DOTA_UM_BoosterState = 123;</code>
     */
    public static final int DOTA_UM_BoosterState_VALUE = 123;
    /**
     * <code>DOTA_UM_WillPurchaseAlert = 124;</code>
     */
    public static final int DOTA_UM_WillPurchaseAlert_VALUE = 124;
    /**
     * <code>DOTA_UM_TutorialMinimapPosition = 125;</code>
     */
    public static final int DOTA_UM_TutorialMinimapPosition_VALUE = 125;
    /**
     * <code>DOTA_UM_PlayerMMR = 126;</code>
     */
    public static final int DOTA_UM_PlayerMMR_VALUE = 126;
    /**
     * <code>DOTA_UM_AbilitySteal = 127;</code>
     */
    public static final int DOTA_UM_AbilitySteal_VALUE = 127;
    /**
     * <code>DOTA_UM_CourierKilledAlert = 128;</code>
     */
    public static final int DOTA_UM_CourierKilledAlert_VALUE = 128;
    /**
     * <code>DOTA_UM_EnemyItemAlert = 129;</code>
     */
    public static final int DOTA_UM_EnemyItemAlert_VALUE = 129;
    /**
     * <code>DOTA_UM_StatsMatchDetails = 130;</code>
     */
    public static final int DOTA_UM_StatsMatchDetails_VALUE = 130;
    /**
     * <code>DOTA_UM_MiniTaunt = 131;</code>
     */
    public static final int DOTA_UM_MiniTaunt_VALUE = 131;
    /**
     * <code>DOTA_UM_BuyBackStateAlert = 132;</code>
     */
    public static final int DOTA_UM_BuyBackStateAlert_VALUE = 132;
    /**
     * <code>DOTA_UM_QuickBuyAlert = 133;</code>
     */
    public static final int DOTA_UM_QuickBuyAlert_VALUE = 133;
    /**
     * <code>DOTA_UM_StatsHeroDetails = 134;</code>
     */
    public static final int DOTA_UM_StatsHeroDetails_VALUE = 134;
    /**
     * <code>DOTA_UM_PredictionResult = 135;</code>
     */
    public static final int DOTA_UM_PredictionResult_VALUE = 135;
    /**
     * <code>DOTA_UM_ModifierAlert = 136;</code>
     */
    public static final int DOTA_UM_ModifierAlert_VALUE = 136;
    /**
     * <code>DOTA_UM_HPManaAlert = 137;</code>
     */
    public static final int DOTA_UM_HPManaAlert_VALUE = 137;
    /**
     * <code>DOTA_UM_GlyphAlert = 138;</code>
     */
    public static final int DOTA_UM_GlyphAlert_VALUE = 138;
    /**
     * <code>DOTA_UM_BeastChat = 139;</code>
     */
    public static final int DOTA_UM_BeastChat_VALUE = 139;
    /**
     * <code>DOTA_UM_SpectatorPlayerUnitOrders = 140;</code>
     */
    public static final int DOTA_UM_SpectatorPlayerUnitOrders_VALUE = 140;
    /**
     * <code>DOTA_UM_CompendiumState = 141;</code>
     */
    public static final int DOTA_UM_CompendiumState_VALUE = 141;
    /**
     * <code>DOTA_UM_ProjectionAbility = 142;</code>
     */
    public static final int DOTA_UM_ProjectionAbility_VALUE = 142;
    /**
     * <code>DOTA_UM_ProjectionEvent = 143;</code>
     */
    public static final int DOTA_UM_ProjectionEvent_VALUE = 143;


    public final int getNumber() { return value; }

    public static EDotaUserMessages valueOf(int value) {
      switch (value) {
        case 64: return DOTA_UM_AddUnitToSelection;
        case 65: return DOTA_UM_AIDebugLine;
        case 66: return DOTA_UM_ChatEvent;
        case 67: return DOTA_UM_CombatHeroPositions;
        case 68: return DOTA_UM_CombatLogData;
        case 70: return DOTA_UM_CombatLogShowDeath;
        case 71: return DOTA_UM_CreateLinearProjectile;
        case 72: return DOTA_UM_DestroyLinearProjectile;
        case 73: return DOTA_UM_DodgeTrackingProjectiles;
        case 74: return DOTA_UM_GlobalLightColor;
        case 75: return DOTA_UM_GlobalLightDirection;
        case 76: return DOTA_UM_InvalidCommand;
        case 77: return DOTA_UM_LocationPing;
        case 78: return DOTA_UM_MapLine;
        case 79: return DOTA_UM_MiniKillCamInfo;
        case 80: return DOTA_UM_MinimapDebugPoint;
        case 81: return DOTA_UM_MinimapEvent;
        case 82: return DOTA_UM_NevermoreRequiem;
        case 83: return DOTA_UM_OverheadEvent;
        case 84: return DOTA_UM_SetNextAutobuyItem;
        case 85: return DOTA_UM_SharedCooldown;
        case 86: return DOTA_UM_SpectatorPlayerClick;
        case 87: return DOTA_UM_TutorialTipInfo;
        case 88: return DOTA_UM_UnitEvent;
        case 89: return DOTA_UM_ParticleManager;
        case 90: return DOTA_UM_BotChat;
        case 91: return DOTA_UM_HudError;
        case 92: return DOTA_UM_ItemPurchased;
        case 93: return DOTA_UM_Ping;
        case 94: return DOTA_UM_ItemFound;
        case 95: return DOTA_UM_CharacterSpeakConcept;
        case 96: return DOTA_UM_SwapVerify;
        case 97: return DOTA_UM_WorldLine;
        case 98: return DOTA_UM_TournamentDrop;
        case 99: return DOTA_UM_ItemAlert;
        case 100: return DOTA_UM_HalloweenDrops;
        case 101: return DOTA_UM_ChatWheel;
        case 102: return DOTA_UM_ReceivedXmasGift;
        case 103: return DOTA_UM_UpdateSharedContent;
        case 104: return DOTA_UM_TutorialRequestExp;
        case 105: return DOTA_UM_TutorialPingMinimap;
        case 106: return DOTA_UM_GamerulesStateChanged;
        case 107: return DOTA_UM_ShowSurvey;
        case 108: return DOTA_UM_TutorialFade;
        case 109: return DOTA_UM_AddQuestLogEntry;
        case 110: return DOTA_UM_SendStatPopup;
        case 111: return DOTA_UM_TutorialFinish;
        case 112: return DOTA_UM_SendRoshanPopup;
        case 113: return DOTA_UM_SendGenericToolTip;
        case 114: return DOTA_UM_SendFinalGold;
        case 115: return DOTA_UM_CustomMsg;
        case 116: return DOTA_UM_CoachHUDPing;
        case 117: return DOTA_UM_ClientLoadGridNav;
        case 118: return DOTA_UM_AbilityPing;
        case 119: return DOTA_UM_ShowGenericPopup;
        case 120: return DOTA_UM_VoteStart;
        case 121: return DOTA_UM_VoteUpdate;
        case 122: return DOTA_UM_VoteEnd;
        case 123: return DOTA_UM_BoosterState;
        case 124: return DOTA_UM_WillPurchaseAlert;
        case 125: return DOTA_UM_TutorialMinimapPosition;
        case 126: return DOTA_UM_PlayerMMR;
        case 127: return DOTA_UM_AbilitySteal;
        case 128: return DOTA_UM_CourierKilledAlert;
        case 129: return DOTA_UM_EnemyItemAlert;
        case 130: return DOTA_UM_StatsMatchDetails;
        case 131: return DOTA_UM_MiniTaunt;
        case 132: return DOTA_UM_BuyBackStateAlert;
        case 133: return DOTA_UM_QuickBuyAlert;
        case 134: return DOTA_UM_StatsHeroDetails;
        case 135: return DOTA_UM_PredictionResult;
        case 136: return DOTA_UM_ModifierAlert;
        case 137: return DOTA_UM_HPManaAlert;
        case 138: return DOTA_UM_GlyphAlert;
        case 139: return DOTA_UM_BeastChat;
        case 140: return DOTA_UM_SpectatorPlayerUnitOrders;
        case 141: return DOTA_UM_CompendiumState;
        case 142: return DOTA_UM_ProjectionAbility;
        case 143: return DOTA_UM_ProjectionEvent;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>() {
            public EDotaUserMessages findValueByNumber(int number) {
              return EDotaUserMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s1.proto.DOTAS1MessageId.getDescriptor().getEnumTypes().get(3);
    }

    private static final EDotaUserMessages[] VALUES = values();

    public static EDotaUserMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDotaUserMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDotaUserMessages)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020message_id.proto*\216\003\n\014NET_Messages\022\013\n\007n" +
      "et_NOP\020\000\022\022\n\016net_Disconnect\020\001\022\014\n\010net_File" +
      "\020\002\022\027\n\023net_SplitScreenUser\020\003\022\014\n\010net_Tick\020" +
      "\004\022\021\n\rnet_StringCmd\020\005\022\021\n\rnet_SetConVar\020\006\022" +
      "\023\n\017net_SignonState\020\007\022\027\n\023net_SpawnGroup_L" +
      "oad\020\010\022!\n\035net_SpawnGroup_ManifestUpdate\020\t" +
      "\022\"\n\036net_SpawnGroup_SetCreationTick\020\013\022\031\n\025" +
      "net_SpawnGroup_Unload\020\014\022 \n\034net_SpawnGrou" +
      "p_LoadCompleted\020\r\022 \n\034net_ReliableMessage" +
      "EndMarker\020\016\022\024\n\020net_DebugOverlay\020\017\022\030\n\024net",
      "_PlayerAvatarData\020d*\241\004\n\014SVC_Messages\022\022\n\016" +
      "svc_ServerInfo\020\010\022\021\n\rsvc_SendTable\020\t\022\021\n\rs" +
      "vc_ClassInfo\020\n\022\020\n\014svc_SetPause\020\013\022\031\n\025svc_" +
      "CreateStringTable\020\014\022\031\n\025svc_UpdateStringT" +
      "able\020\r\022\021\n\rsvc_VoiceInit\020\016\022\021\n\rsvc_VoiceDa" +
      "ta\020\017\022\r\n\tsvc_Print\020\020\022\016\n\nsvc_Sounds\020\021\022\017\n\013s" +
      "vc_SetView\020\022\022\020\n\014svc_FixAngle\020\023\022\026\n\022svc_Cr" +
      "osshairAngle\020\024\022\020\n\014svc_BSPDecal\020\025\022\023\n\017svc_" +
      "SplitScreen\020\026\022\023\n\017svc_UserMessage\020\027\022\025\n\021sv" +
      "c_EntityMessage\020\030\022\021\n\rsvc_GameEvent\020\031\022\026\n\022",
      "svc_PacketEntities\020\032\022\024\n\020svc_TempEntities" +
      "\020\033\022\020\n\014svc_Prefetch\020\034\022\014\n\010svc_Menu\020\035\022\025\n\021sv" +
      "c_GameEventList\020\036\022\024\n\020svc_GetCvarValue\020\037\022" +
      "\026\n\022svc_PacketReliable\020 \022\026\n\022svc_FullFrame" +
      "Split\020!*\355\004\n\021EBaseUserMessages\022\027\n\023UM_Achi" +
      "evementEvent\020\001\022\023\n\017UM_CloseCaption\020\002\022\031\n\025U" +
      "M_CloseCaptionDirect\020\003\022\027\n\023UM_CurrentTime" +
      "scale\020\004\022\027\n\023UM_DesiredTimescale\020\005\022\013\n\007UM_F" +
      "ade\020\006\022\020\n\014UM_GameTitle\020\007\022\r\n\tUM_Geiger\020\010\022\017" +
      "\n\013UM_HintText\020\t\022\r\n\tUM_HudMsg\020\n\022\016\n\nUM_Hud",
      "Text\020\013\022\022\n\016UM_KeyHintText\020\014\022\022\n\016UM_Message" +
      "Text\020\r\022\023\n\017UM_RequestState\020\016\022\017\n\013UM_ResetH" +
      "UD\020\017\022\r\n\tUM_Rumble\020\020\022\016\n\nUM_SayText\020\021\022\017\n\013U" +
      "M_SayText2\020\022\022\025\n\021UM_SayTextChannel\020\023\022\014\n\010U" +
      "M_Shake\020\024\022\017\n\013UM_ShakeDir\020\025\022\024\n\020UM_StatsCr" +
      "awlMsg\020\026\022\025\n\021UM_StatsSkipState\020\027\022\016\n\nUM_Te" +
      "xtMsg\020\030\022\013\n\007UM_Tilt\020\031\022\014\n\010UM_Train\020\032\022\017\n\013UM" +
      "_VGUIMenu\020\033\022\020\n\014UM_VoiceMask\020\034\022\024\n\020UM_Voic" +
      "eSubtitle\020\035\022\020\n\014UM_SendAudio\020\036\022\027\n\023UM_Came" +
      "raTransition\020\037\022\017\n\013UM_MAX_BASE\020?*\325\021\n\021EDot",
      "aUserMessages\022\036\n\032DOTA_UM_AddUnitToSelect" +
      "ion\020@\022\027\n\023DOTA_UM_AIDebugLine\020A\022\025\n\021DOTA_U" +
      "M_ChatEvent\020B\022\037\n\033DOTA_UM_CombatHeroPosit" +
      "ions\020C\022\031\n\025DOTA_UM_CombatLogData\020D\022\036\n\032DOT" +
      "A_UM_CombatLogShowDeath\020F\022\"\n\036DOTA_UM_Cre" +
      "ateLinearProjectile\020G\022#\n\037DOTA_UM_Destroy" +
      "LinearProjectile\020H\022$\n DOTA_UM_DodgeTrack" +
      "ingProjectiles\020I\022\034\n\030DOTA_UM_GlobalLightC" +
      "olor\020J\022 \n\034DOTA_UM_GlobalLightDirection\020K" +
      "\022\032\n\026DOTA_UM_InvalidCommand\020L\022\030\n\024DOTA_UM_",
      "LocationPing\020M\022\023\n\017DOTA_UM_MapLine\020N\022\033\n\027D" +
      "OTA_UM_MiniKillCamInfo\020O\022\035\n\031DOTA_UM_Mini" +
      "mapDebugPoint\020P\022\030\n\024DOTA_UM_MinimapEvent\020" +
      "Q\022\034\n\030DOTA_UM_NevermoreRequiem\020R\022\031\n\025DOTA_" +
      "UM_OverheadEvent\020S\022\036\n\032DOTA_UM_SetNextAut" +
      "obuyItem\020T\022\032\n\026DOTA_UM_SharedCooldown\020U\022 " +
      "\n\034DOTA_UM_SpectatorPlayerClick\020V\022\033\n\027DOTA" +
      "_UM_TutorialTipInfo\020W\022\025\n\021DOTA_UM_UnitEve" +
      "nt\020X\022\033\n\027DOTA_UM_ParticleManager\020Y\022\023\n\017DOT" +
      "A_UM_BotChat\020Z\022\024\n\020DOTA_UM_HudError\020[\022\031\n\025",
      "DOTA_UM_ItemPurchased\020\\\022\020\n\014DOTA_UM_Ping\020" +
      "]\022\025\n\021DOTA_UM_ItemFound\020^\022!\n\035DOTA_UM_Char" +
      "acterSpeakConcept\020_\022\026\n\022DOTA_UM_SwapVerif" +
      "y\020`\022\025\n\021DOTA_UM_WorldLine\020a\022\032\n\026DOTA_UM_To" +
      "urnamentDrop\020b\022\025\n\021DOTA_UM_ItemAlert\020c\022\032\n" +
      "\026DOTA_UM_HalloweenDrops\020d\022\025\n\021DOTA_UM_Cha" +
      "tWheel\020e\022\034\n\030DOTA_UM_ReceivedXmasGift\020f\022\037" +
      "\n\033DOTA_UM_UpdateSharedContent\020g\022\036\n\032DOTA_" +
      "UM_TutorialRequestExp\020h\022\037\n\033DOTA_UM_Tutor" +
      "ialPingMinimap\020i\022!\n\035DOTA_UM_GamerulesSta",
      "teChanged\020j\022\026\n\022DOTA_UM_ShowSurvey\020k\022\030\n\024D" +
      "OTA_UM_TutorialFade\020l\022\034\n\030DOTA_UM_AddQues" +
      "tLogEntry\020m\022\031\n\025DOTA_UM_SendStatPopup\020n\022\032" +
      "\n\026DOTA_UM_TutorialFinish\020o\022\033\n\027DOTA_UM_Se" +
      "ndRoshanPopup\020p\022\036\n\032DOTA_UM_SendGenericTo" +
      "olTip\020q\022\031\n\025DOTA_UM_SendFinalGold\020r\022\025\n\021DO" +
      "TA_UM_CustomMsg\020s\022\030\n\024DOTA_UM_CoachHUDPin" +
      "g\020t\022\035\n\031DOTA_UM_ClientLoadGridNav\020u\022\027\n\023DO" +
      "TA_UM_AbilityPing\020v\022\034\n\030DOTA_UM_ShowGener" +
      "icPopup\020w\022\025\n\021DOTA_UM_VoteStart\020x\022\026\n\022DOTA",
      "_UM_VoteUpdate\020y\022\023\n\017DOTA_UM_VoteEnd\020z\022\030\n" +
      "\024DOTA_UM_BoosterState\020{\022\035\n\031DOTA_UM_WillP" +
      "urchaseAlert\020|\022#\n\037DOTA_UM_TutorialMinima" +
      "pPosition\020}\022\025\n\021DOTA_UM_PlayerMMR\020~\022\030\n\024DO" +
      "TA_UM_AbilitySteal\020\177\022\037\n\032DOTA_UM_CourierK" +
      "illedAlert\020\200\001\022\033\n\026DOTA_UM_EnemyItemAlert\020" +
      "\201\001\022\036\n\031DOTA_UM_StatsMatchDetails\020\202\001\022\026\n\021DO" +
      "TA_UM_MiniTaunt\020\203\001\022\036\n\031DOTA_UM_BuyBackSta" +
      "teAlert\020\204\001\022\032\n\025DOTA_UM_QuickBuyAlert\020\205\001\022\035" +
      "\n\030DOTA_UM_StatsHeroDetails\020\206\001\022\035\n\030DOTA_UM",
      "_PredictionResult\020\207\001\022\032\n\025DOTA_UM_Modifier" +
      "Alert\020\210\001\022\030\n\023DOTA_UM_HPManaAlert\020\211\001\022\027\n\022DO" +
      "TA_UM_GlyphAlert\020\212\001\022\026\n\021DOTA_UM_BeastChat" +
      "\020\213\001\022&\n!DOTA_UM_SpectatorPlayerUnitOrders" +
      "\020\214\001\022\034\n\027DOTA_UM_CompendiumState\020\215\001\022\036\n\031DOT" +
      "A_UM_ProjectionAbility\020\216\001\022\034\n\027DOTA_UM_Pro" +
      "jectionEvent\020\217\001B8\n%skadistats.clarity.wi" +
      "re.dota.s1.protoB\017DOTAS1MessageId"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
