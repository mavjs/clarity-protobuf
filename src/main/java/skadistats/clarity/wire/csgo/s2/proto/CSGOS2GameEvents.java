// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_gameevents.proto

package skadistats.clarity.wire.csgo.s2.proto;

public final class CSGOS2GameEvents {
  private CSGOS2GameEvents() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ECsgoGameEvents}
   */
  public enum ECsgoGameEvents
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GE_PlayerAnimEventId = 450;</code>
     */
    GE_PlayerAnimEventId(0, 450),
    /**
     * <code>GE_RadioIconEventId = 451;</code>
     */
    GE_RadioIconEventId(1, 451),
    /**
     * <code>GE_FireBulletsId = 452;</code>
     */
    GE_FireBulletsId(2, 452),
    ;

    /**
     * <code>GE_PlayerAnimEventId = 450;</code>
     */
    public static final int GE_PlayerAnimEventId_VALUE = 450;
    /**
     * <code>GE_RadioIconEventId = 451;</code>
     */
    public static final int GE_RadioIconEventId_VALUE = 451;
    /**
     * <code>GE_FireBulletsId = 452;</code>
     */
    public static final int GE_FireBulletsId_VALUE = 452;


    public final int getNumber() { return value; }

    public static ECsgoGameEvents valueOf(int value) {
      switch (value) {
        case 450: return GE_PlayerAnimEventId;
        case 451: return GE_RadioIconEventId;
        case 452: return GE_FireBulletsId;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ECsgoGameEvents>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ECsgoGameEvents>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ECsgoGameEvents>() {
            public ECsgoGameEvents findValueByNumber(int number) {
              return ECsgoGameEvents.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.getDescriptor().getEnumTypes().get(0);
    }

    private static final ECsgoGameEvents[] VALUES = values();

    public static ECsgoGameEvents valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ECsgoGameEvents(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ECsgoGameEvents)
  }

  public interface CMsgTEPlayerAnimEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgTEPlayerAnimEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    boolean hasPlayer();
    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    int getPlayer();

    /**
     * <code>optional uint32 event = 2;</code>
     */
    boolean hasEvent();
    /**
     * <code>optional uint32 event = 2;</code>
     */
    int getEvent();

    /**
     * <code>optional int32 data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>optional int32 data = 3;</code>
     */
    int getData();
  }
  /**
   * Protobuf type {@code CMsgTEPlayerAnimEvent}
   */
  public static final class CMsgTEPlayerAnimEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgTEPlayerAnimEvent)
      CMsgTEPlayerAnimEventOrBuilder {
    // Use CMsgTEPlayerAnimEvent.newBuilder() to construct.
    private CMsgTEPlayerAnimEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgTEPlayerAnimEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgTEPlayerAnimEvent defaultInstance;
    public static CMsgTEPlayerAnimEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgTEPlayerAnimEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgTEPlayerAnimEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              player_ = input.readFixed32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              event_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              data_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEPlayerAnimEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEPlayerAnimEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.class, skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgTEPlayerAnimEvent> PARSER =
        new com.google.protobuf.AbstractParser<CMsgTEPlayerAnimEvent>() {
      public CMsgTEPlayerAnimEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgTEPlayerAnimEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgTEPlayerAnimEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private int player_;
    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int EVENT_FIELD_NUMBER = 2;
    private int event_;
    /**
     * <code>optional uint32 event = 2;</code>
     */
    public boolean hasEvent() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 event = 2;</code>
     */
    public int getEvent() {
      return event_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private int data_;
    /**
     * <code>optional int32 data = 3;</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 data = 3;</code>
     */
    public int getData() {
      return data_;
    }

    private void initFields() {
      player_ = 16777215;
      event_ = 0;
      data_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, event_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, data_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, event_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, data_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgTEPlayerAnimEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgTEPlayerAnimEvent)
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEPlayerAnimEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEPlayerAnimEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.class, skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        player_ = 16777215;
        bitField0_ = (bitField0_ & ~0x00000001);
        event_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEPlayerAnimEvent_descriptor;
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent build() {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent buildPartial() {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent result = new skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.event_ = event_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.data_ = data_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent) {
          return mergeFrom((skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent other) {
        if (other == skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasEvent()) {
          setEvent(other.getEvent());
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEPlayerAnimEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int player_ = 16777215;
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000001;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 16777215;
        onChanged();
        return this;
      }

      private int event_ ;
      /**
       * <code>optional uint32 event = 2;</code>
       */
      public boolean hasEvent() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 event = 2;</code>
       */
      public int getEvent() {
        return event_;
      }
      /**
       * <code>optional uint32 event = 2;</code>
       */
      public Builder setEvent(int value) {
        bitField0_ |= 0x00000002;
        event_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 event = 2;</code>
       */
      public Builder clearEvent() {
        bitField0_ = (bitField0_ & ~0x00000002);
        event_ = 0;
        onChanged();
        return this;
      }

      private int data_ ;
      /**
       * <code>optional int32 data = 3;</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 data = 3;</code>
       */
      public int getData() {
        return data_;
      }
      /**
       * <code>optional int32 data = 3;</code>
       */
      public Builder setData(int value) {
        bitField0_ |= 0x00000004;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 data = 3;</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgTEPlayerAnimEvent)
    }

    static {
      defaultInstance = new CMsgTEPlayerAnimEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgTEPlayerAnimEvent)
  }

  public interface CMsgTERadioIconOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgTERadioIcon)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    boolean hasPlayer();
    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    int getPlayer();
  }
  /**
   * Protobuf type {@code CMsgTERadioIcon}
   */
  public static final class CMsgTERadioIcon extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgTERadioIcon)
      CMsgTERadioIconOrBuilder {
    // Use CMsgTERadioIcon.newBuilder() to construct.
    private CMsgTERadioIcon(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgTERadioIcon(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgTERadioIcon defaultInstance;
    public static CMsgTERadioIcon getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgTERadioIcon getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgTERadioIcon(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              player_ = input.readFixed32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTERadioIcon_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTERadioIcon_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.class, skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgTERadioIcon> PARSER =
        new com.google.protobuf.AbstractParser<CMsgTERadioIcon>() {
      public CMsgTERadioIcon parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgTERadioIcon(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgTERadioIcon> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private int player_;
    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional fixed32 player = 1 [default = 16777215];</code>
     */
    public int getPlayer() {
      return player_;
    }

    private void initFields() {
      player_ = 16777215;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFixed32(1, player_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, player_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgTERadioIcon}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgTERadioIcon)
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIconOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTERadioIcon_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTERadioIcon_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.class, skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        player_ = 16777215;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTERadioIcon_descriptor;
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon build() {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon buildPartial() {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon result = new skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.player_ = player_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon) {
          return mergeFrom((skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon other) {
        if (other == skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTERadioIcon) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int player_ = 16777215;
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000001;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 player = 1 [default = 16777215];</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000001);
        player_ = 16777215;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgTERadioIcon)
    }

    static {
      defaultInstance = new CMsgTERadioIcon(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgTERadioIcon)
  }

  public interface CMsgTEFireBulletsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgTEFireBullets)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getOrigin();
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder();

    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    boolean hasAngles();
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAngles();
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOrBuilder();

    /**
     * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
     */
    boolean hasWeaponId();
    /**
     * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
     */
    int getWeaponId();

    /**
     * <code>optional uint32 mode = 4;</code>
     */
    boolean hasMode();
    /**
     * <code>optional uint32 mode = 4;</code>
     */
    int getMode();

    /**
     * <code>optional uint32 seed = 5;</code>
     */
    boolean hasSeed();
    /**
     * <code>optional uint32 seed = 5;</code>
     */
    int getSeed();

    /**
     * <code>optional fixed32 player = 6 [default = 16777215];</code>
     */
    boolean hasPlayer();
    /**
     * <code>optional fixed32 player = 6 [default = 16777215];</code>
     */
    int getPlayer();

    /**
     * <code>optional float inaccuracy = 7;</code>
     */
    boolean hasInaccuracy();
    /**
     * <code>optional float inaccuracy = 7;</code>
     */
    float getInaccuracy();

    /**
     * <code>optional float recoil_index = 8;</code>
     */
    boolean hasRecoilIndex();
    /**
     * <code>optional float recoil_index = 8;</code>
     */
    float getRecoilIndex();

    /**
     * <code>optional float spread = 9;</code>
     */
    boolean hasSpread();
    /**
     * <code>optional float spread = 9;</code>
     */
    float getSpread();

    /**
     * <code>optional int32 sound_type = 10;</code>
     */
    boolean hasSoundType();
    /**
     * <code>optional int32 sound_type = 10;</code>
     */
    int getSoundType();

    /**
     * <code>optional uint32 item_def_index = 11;</code>
     */
    boolean hasItemDefIndex();
    /**
     * <code>optional uint32 item_def_index = 11;</code>
     */
    int getItemDefIndex();

    /**
     * <code>optional fixed32 sound_dsp_effect = 12;</code>
     */
    boolean hasSoundDspEffect();
    /**
     * <code>optional fixed32 sound_dsp_effect = 12;</code>
     */
    int getSoundDspEffect();

    /**
     * <code>optional .CMsgVector ent_origin = 13;</code>
     */
    boolean hasEntOrigin();
    /**
     * <code>optional .CMsgVector ent_origin = 13;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getEntOrigin();
    /**
     * <code>optional .CMsgVector ent_origin = 13;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getEntOriginOrBuilder();

    /**
     * <code>optional uint32 num_bullets_remaining = 14;</code>
     */
    boolean hasNumBulletsRemaining();
    /**
     * <code>optional uint32 num_bullets_remaining = 14;</code>
     */
    int getNumBulletsRemaining();

    /**
     * <code>optional uint32 attack_type = 15;</code>
     */
    boolean hasAttackType();
    /**
     * <code>optional uint32 attack_type = 15;</code>
     */
    int getAttackType();
  }
  /**
   * Protobuf type {@code CMsgTEFireBullets}
   */
  public static final class CMsgTEFireBullets extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgTEFireBullets)
      CMsgTEFireBulletsOrBuilder {
    // Use CMsgTEFireBullets.newBuilder() to construct.
    private CMsgTEFireBullets(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgTEFireBullets(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgTEFireBullets defaultInstance;
    public static CMsgTEFireBullets getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgTEFireBullets getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgTEFireBullets(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = angles_.toBuilder();
              }
              angles_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angles_);
                angles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              weaponId_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mode_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              seed_ = input.readUInt32();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              player_ = input.readFixed32();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              inaccuracy_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              recoilIndex_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000100;
              spread_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              soundType_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              itemDefIndex_ = input.readUInt32();
              break;
            }
            case 101: {
              bitField0_ |= 0x00000800;
              soundDspEffect_ = input.readFixed32();
              break;
            }
            case 106: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = entOrigin_.toBuilder();
              }
              entOrigin_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(entOrigin_);
                entOrigin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              numBulletsRemaining_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              attackType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEFireBullets_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEFireBullets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.class, skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgTEFireBullets> PARSER =
        new com.google.protobuf.AbstractParser<CMsgTEFireBullets>() {
      public CMsgTEFireBullets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgTEFireBullets(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgTEFireBullets> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ORIGIN_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector origin_;
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getOrigin() {
      return origin_;
    }
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }

    public static final int ANGLES_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle angles_;
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    public boolean hasAngles() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAngles() {
      return angles_;
    }
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOrBuilder() {
      return angles_;
    }

    public static final int WEAPON_ID_FIELD_NUMBER = 3;
    private int weaponId_;
    /**
     * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
     */
    public boolean hasWeaponId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
     */
    public int getWeaponId() {
      return weaponId_;
    }

    public static final int MODE_FIELD_NUMBER = 4;
    private int mode_;
    /**
     * <code>optional uint32 mode = 4;</code>
     */
    public boolean hasMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 mode = 4;</code>
     */
    public int getMode() {
      return mode_;
    }

    public static final int SEED_FIELD_NUMBER = 5;
    private int seed_;
    /**
     * <code>optional uint32 seed = 5;</code>
     */
    public boolean hasSeed() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 seed = 5;</code>
     */
    public int getSeed() {
      return seed_;
    }

    public static final int PLAYER_FIELD_NUMBER = 6;
    private int player_;
    /**
     * <code>optional fixed32 player = 6 [default = 16777215];</code>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional fixed32 player = 6 [default = 16777215];</code>
     */
    public int getPlayer() {
      return player_;
    }

    public static final int INACCURACY_FIELD_NUMBER = 7;
    private float inaccuracy_;
    /**
     * <code>optional float inaccuracy = 7;</code>
     */
    public boolean hasInaccuracy() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float inaccuracy = 7;</code>
     */
    public float getInaccuracy() {
      return inaccuracy_;
    }

    public static final int RECOIL_INDEX_FIELD_NUMBER = 8;
    private float recoilIndex_;
    /**
     * <code>optional float recoil_index = 8;</code>
     */
    public boolean hasRecoilIndex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional float recoil_index = 8;</code>
     */
    public float getRecoilIndex() {
      return recoilIndex_;
    }

    public static final int SPREAD_FIELD_NUMBER = 9;
    private float spread_;
    /**
     * <code>optional float spread = 9;</code>
     */
    public boolean hasSpread() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional float spread = 9;</code>
     */
    public float getSpread() {
      return spread_;
    }

    public static final int SOUND_TYPE_FIELD_NUMBER = 10;
    private int soundType_;
    /**
     * <code>optional int32 sound_type = 10;</code>
     */
    public boolean hasSoundType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 sound_type = 10;</code>
     */
    public int getSoundType() {
      return soundType_;
    }

    public static final int ITEM_DEF_INDEX_FIELD_NUMBER = 11;
    private int itemDefIndex_;
    /**
     * <code>optional uint32 item_def_index = 11;</code>
     */
    public boolean hasItemDefIndex() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 item_def_index = 11;</code>
     */
    public int getItemDefIndex() {
      return itemDefIndex_;
    }

    public static final int SOUND_DSP_EFFECT_FIELD_NUMBER = 12;
    private int soundDspEffect_;
    /**
     * <code>optional fixed32 sound_dsp_effect = 12;</code>
     */
    public boolean hasSoundDspEffect() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional fixed32 sound_dsp_effect = 12;</code>
     */
    public int getSoundDspEffect() {
      return soundDspEffect_;
    }

    public static final int ENT_ORIGIN_FIELD_NUMBER = 13;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector entOrigin_;
    /**
     * <code>optional .CMsgVector ent_origin = 13;</code>
     */
    public boolean hasEntOrigin() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .CMsgVector ent_origin = 13;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getEntOrigin() {
      return entOrigin_;
    }
    /**
     * <code>optional .CMsgVector ent_origin = 13;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getEntOriginOrBuilder() {
      return entOrigin_;
    }

    public static final int NUM_BULLETS_REMAINING_FIELD_NUMBER = 14;
    private int numBulletsRemaining_;
    /**
     * <code>optional uint32 num_bullets_remaining = 14;</code>
     */
    public boolean hasNumBulletsRemaining() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 num_bullets_remaining = 14;</code>
     */
    public int getNumBulletsRemaining() {
      return numBulletsRemaining_;
    }

    public static final int ATTACK_TYPE_FIELD_NUMBER = 15;
    private int attackType_;
    /**
     * <code>optional uint32 attack_type = 15;</code>
     */
    public boolean hasAttackType() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 attack_type = 15;</code>
     */
    public int getAttackType() {
      return attackType_;
    }

    private void initFields() {
      origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
      weaponId_ = 16777215;
      mode_ = 0;
      seed_ = 0;
      player_ = 16777215;
      inaccuracy_ = 0F;
      recoilIndex_ = 0F;
      spread_ = 0F;
      soundType_ = 0;
      itemDefIndex_ = 0;
      soundDspEffect_ = 0;
      entOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      numBulletsRemaining_ = 0;
      attackType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, angles_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, weaponId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, mode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, seed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFixed32(6, player_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, inaccuracy_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, recoilIndex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeFloat(9, spread_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, soundType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeFixed32(12, soundDspEffect_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, entOrigin_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, numBulletsRemaining_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(15, attackType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, angles_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, weaponId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, mode_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, seed_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(6, player_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, inaccuracy_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, recoilIndex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, spread_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, soundType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(12, soundDspEffect_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, entOrigin_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, numBulletsRemaining_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, attackType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgTEFireBullets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgTEFireBullets)
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBulletsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEFireBullets_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEFireBullets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.class, skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.Builder.class);
      }

      // Construct using skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
          getAnglesFieldBuilder();
          getEntOriginFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (anglesBuilder_ == null) {
          angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
        } else {
          anglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        weaponId_ = 16777215;
        bitField0_ = (bitField0_ & ~0x00000004);
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        seed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        player_ = 16777215;
        bitField0_ = (bitField0_ & ~0x00000020);
        inaccuracy_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        recoilIndex_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        spread_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000100);
        soundType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        itemDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        soundDspEffect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        if (entOriginBuilder_ == null) {
          entOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          entOriginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        numBulletsRemaining_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        attackType_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.internal_static_CMsgTEFireBullets_descriptor;
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets getDefaultInstanceForType() {
        return skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.getDefaultInstance();
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets build() {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets buildPartial() {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets result = new skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (anglesBuilder_ == null) {
          result.angles_ = angles_;
        } else {
          result.angles_ = anglesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.weaponId_ = weaponId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seed_ = seed_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.player_ = player_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.inaccuracy_ = inaccuracy_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.recoilIndex_ = recoilIndex_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.spread_ = spread_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.soundType_ = soundType_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.itemDefIndex_ = itemDefIndex_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.soundDspEffect_ = soundDspEffect_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (entOriginBuilder_ == null) {
          result.entOrigin_ = entOrigin_;
        } else {
          result.entOrigin_ = entOriginBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.numBulletsRemaining_ = numBulletsRemaining_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.attackType_ = attackType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets) {
          return mergeFrom((skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets other) {
        if (other == skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets.getDefaultInstance()) return this;
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        if (other.hasAngles()) {
          mergeAngles(other.getAngles());
        }
        if (other.hasWeaponId()) {
          setWeaponId(other.getWeaponId());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasSeed()) {
          setSeed(other.getSeed());
        }
        if (other.hasPlayer()) {
          setPlayer(other.getPlayer());
        }
        if (other.hasInaccuracy()) {
          setInaccuracy(other.getInaccuracy());
        }
        if (other.hasRecoilIndex()) {
          setRecoilIndex(other.getRecoilIndex());
        }
        if (other.hasSpread()) {
          setSpread(other.getSpread());
        }
        if (other.hasSoundType()) {
          setSoundType(other.getSoundType());
        }
        if (other.hasItemDefIndex()) {
          setItemDefIndex(other.getItemDefIndex());
        }
        if (other.hasSoundDspEffect()) {
          setSoundDspEffect(other.getSoundDspEffect());
        }
        if (other.hasEntOrigin()) {
          mergeEntOrigin(other.getEntOrigin());
        }
        if (other.hasNumBulletsRemaining()) {
          setNumBulletsRemaining(other.getNumBulletsRemaining());
        }
        if (other.hasAttackType()) {
          setAttackType(other.getAttackType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.csgo.s2.proto.CSGOS2GameEvents.CMsgTEFireBullets) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> originBuilder_;
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder setOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder setOrigin(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder mergeOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              origin_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder> anglesBuilder_;
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public boolean hasAngles() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAngles() {
        if (anglesBuilder_ == null) {
          return angles_;
        } else {
          return anglesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder setAngles(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle value) {
        if (anglesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angles_ = value;
          onChanged();
        } else {
          anglesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder setAngles(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder builderForValue) {
        if (anglesBuilder_ == null) {
          angles_ = builderForValue.build();
          onChanged();
        } else {
          anglesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder mergeAngles(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle value) {
        if (anglesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              angles_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance()) {
            angles_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.newBuilder(angles_).mergeFrom(value).buildPartial();
          } else {
            angles_ = value;
          }
          onChanged();
        } else {
          anglesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder clearAngles() {
        if (anglesBuilder_ == null) {
          angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
          onChanged();
        } else {
          anglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder getAnglesBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnglesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOrBuilder() {
        if (anglesBuilder_ != null) {
          return anglesBuilder_.getMessageOrBuilder();
        } else {
          return angles_;
        }
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder> 
          getAnglesFieldBuilder() {
        if (anglesBuilder_ == null) {
          anglesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder>(
                  getAngles(),
                  getParentForChildren(),
                  isClean());
          angles_ = null;
        }
        return anglesBuilder_;
      }

      private int weaponId_ = 16777215;
      /**
       * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
       */
      public boolean hasWeaponId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
       */
      public int getWeaponId() {
        return weaponId_;
      }
      /**
       * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
       */
      public Builder setWeaponId(int value) {
        bitField0_ |= 0x00000004;
        weaponId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 weapon_id = 3 [default = 16777215];</code>
       */
      public Builder clearWeaponId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        weaponId_ = 16777215;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>optional uint32 mode = 4;</code>
       */
      public boolean hasMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 mode = 4;</code>
       */
      public int getMode() {
        return mode_;
      }
      /**
       * <code>optional uint32 mode = 4;</code>
       */
      public Builder setMode(int value) {
        bitField0_ |= 0x00000008;
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mode = 4;</code>
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mode_ = 0;
        onChanged();
        return this;
      }

      private int seed_ ;
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      public int getSeed() {
        return seed_;
      }
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      public Builder setSeed(int value) {
        bitField0_ |= 0x00000010;
        seed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 seed = 5;</code>
       */
      public Builder clearSeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        seed_ = 0;
        onChanged();
        return this;
      }

      private int player_ = 16777215;
      /**
       * <code>optional fixed32 player = 6 [default = 16777215];</code>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional fixed32 player = 6 [default = 16777215];</code>
       */
      public int getPlayer() {
        return player_;
      }
      /**
       * <code>optional fixed32 player = 6 [default = 16777215];</code>
       */
      public Builder setPlayer(int value) {
        bitField0_ |= 0x00000020;
        player_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 player = 6 [default = 16777215];</code>
       */
      public Builder clearPlayer() {
        bitField0_ = (bitField0_ & ~0x00000020);
        player_ = 16777215;
        onChanged();
        return this;
      }

      private float inaccuracy_ ;
      /**
       * <code>optional float inaccuracy = 7;</code>
       */
      public boolean hasInaccuracy() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float inaccuracy = 7;</code>
       */
      public float getInaccuracy() {
        return inaccuracy_;
      }
      /**
       * <code>optional float inaccuracy = 7;</code>
       */
      public Builder setInaccuracy(float value) {
        bitField0_ |= 0x00000040;
        inaccuracy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float inaccuracy = 7;</code>
       */
      public Builder clearInaccuracy() {
        bitField0_ = (bitField0_ & ~0x00000040);
        inaccuracy_ = 0F;
        onChanged();
        return this;
      }

      private float recoilIndex_ ;
      /**
       * <code>optional float recoil_index = 8;</code>
       */
      public boolean hasRecoilIndex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float recoil_index = 8;</code>
       */
      public float getRecoilIndex() {
        return recoilIndex_;
      }
      /**
       * <code>optional float recoil_index = 8;</code>
       */
      public Builder setRecoilIndex(float value) {
        bitField0_ |= 0x00000080;
        recoilIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float recoil_index = 8;</code>
       */
      public Builder clearRecoilIndex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        recoilIndex_ = 0F;
        onChanged();
        return this;
      }

      private float spread_ ;
      /**
       * <code>optional float spread = 9;</code>
       */
      public boolean hasSpread() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional float spread = 9;</code>
       */
      public float getSpread() {
        return spread_;
      }
      /**
       * <code>optional float spread = 9;</code>
       */
      public Builder setSpread(float value) {
        bitField0_ |= 0x00000100;
        spread_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float spread = 9;</code>
       */
      public Builder clearSpread() {
        bitField0_ = (bitField0_ & ~0x00000100);
        spread_ = 0F;
        onChanged();
        return this;
      }

      private int soundType_ ;
      /**
       * <code>optional int32 sound_type = 10;</code>
       */
      public boolean hasSoundType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 sound_type = 10;</code>
       */
      public int getSoundType() {
        return soundType_;
      }
      /**
       * <code>optional int32 sound_type = 10;</code>
       */
      public Builder setSoundType(int value) {
        bitField0_ |= 0x00000200;
        soundType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sound_type = 10;</code>
       */
      public Builder clearSoundType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        soundType_ = 0;
        onChanged();
        return this;
      }

      private int itemDefIndex_ ;
      /**
       * <code>optional uint32 item_def_index = 11;</code>
       */
      public boolean hasItemDefIndex() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 item_def_index = 11;</code>
       */
      public int getItemDefIndex() {
        return itemDefIndex_;
      }
      /**
       * <code>optional uint32 item_def_index = 11;</code>
       */
      public Builder setItemDefIndex(int value) {
        bitField0_ |= 0x00000400;
        itemDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_def_index = 11;</code>
       */
      public Builder clearItemDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000400);
        itemDefIndex_ = 0;
        onChanged();
        return this;
      }

      private int soundDspEffect_ ;
      /**
       * <code>optional fixed32 sound_dsp_effect = 12;</code>
       */
      public boolean hasSoundDspEffect() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional fixed32 sound_dsp_effect = 12;</code>
       */
      public int getSoundDspEffect() {
        return soundDspEffect_;
      }
      /**
       * <code>optional fixed32 sound_dsp_effect = 12;</code>
       */
      public Builder setSoundDspEffect(int value) {
        bitField0_ |= 0x00000800;
        soundDspEffect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 sound_dsp_effect = 12;</code>
       */
      public Builder clearSoundDspEffect() {
        bitField0_ = (bitField0_ & ~0x00000800);
        soundDspEffect_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector entOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> entOriginBuilder_;
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public boolean hasEntOrigin() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getEntOrigin() {
        if (entOriginBuilder_ == null) {
          return entOrigin_;
        } else {
          return entOriginBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public Builder setEntOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (entOriginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          entOrigin_ = value;
          onChanged();
        } else {
          entOriginBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public Builder setEntOrigin(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (entOriginBuilder_ == null) {
          entOrigin_ = builderForValue.build();
          onChanged();
        } else {
          entOriginBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public Builder mergeEntOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (entOriginBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              entOrigin_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            entOrigin_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.newBuilder(entOrigin_).mergeFrom(value).buildPartial();
          } else {
            entOrigin_ = value;
          }
          onChanged();
        } else {
          entOriginBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public Builder clearEntOrigin() {
        if (entOriginBuilder_ == null) {
          entOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          entOriginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder getEntOriginBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getEntOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getEntOriginOrBuilder() {
        if (entOriginBuilder_ != null) {
          return entOriginBuilder_.getMessageOrBuilder();
        } else {
          return entOrigin_;
        }
      }
      /**
       * <code>optional .CMsgVector ent_origin = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> 
          getEntOriginFieldBuilder() {
        if (entOriginBuilder_ == null) {
          entOriginBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder>(
                  getEntOrigin(),
                  getParentForChildren(),
                  isClean());
          entOrigin_ = null;
        }
        return entOriginBuilder_;
      }

      private int numBulletsRemaining_ ;
      /**
       * <code>optional uint32 num_bullets_remaining = 14;</code>
       */
      public boolean hasNumBulletsRemaining() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 num_bullets_remaining = 14;</code>
       */
      public int getNumBulletsRemaining() {
        return numBulletsRemaining_;
      }
      /**
       * <code>optional uint32 num_bullets_remaining = 14;</code>
       */
      public Builder setNumBulletsRemaining(int value) {
        bitField0_ |= 0x00002000;
        numBulletsRemaining_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_bullets_remaining = 14;</code>
       */
      public Builder clearNumBulletsRemaining() {
        bitField0_ = (bitField0_ & ~0x00002000);
        numBulletsRemaining_ = 0;
        onChanged();
        return this;
      }

      private int attackType_ ;
      /**
       * <code>optional uint32 attack_type = 15;</code>
       */
      public boolean hasAttackType() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 attack_type = 15;</code>
       */
      public int getAttackType() {
        return attackType_;
      }
      /**
       * <code>optional uint32 attack_type = 15;</code>
       */
      public Builder setAttackType(int value) {
        bitField0_ |= 0x00004000;
        attackType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 attack_type = 15;</code>
       */
      public Builder clearAttackType() {
        bitField0_ = (bitField0_ & ~0x00004000);
        attackType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgTEFireBullets)
    }

    static {
      defaultInstance = new CMsgTEFireBullets(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgTEFireBullets)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgTEPlayerAnimEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgTEPlayerAnimEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgTERadioIcon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgTERadioIcon_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgTEFireBullets_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgTEFireBullets_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023cs_gameevents.proto\032\035networkbasetypes-" +
      "common.proto\"N\n\025CMsgTEPlayerAnimEvent\022\030\n" +
      "\006player\030\001 \001(\007:\01016777215\022\r\n\005event\030\002 \001(\r\022\014" +
      "\n\004data\030\003 \001(\005\"+\n\017CMsgTERadioIcon\022\030\n\006playe" +
      "r\030\001 \001(\007:\01016777215\"\365\002\n\021CMsgTEFireBullets\022" +
      "\033\n\006origin\030\001 \001(\0132\013.CMsgVector\022\033\n\006angles\030\002" +
      " \001(\0132\013.CMsgQAngle\022\033\n\tweapon_id\030\003 \001(\r:\01016" +
      "777215\022\014\n\004mode\030\004 \001(\r\022\014\n\004seed\030\005 \001(\r\022\030\n\006pl" +
      "ayer\030\006 \001(\007:\01016777215\022\022\n\ninaccuracy\030\007 \001(\002" +
      "\022\024\n\014recoil_index\030\010 \001(\002\022\016\n\006spread\030\t \001(\002\022\022",
      "\n\nsound_type\030\n \001(\005\022\026\n\016item_def_index\030\013 \001" +
      "(\r\022\030\n\020sound_dsp_effect\030\014 \001(\007\022\037\n\nent_orig" +
      "in\030\r \001(\0132\013.CMsgVector\022\035\n\025num_bullets_rem" +
      "aining\030\016 \001(\r\022\023\n\013attack_type\030\017 \001(\r*]\n\017ECs" +
      "goGameEvents\022\031\n\024GE_PlayerAnimEventId\020\302\003\022" +
      "\030\n\023GE_RadioIconEventId\020\303\003\022\025\n\020GE_FireBull" +
      "etsId\020\304\003B9\n%skadistats.clarity.wire.csgo" +
      ".s2.protoB\020CSGOS2GameEvents"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.getDescriptor(),
        }, assigner);
    internal_static_CMsgTEPlayerAnimEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgTEPlayerAnimEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgTEPlayerAnimEvent_descriptor,
        new java.lang.String[] { "Player", "Event", "Data", });
    internal_static_CMsgTERadioIcon_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgTERadioIcon_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgTERadioIcon_descriptor,
        new java.lang.String[] { "Player", });
    internal_static_CMsgTEFireBullets_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMsgTEFireBullets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgTEFireBullets_descriptor,
        new java.lang.String[] { "Origin", "Angles", "WeaponId", "Mode", "Seed", "Player", "Inaccuracy", "RecoilIndex", "Spread", "SoundType", "ItemDefIndex", "SoundDspEffect", "EntOrigin", "NumBulletsRemaining", "AttackType", });
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
