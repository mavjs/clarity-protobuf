option java_package = "skadistats.clarity.wire.csgo.s1.proto";
option java_outer_classname = "CsGoNetMessages";

option cc_generic_services = false;

enum CLC_Messages {
    clc_ClientInfo = 8;
    clc_Move = 9;
    clc_VoiceData = 10;
    clc_BaselineAck = 11;
    clc_ListenEvents = 12;
    clc_RespondCvarValue = 13;
    clc_FileCRCCheck = 14;
    clc_LoadingProgress = 15;
    clc_SplitPlayerConnect = 16;
    clc_ClientMessage = 17;
    clc_CmdKeyValues = 18;
    clc_HltvReplay = 20;
}

enum SVC_Messages_CsGo {
    svc_GetCvarValue = 31;
    svc_PaintmapData = 33;
    svc_CmdKeyValues = 34;
    svc_EncryptedData = 35;
    svc_HltvReplay = 36;
    svc_Broadcast_Command = 38;
}

message CSVCMsg_ServerInfo
{
	optional int32 protocol = 1;			// protocol version
	optional int32 server_count = 2;		// number of changelevels since server start
	optional bool is_dedicated = 3;  		// dedicated server ?
	optional bool is_official_valve_server = 4;
	optional bool is_hltv = 5;				// HLTV server ?
	optional bool is_replay = 6;			// Replay server ?
	optional bool is_redirecting_to_proxy_relay = 21;	// // Will be redirecting to proxy relay
	optional int32 c_os = 7;				// L = linux, W = Win32
	optional fixed32 map_crc = 8;			// server map CRC
	optional fixed32 client_crc = 9;		// client.dll CRC server is using
	optional fixed32 string_table_crc = 10;	// string table CRC server is using
	optional int32 max_clients = 11;		// max number of clients on server
	optional int32 max_classes = 12;		// max number of server classes
	optional int32 player_slot = 13;		// our client slot number
	optional float tick_interval = 14;		// server tick interval
	optional string game_dir = 15;			// game directory eg "tf2"
	optional string map_name = 16;			// name of current map
	optional string map_group_name = 17;	// name of current map
	optional string sky_name = 18;			// name of current skybox
	optional string host_name = 19;			// server name
	optional uint64 ugc_map_id = 22;
}

message CSVCMsg_CmdKeyValues {
    optional bytes keyvalues = 1;
}

message CSVCMsg_EncryptedData {
    optional bytes encrypted = 1;
    optional int32 key_type = 2;
}

message CMsgQAngle {
    optional float x = 1;
    optional float y = 2;
    optional float z = 3;
}
message CSVCMsg_FixAngle {
    optional bool relative = 1;
    optional .CMsgQAngle angle = 2;
}

message CSVCMsg_HltvReplay {
    optional int32 delay = 1;
    optional int32 primary_target = 2;
    optional int32 replay_stop_at = 3;
    optional int32 replay_start_at = 4;
    optional int32 replay_slowdown_begin = 5;
    optional int32 replay_slowdown_end = 6;
    optional float replay_slowdown_rate = 7;
}

message CMsg_CVars {
    message CVar {
        optional string name = 1;
        optional string value = 2;
        optional uint32 dictionary_name = 3;
    }

    repeated CMsg_CVars.CVar cvars = 1;
}

message CNETMsg_SetConVar {
    optional CMsg_CVars convars = 1;
}

message CNETMsg_Disconnect {
    optional string text = 1;
}

enum VoiceDataFormat_t {
    VOICEDATA_FORMAT_STEAM = 0;
    VOICEDATA_FORMAT_ENGINE = 1;
}


message CCLCMsg_ClientInfo {
    optional fixed32 send_table_crc = 1;
    optional uint32 server_count = 2;
    optional bool is_hltv = 3;
    optional bool is_replay = 4;
    optional uint32 friends_id = 5;
    optional string friends_name = 6;
    repeated fixed32 custom_files = 7;
}

message CCLCMsg_Move {
    optional uint32 num_backup_commands = 1;
    optional uint32 num_new_commands = 2;
    optional bytes data = 3;
}

message CCLCMsg_VoiceData {
    optional bytes data = 1;
    optional fixed64 xuid = 2;
    optional .VoiceDataFormat_t format = 3 [default = VOICEDATA_FORMAT_ENGINE];
    optional int32 sequence_bytes = 4;
    optional uint32 section_number = 5;
    optional uint32 uncompressed_sample_offset = 6;
}

message CCLCMsg_BaselineAck {
    optional int32 baseline_tick = 1;
    optional int32 baseline_nr = 2;
}

message CCLCMsg_ListenEvents {
    repeated fixed32 event_mask = 1;
}

message CCLCMsg_RespondCvarValue {
    optional int32 cookie = 1;
    optional int32 status_code = 2;
    optional string name = 3;
    optional string value = 4;
}

message CCLCMsg_FileCRCCheck {
    optional int32 code_path = 1;
    optional string path = 2;
    optional int32 code_filename = 3;
    optional string filename = 4;
    optional int32 file_fraction = 5;
    optional bytes md5 = 6;
    optional uint32 crc = 7;
    optional int32 file_hash_type = 8;
    optional int32 file_len = 9;
    optional int32 pack_file_id = 10;
    optional int32 pack_file_number = 11;
}

message CCLCMsg_LoadingProgress {
    optional int32 progress = 1;
}

message CCLCMsg_SplitPlayerConnect {
    optional .CMsg_CVars convars = 1;
}

message CCLCMsg_CmdKeyValues {
    optional bytes keyvalues = 1;
}
