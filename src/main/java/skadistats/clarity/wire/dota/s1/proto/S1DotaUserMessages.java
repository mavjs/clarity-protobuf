// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s1_dota_usermessages.proto

package skadistats.clarity.wire.dota.s1.proto;

public final class S1DotaUserMessages {
  private S1DotaUserMessages() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code EDotaUserMessages}
   */
  public enum EDotaUserMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_UM_AddUnitToSelection = 64;</code>
     */
    DOTA_UM_AddUnitToSelection(0, 64),
    /**
     * <code>DOTA_UM_AIDebugLine = 65;</code>
     */
    DOTA_UM_AIDebugLine(1, 65),
    /**
     * <code>DOTA_UM_ChatEvent = 66;</code>
     */
    DOTA_UM_ChatEvent(2, 66),
    /**
     * <code>DOTA_UM_CombatHeroPositions = 67;</code>
     */
    DOTA_UM_CombatHeroPositions(3, 67),
    /**
     * <code>DOTA_UM_CombatLogData = 68;</code>
     */
    DOTA_UM_CombatLogData(4, 68),
    /**
     * <code>DOTA_UM_CombatLogShowDeath = 70;</code>
     */
    DOTA_UM_CombatLogShowDeath(5, 70),
    /**
     * <code>DOTA_UM_CreateLinearProjectile = 71;</code>
     */
    DOTA_UM_CreateLinearProjectile(6, 71),
    /**
     * <code>DOTA_UM_DestroyLinearProjectile = 72;</code>
     */
    DOTA_UM_DestroyLinearProjectile(7, 72),
    /**
     * <code>DOTA_UM_DodgeTrackingProjectiles = 73;</code>
     */
    DOTA_UM_DodgeTrackingProjectiles(8, 73),
    /**
     * <code>DOTA_UM_GlobalLightColor = 74;</code>
     */
    DOTA_UM_GlobalLightColor(9, 74),
    /**
     * <code>DOTA_UM_GlobalLightDirection = 75;</code>
     */
    DOTA_UM_GlobalLightDirection(10, 75),
    /**
     * <code>DOTA_UM_InvalidCommand = 76;</code>
     */
    DOTA_UM_InvalidCommand(11, 76),
    /**
     * <code>DOTA_UM_LocationPing = 77;</code>
     */
    DOTA_UM_LocationPing(12, 77),
    /**
     * <code>DOTA_UM_MapLine = 78;</code>
     */
    DOTA_UM_MapLine(13, 78),
    /**
     * <code>DOTA_UM_MiniKillCamInfo = 79;</code>
     */
    DOTA_UM_MiniKillCamInfo(14, 79),
    /**
     * <code>DOTA_UM_MinimapDebugPoint = 80;</code>
     */
    DOTA_UM_MinimapDebugPoint(15, 80),
    /**
     * <code>DOTA_UM_MinimapEvent = 81;</code>
     */
    DOTA_UM_MinimapEvent(16, 81),
    /**
     * <code>DOTA_UM_NevermoreRequiem = 82;</code>
     */
    DOTA_UM_NevermoreRequiem(17, 82),
    /**
     * <code>DOTA_UM_OverheadEvent = 83;</code>
     */
    DOTA_UM_OverheadEvent(18, 83),
    /**
     * <code>DOTA_UM_SetNextAutobuyItem = 84;</code>
     */
    DOTA_UM_SetNextAutobuyItem(19, 84),
    /**
     * <code>DOTA_UM_SharedCooldown = 85;</code>
     */
    DOTA_UM_SharedCooldown(20, 85),
    /**
     * <code>DOTA_UM_SpectatorPlayerClick = 86;</code>
     */
    DOTA_UM_SpectatorPlayerClick(21, 86),
    /**
     * <code>DOTA_UM_TutorialTipInfo = 87;</code>
     */
    DOTA_UM_TutorialTipInfo(22, 87),
    /**
     * <code>DOTA_UM_UnitEvent = 88;</code>
     */
    DOTA_UM_UnitEvent(23, 88),
    /**
     * <code>DOTA_UM_ParticleManager = 89;</code>
     */
    DOTA_UM_ParticleManager(24, 89),
    /**
     * <code>DOTA_UM_BotChat = 90;</code>
     */
    DOTA_UM_BotChat(25, 90),
    /**
     * <code>DOTA_UM_HudError = 91;</code>
     */
    DOTA_UM_HudError(26, 91),
    /**
     * <code>DOTA_UM_ItemPurchased = 92;</code>
     */
    DOTA_UM_ItemPurchased(27, 92),
    /**
     * <code>DOTA_UM_Ping = 93;</code>
     */
    DOTA_UM_Ping(28, 93),
    /**
     * <code>DOTA_UM_ItemFound = 94;</code>
     */
    DOTA_UM_ItemFound(29, 94),
    /**
     * <code>DOTA_UM_CharacterSpeakConcept = 95;</code>
     */
    DOTA_UM_CharacterSpeakConcept(30, 95),
    /**
     * <code>DOTA_UM_SwapVerify = 96;</code>
     */
    DOTA_UM_SwapVerify(31, 96),
    /**
     * <code>DOTA_UM_WorldLine = 97;</code>
     */
    DOTA_UM_WorldLine(32, 97),
    /**
     * <code>DOTA_UM_TournamentDrop = 98;</code>
     */
    DOTA_UM_TournamentDrop(33, 98),
    /**
     * <code>DOTA_UM_ItemAlert = 99;</code>
     */
    DOTA_UM_ItemAlert(34, 99),
    /**
     * <code>DOTA_UM_HalloweenDrops = 100;</code>
     */
    DOTA_UM_HalloweenDrops(35, 100),
    /**
     * <code>DOTA_UM_ChatWheel = 101;</code>
     */
    DOTA_UM_ChatWheel(36, 101),
    /**
     * <code>DOTA_UM_ReceivedXmasGift = 102;</code>
     */
    DOTA_UM_ReceivedXmasGift(37, 102),
    /**
     * <code>DOTA_UM_UpdateSharedContent = 103;</code>
     */
    DOTA_UM_UpdateSharedContent(38, 103),
    /**
     * <code>DOTA_UM_TutorialRequestExp = 104;</code>
     */
    DOTA_UM_TutorialRequestExp(39, 104),
    /**
     * <code>DOTA_UM_TutorialPingMinimap = 105;</code>
     */
    DOTA_UM_TutorialPingMinimap(40, 105),
    /**
     * <code>DOTA_UM_GamerulesStateChanged = 106;</code>
     */
    DOTA_UM_GamerulesStateChanged(41, 106),
    /**
     * <code>DOTA_UM_ShowSurvey = 107;</code>
     */
    DOTA_UM_ShowSurvey(42, 107),
    /**
     * <code>DOTA_UM_TutorialFade = 108;</code>
     */
    DOTA_UM_TutorialFade(43, 108),
    /**
     * <code>DOTA_UM_AddQuestLogEntry = 109;</code>
     */
    DOTA_UM_AddQuestLogEntry(44, 109),
    /**
     * <code>DOTA_UM_SendStatPopup = 110;</code>
     */
    DOTA_UM_SendStatPopup(45, 110),
    /**
     * <code>DOTA_UM_TutorialFinish = 111;</code>
     */
    DOTA_UM_TutorialFinish(46, 111),
    /**
     * <code>DOTA_UM_SendRoshanPopup = 112;</code>
     */
    DOTA_UM_SendRoshanPopup(47, 112),
    /**
     * <code>DOTA_UM_SendGenericToolTip = 113;</code>
     */
    DOTA_UM_SendGenericToolTip(48, 113),
    /**
     * <code>DOTA_UM_SendFinalGold = 114;</code>
     */
    DOTA_UM_SendFinalGold(49, 114),
    /**
     * <code>DOTA_UM_CustomMsg = 115;</code>
     */
    DOTA_UM_CustomMsg(50, 115),
    /**
     * <code>DOTA_UM_CoachHUDPing = 116;</code>
     */
    DOTA_UM_CoachHUDPing(51, 116),
    /**
     * <code>DOTA_UM_ClientLoadGridNav = 117;</code>
     */
    DOTA_UM_ClientLoadGridNav(52, 117),
    /**
     * <code>DOTA_UM_AbilityPing = 118;</code>
     */
    DOTA_UM_AbilityPing(53, 118),
    /**
     * <code>DOTA_UM_ShowGenericPopup = 119;</code>
     */
    DOTA_UM_ShowGenericPopup(54, 119),
    /**
     * <code>DOTA_UM_VoteStart = 120;</code>
     */
    DOTA_UM_VoteStart(55, 120),
    /**
     * <code>DOTA_UM_VoteUpdate = 121;</code>
     */
    DOTA_UM_VoteUpdate(56, 121),
    /**
     * <code>DOTA_UM_VoteEnd = 122;</code>
     */
    DOTA_UM_VoteEnd(57, 122),
    /**
     * <code>DOTA_UM_BoosterState = 123;</code>
     */
    DOTA_UM_BoosterState(58, 123),
    /**
     * <code>DOTA_UM_WillPurchaseAlert = 124;</code>
     */
    DOTA_UM_WillPurchaseAlert(59, 124),
    /**
     * <code>DOTA_UM_TutorialMinimapPosition = 125;</code>
     */
    DOTA_UM_TutorialMinimapPosition(60, 125),
    /**
     * <code>DOTA_UM_PlayerMMR = 126;</code>
     */
    DOTA_UM_PlayerMMR(61, 126),
    /**
     * <code>DOTA_UM_AbilitySteal = 127;</code>
     */
    DOTA_UM_AbilitySteal(62, 127),
    /**
     * <code>DOTA_UM_CourierKilledAlert = 128;</code>
     */
    DOTA_UM_CourierKilledAlert(63, 128),
    /**
     * <code>DOTA_UM_EnemyItemAlert = 129;</code>
     */
    DOTA_UM_EnemyItemAlert(64, 129),
    /**
     * <code>DOTA_UM_StatsMatchDetails = 130;</code>
     */
    DOTA_UM_StatsMatchDetails(65, 130),
    /**
     * <code>DOTA_UM_MiniTaunt = 131;</code>
     */
    DOTA_UM_MiniTaunt(66, 131),
    /**
     * <code>DOTA_UM_BuyBackStateAlert = 132;</code>
     */
    DOTA_UM_BuyBackStateAlert(67, 132),
    /**
     * <code>DOTA_UM_QuickBuyAlert = 133;</code>
     */
    DOTA_UM_QuickBuyAlert(68, 133),
    /**
     * <code>DOTA_UM_StatsHeroDetails = 134;</code>
     */
    DOTA_UM_StatsHeroDetails(69, 134),
    /**
     * <code>DOTA_UM_PredictionResult = 135;</code>
     */
    DOTA_UM_PredictionResult(70, 135),
    /**
     * <code>DOTA_UM_ModifierAlert = 136;</code>
     */
    DOTA_UM_ModifierAlert(71, 136),
    /**
     * <code>DOTA_UM_HPManaAlert = 137;</code>
     */
    DOTA_UM_HPManaAlert(72, 137),
    /**
     * <code>DOTA_UM_GlyphAlert = 138;</code>
     */
    DOTA_UM_GlyphAlert(73, 138),
    /**
     * <code>DOTA_UM_BeastChat = 139;</code>
     */
    DOTA_UM_BeastChat(74, 139),
    /**
     * <code>DOTA_UM_SpectatorPlayerUnitOrders = 140;</code>
     */
    DOTA_UM_SpectatorPlayerUnitOrders(75, 140),
    /**
     * <code>DOTA_UM_CompendiumState = 141;</code>
     */
    DOTA_UM_CompendiumState(76, 141),
    /**
     * <code>DOTA_UM_ProjectionAbility = 142;</code>
     */
    DOTA_UM_ProjectionAbility(77, 142),
    /**
     * <code>DOTA_UM_ProjectionEvent = 143;</code>
     */
    DOTA_UM_ProjectionEvent(78, 143),
    ;

    /**
     * <code>DOTA_UM_AddUnitToSelection = 64;</code>
     */
    public static final int DOTA_UM_AddUnitToSelection_VALUE = 64;
    /**
     * <code>DOTA_UM_AIDebugLine = 65;</code>
     */
    public static final int DOTA_UM_AIDebugLine_VALUE = 65;
    /**
     * <code>DOTA_UM_ChatEvent = 66;</code>
     */
    public static final int DOTA_UM_ChatEvent_VALUE = 66;
    /**
     * <code>DOTA_UM_CombatHeroPositions = 67;</code>
     */
    public static final int DOTA_UM_CombatHeroPositions_VALUE = 67;
    /**
     * <code>DOTA_UM_CombatLogData = 68;</code>
     */
    public static final int DOTA_UM_CombatLogData_VALUE = 68;
    /**
     * <code>DOTA_UM_CombatLogShowDeath = 70;</code>
     */
    public static final int DOTA_UM_CombatLogShowDeath_VALUE = 70;
    /**
     * <code>DOTA_UM_CreateLinearProjectile = 71;</code>
     */
    public static final int DOTA_UM_CreateLinearProjectile_VALUE = 71;
    /**
     * <code>DOTA_UM_DestroyLinearProjectile = 72;</code>
     */
    public static final int DOTA_UM_DestroyLinearProjectile_VALUE = 72;
    /**
     * <code>DOTA_UM_DodgeTrackingProjectiles = 73;</code>
     */
    public static final int DOTA_UM_DodgeTrackingProjectiles_VALUE = 73;
    /**
     * <code>DOTA_UM_GlobalLightColor = 74;</code>
     */
    public static final int DOTA_UM_GlobalLightColor_VALUE = 74;
    /**
     * <code>DOTA_UM_GlobalLightDirection = 75;</code>
     */
    public static final int DOTA_UM_GlobalLightDirection_VALUE = 75;
    /**
     * <code>DOTA_UM_InvalidCommand = 76;</code>
     */
    public static final int DOTA_UM_InvalidCommand_VALUE = 76;
    /**
     * <code>DOTA_UM_LocationPing = 77;</code>
     */
    public static final int DOTA_UM_LocationPing_VALUE = 77;
    /**
     * <code>DOTA_UM_MapLine = 78;</code>
     */
    public static final int DOTA_UM_MapLine_VALUE = 78;
    /**
     * <code>DOTA_UM_MiniKillCamInfo = 79;</code>
     */
    public static final int DOTA_UM_MiniKillCamInfo_VALUE = 79;
    /**
     * <code>DOTA_UM_MinimapDebugPoint = 80;</code>
     */
    public static final int DOTA_UM_MinimapDebugPoint_VALUE = 80;
    /**
     * <code>DOTA_UM_MinimapEvent = 81;</code>
     */
    public static final int DOTA_UM_MinimapEvent_VALUE = 81;
    /**
     * <code>DOTA_UM_NevermoreRequiem = 82;</code>
     */
    public static final int DOTA_UM_NevermoreRequiem_VALUE = 82;
    /**
     * <code>DOTA_UM_OverheadEvent = 83;</code>
     */
    public static final int DOTA_UM_OverheadEvent_VALUE = 83;
    /**
     * <code>DOTA_UM_SetNextAutobuyItem = 84;</code>
     */
    public static final int DOTA_UM_SetNextAutobuyItem_VALUE = 84;
    /**
     * <code>DOTA_UM_SharedCooldown = 85;</code>
     */
    public static final int DOTA_UM_SharedCooldown_VALUE = 85;
    /**
     * <code>DOTA_UM_SpectatorPlayerClick = 86;</code>
     */
    public static final int DOTA_UM_SpectatorPlayerClick_VALUE = 86;
    /**
     * <code>DOTA_UM_TutorialTipInfo = 87;</code>
     */
    public static final int DOTA_UM_TutorialTipInfo_VALUE = 87;
    /**
     * <code>DOTA_UM_UnitEvent = 88;</code>
     */
    public static final int DOTA_UM_UnitEvent_VALUE = 88;
    /**
     * <code>DOTA_UM_ParticleManager = 89;</code>
     */
    public static final int DOTA_UM_ParticleManager_VALUE = 89;
    /**
     * <code>DOTA_UM_BotChat = 90;</code>
     */
    public static final int DOTA_UM_BotChat_VALUE = 90;
    /**
     * <code>DOTA_UM_HudError = 91;</code>
     */
    public static final int DOTA_UM_HudError_VALUE = 91;
    /**
     * <code>DOTA_UM_ItemPurchased = 92;</code>
     */
    public static final int DOTA_UM_ItemPurchased_VALUE = 92;
    /**
     * <code>DOTA_UM_Ping = 93;</code>
     */
    public static final int DOTA_UM_Ping_VALUE = 93;
    /**
     * <code>DOTA_UM_ItemFound = 94;</code>
     */
    public static final int DOTA_UM_ItemFound_VALUE = 94;
    /**
     * <code>DOTA_UM_CharacterSpeakConcept = 95;</code>
     */
    public static final int DOTA_UM_CharacterSpeakConcept_VALUE = 95;
    /**
     * <code>DOTA_UM_SwapVerify = 96;</code>
     */
    public static final int DOTA_UM_SwapVerify_VALUE = 96;
    /**
     * <code>DOTA_UM_WorldLine = 97;</code>
     */
    public static final int DOTA_UM_WorldLine_VALUE = 97;
    /**
     * <code>DOTA_UM_TournamentDrop = 98;</code>
     */
    public static final int DOTA_UM_TournamentDrop_VALUE = 98;
    /**
     * <code>DOTA_UM_ItemAlert = 99;</code>
     */
    public static final int DOTA_UM_ItemAlert_VALUE = 99;
    /**
     * <code>DOTA_UM_HalloweenDrops = 100;</code>
     */
    public static final int DOTA_UM_HalloweenDrops_VALUE = 100;
    /**
     * <code>DOTA_UM_ChatWheel = 101;</code>
     */
    public static final int DOTA_UM_ChatWheel_VALUE = 101;
    /**
     * <code>DOTA_UM_ReceivedXmasGift = 102;</code>
     */
    public static final int DOTA_UM_ReceivedXmasGift_VALUE = 102;
    /**
     * <code>DOTA_UM_UpdateSharedContent = 103;</code>
     */
    public static final int DOTA_UM_UpdateSharedContent_VALUE = 103;
    /**
     * <code>DOTA_UM_TutorialRequestExp = 104;</code>
     */
    public static final int DOTA_UM_TutorialRequestExp_VALUE = 104;
    /**
     * <code>DOTA_UM_TutorialPingMinimap = 105;</code>
     */
    public static final int DOTA_UM_TutorialPingMinimap_VALUE = 105;
    /**
     * <code>DOTA_UM_GamerulesStateChanged = 106;</code>
     */
    public static final int DOTA_UM_GamerulesStateChanged_VALUE = 106;
    /**
     * <code>DOTA_UM_ShowSurvey = 107;</code>
     */
    public static final int DOTA_UM_ShowSurvey_VALUE = 107;
    /**
     * <code>DOTA_UM_TutorialFade = 108;</code>
     */
    public static final int DOTA_UM_TutorialFade_VALUE = 108;
    /**
     * <code>DOTA_UM_AddQuestLogEntry = 109;</code>
     */
    public static final int DOTA_UM_AddQuestLogEntry_VALUE = 109;
    /**
     * <code>DOTA_UM_SendStatPopup = 110;</code>
     */
    public static final int DOTA_UM_SendStatPopup_VALUE = 110;
    /**
     * <code>DOTA_UM_TutorialFinish = 111;</code>
     */
    public static final int DOTA_UM_TutorialFinish_VALUE = 111;
    /**
     * <code>DOTA_UM_SendRoshanPopup = 112;</code>
     */
    public static final int DOTA_UM_SendRoshanPopup_VALUE = 112;
    /**
     * <code>DOTA_UM_SendGenericToolTip = 113;</code>
     */
    public static final int DOTA_UM_SendGenericToolTip_VALUE = 113;
    /**
     * <code>DOTA_UM_SendFinalGold = 114;</code>
     */
    public static final int DOTA_UM_SendFinalGold_VALUE = 114;
    /**
     * <code>DOTA_UM_CustomMsg = 115;</code>
     */
    public static final int DOTA_UM_CustomMsg_VALUE = 115;
    /**
     * <code>DOTA_UM_CoachHUDPing = 116;</code>
     */
    public static final int DOTA_UM_CoachHUDPing_VALUE = 116;
    /**
     * <code>DOTA_UM_ClientLoadGridNav = 117;</code>
     */
    public static final int DOTA_UM_ClientLoadGridNav_VALUE = 117;
    /**
     * <code>DOTA_UM_AbilityPing = 118;</code>
     */
    public static final int DOTA_UM_AbilityPing_VALUE = 118;
    /**
     * <code>DOTA_UM_ShowGenericPopup = 119;</code>
     */
    public static final int DOTA_UM_ShowGenericPopup_VALUE = 119;
    /**
     * <code>DOTA_UM_VoteStart = 120;</code>
     */
    public static final int DOTA_UM_VoteStart_VALUE = 120;
    /**
     * <code>DOTA_UM_VoteUpdate = 121;</code>
     */
    public static final int DOTA_UM_VoteUpdate_VALUE = 121;
    /**
     * <code>DOTA_UM_VoteEnd = 122;</code>
     */
    public static final int DOTA_UM_VoteEnd_VALUE = 122;
    /**
     * <code>DOTA_UM_BoosterState = 123;</code>
     */
    public static final int DOTA_UM_BoosterState_VALUE = 123;
    /**
     * <code>DOTA_UM_WillPurchaseAlert = 124;</code>
     */
    public static final int DOTA_UM_WillPurchaseAlert_VALUE = 124;
    /**
     * <code>DOTA_UM_TutorialMinimapPosition = 125;</code>
     */
    public static final int DOTA_UM_TutorialMinimapPosition_VALUE = 125;
    /**
     * <code>DOTA_UM_PlayerMMR = 126;</code>
     */
    public static final int DOTA_UM_PlayerMMR_VALUE = 126;
    /**
     * <code>DOTA_UM_AbilitySteal = 127;</code>
     */
    public static final int DOTA_UM_AbilitySteal_VALUE = 127;
    /**
     * <code>DOTA_UM_CourierKilledAlert = 128;</code>
     */
    public static final int DOTA_UM_CourierKilledAlert_VALUE = 128;
    /**
     * <code>DOTA_UM_EnemyItemAlert = 129;</code>
     */
    public static final int DOTA_UM_EnemyItemAlert_VALUE = 129;
    /**
     * <code>DOTA_UM_StatsMatchDetails = 130;</code>
     */
    public static final int DOTA_UM_StatsMatchDetails_VALUE = 130;
    /**
     * <code>DOTA_UM_MiniTaunt = 131;</code>
     */
    public static final int DOTA_UM_MiniTaunt_VALUE = 131;
    /**
     * <code>DOTA_UM_BuyBackStateAlert = 132;</code>
     */
    public static final int DOTA_UM_BuyBackStateAlert_VALUE = 132;
    /**
     * <code>DOTA_UM_QuickBuyAlert = 133;</code>
     */
    public static final int DOTA_UM_QuickBuyAlert_VALUE = 133;
    /**
     * <code>DOTA_UM_StatsHeroDetails = 134;</code>
     */
    public static final int DOTA_UM_StatsHeroDetails_VALUE = 134;
    /**
     * <code>DOTA_UM_PredictionResult = 135;</code>
     */
    public static final int DOTA_UM_PredictionResult_VALUE = 135;
    /**
     * <code>DOTA_UM_ModifierAlert = 136;</code>
     */
    public static final int DOTA_UM_ModifierAlert_VALUE = 136;
    /**
     * <code>DOTA_UM_HPManaAlert = 137;</code>
     */
    public static final int DOTA_UM_HPManaAlert_VALUE = 137;
    /**
     * <code>DOTA_UM_GlyphAlert = 138;</code>
     */
    public static final int DOTA_UM_GlyphAlert_VALUE = 138;
    /**
     * <code>DOTA_UM_BeastChat = 139;</code>
     */
    public static final int DOTA_UM_BeastChat_VALUE = 139;
    /**
     * <code>DOTA_UM_SpectatorPlayerUnitOrders = 140;</code>
     */
    public static final int DOTA_UM_SpectatorPlayerUnitOrders_VALUE = 140;
    /**
     * <code>DOTA_UM_CompendiumState = 141;</code>
     */
    public static final int DOTA_UM_CompendiumState_VALUE = 141;
    /**
     * <code>DOTA_UM_ProjectionAbility = 142;</code>
     */
    public static final int DOTA_UM_ProjectionAbility_VALUE = 142;
    /**
     * <code>DOTA_UM_ProjectionEvent = 143;</code>
     */
    public static final int DOTA_UM_ProjectionEvent_VALUE = 143;


    public final int getNumber() { return value; }

    public static EDotaUserMessages valueOf(int value) {
      switch (value) {
        case 64: return DOTA_UM_AddUnitToSelection;
        case 65: return DOTA_UM_AIDebugLine;
        case 66: return DOTA_UM_ChatEvent;
        case 67: return DOTA_UM_CombatHeroPositions;
        case 68: return DOTA_UM_CombatLogData;
        case 70: return DOTA_UM_CombatLogShowDeath;
        case 71: return DOTA_UM_CreateLinearProjectile;
        case 72: return DOTA_UM_DestroyLinearProjectile;
        case 73: return DOTA_UM_DodgeTrackingProjectiles;
        case 74: return DOTA_UM_GlobalLightColor;
        case 75: return DOTA_UM_GlobalLightDirection;
        case 76: return DOTA_UM_InvalidCommand;
        case 77: return DOTA_UM_LocationPing;
        case 78: return DOTA_UM_MapLine;
        case 79: return DOTA_UM_MiniKillCamInfo;
        case 80: return DOTA_UM_MinimapDebugPoint;
        case 81: return DOTA_UM_MinimapEvent;
        case 82: return DOTA_UM_NevermoreRequiem;
        case 83: return DOTA_UM_OverheadEvent;
        case 84: return DOTA_UM_SetNextAutobuyItem;
        case 85: return DOTA_UM_SharedCooldown;
        case 86: return DOTA_UM_SpectatorPlayerClick;
        case 87: return DOTA_UM_TutorialTipInfo;
        case 88: return DOTA_UM_UnitEvent;
        case 89: return DOTA_UM_ParticleManager;
        case 90: return DOTA_UM_BotChat;
        case 91: return DOTA_UM_HudError;
        case 92: return DOTA_UM_ItemPurchased;
        case 93: return DOTA_UM_Ping;
        case 94: return DOTA_UM_ItemFound;
        case 95: return DOTA_UM_CharacterSpeakConcept;
        case 96: return DOTA_UM_SwapVerify;
        case 97: return DOTA_UM_WorldLine;
        case 98: return DOTA_UM_TournamentDrop;
        case 99: return DOTA_UM_ItemAlert;
        case 100: return DOTA_UM_HalloweenDrops;
        case 101: return DOTA_UM_ChatWheel;
        case 102: return DOTA_UM_ReceivedXmasGift;
        case 103: return DOTA_UM_UpdateSharedContent;
        case 104: return DOTA_UM_TutorialRequestExp;
        case 105: return DOTA_UM_TutorialPingMinimap;
        case 106: return DOTA_UM_GamerulesStateChanged;
        case 107: return DOTA_UM_ShowSurvey;
        case 108: return DOTA_UM_TutorialFade;
        case 109: return DOTA_UM_AddQuestLogEntry;
        case 110: return DOTA_UM_SendStatPopup;
        case 111: return DOTA_UM_TutorialFinish;
        case 112: return DOTA_UM_SendRoshanPopup;
        case 113: return DOTA_UM_SendGenericToolTip;
        case 114: return DOTA_UM_SendFinalGold;
        case 115: return DOTA_UM_CustomMsg;
        case 116: return DOTA_UM_CoachHUDPing;
        case 117: return DOTA_UM_ClientLoadGridNav;
        case 118: return DOTA_UM_AbilityPing;
        case 119: return DOTA_UM_ShowGenericPopup;
        case 120: return DOTA_UM_VoteStart;
        case 121: return DOTA_UM_VoteUpdate;
        case 122: return DOTA_UM_VoteEnd;
        case 123: return DOTA_UM_BoosterState;
        case 124: return DOTA_UM_WillPurchaseAlert;
        case 125: return DOTA_UM_TutorialMinimapPosition;
        case 126: return DOTA_UM_PlayerMMR;
        case 127: return DOTA_UM_AbilitySteal;
        case 128: return DOTA_UM_CourierKilledAlert;
        case 129: return DOTA_UM_EnemyItemAlert;
        case 130: return DOTA_UM_StatsMatchDetails;
        case 131: return DOTA_UM_MiniTaunt;
        case 132: return DOTA_UM_BuyBackStateAlert;
        case 133: return DOTA_UM_QuickBuyAlert;
        case 134: return DOTA_UM_StatsHeroDetails;
        case 135: return DOTA_UM_PredictionResult;
        case 136: return DOTA_UM_ModifierAlert;
        case 137: return DOTA_UM_HPManaAlert;
        case 138: return DOTA_UM_GlyphAlert;
        case 139: return DOTA_UM_BeastChat;
        case 140: return DOTA_UM_SpectatorPlayerUnitOrders;
        case 141: return DOTA_UM_CompendiumState;
        case 142: return DOTA_UM_ProjectionAbility;
        case 143: return DOTA_UM_ProjectionEvent;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDotaUserMessages>() {
            public EDotaUserMessages findValueByNumber(int number) {
              return EDotaUserMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s1.proto.S1DotaUserMessages.getDescriptor().getEnumTypes().get(0);
    }

    private static final EDotaUserMessages[] VALUES = values();

    public static EDotaUserMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDotaUserMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDotaUserMessages)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032s1_dota_usermessages.proto*\325\021\n\021EDotaUs" +
      "erMessages\022\036\n\032DOTA_UM_AddUnitToSelection" +
      "\020@\022\027\n\023DOTA_UM_AIDebugLine\020A\022\025\n\021DOTA_UM_C" +
      "hatEvent\020B\022\037\n\033DOTA_UM_CombatHeroPosition" +
      "s\020C\022\031\n\025DOTA_UM_CombatLogData\020D\022\036\n\032DOTA_U" +
      "M_CombatLogShowDeath\020F\022\"\n\036DOTA_UM_Create" +
      "LinearProjectile\020G\022#\n\037DOTA_UM_DestroyLin" +
      "earProjectile\020H\022$\n DOTA_UM_DodgeTracking" +
      "Projectiles\020I\022\034\n\030DOTA_UM_GlobalLightColo" +
      "r\020J\022 \n\034DOTA_UM_GlobalLightDirection\020K\022\032\n",
      "\026DOTA_UM_InvalidCommand\020L\022\030\n\024DOTA_UM_Loc" +
      "ationPing\020M\022\023\n\017DOTA_UM_MapLine\020N\022\033\n\027DOTA" +
      "_UM_MiniKillCamInfo\020O\022\035\n\031DOTA_UM_Minimap" +
      "DebugPoint\020P\022\030\n\024DOTA_UM_MinimapEvent\020Q\022\034" +
      "\n\030DOTA_UM_NevermoreRequiem\020R\022\031\n\025DOTA_UM_" +
      "OverheadEvent\020S\022\036\n\032DOTA_UM_SetNextAutobu" +
      "yItem\020T\022\032\n\026DOTA_UM_SharedCooldown\020U\022 \n\034D" +
      "OTA_UM_SpectatorPlayerClick\020V\022\033\n\027DOTA_UM" +
      "_TutorialTipInfo\020W\022\025\n\021DOTA_UM_UnitEvent\020" +
      "X\022\033\n\027DOTA_UM_ParticleManager\020Y\022\023\n\017DOTA_U",
      "M_BotChat\020Z\022\024\n\020DOTA_UM_HudError\020[\022\031\n\025DOT" +
      "A_UM_ItemPurchased\020\\\022\020\n\014DOTA_UM_Ping\020]\022\025" +
      "\n\021DOTA_UM_ItemFound\020^\022!\n\035DOTA_UM_Charact" +
      "erSpeakConcept\020_\022\026\n\022DOTA_UM_SwapVerify\020`" +
      "\022\025\n\021DOTA_UM_WorldLine\020a\022\032\n\026DOTA_UM_Tourn" +
      "amentDrop\020b\022\025\n\021DOTA_UM_ItemAlert\020c\022\032\n\026DO" +
      "TA_UM_HalloweenDrops\020d\022\025\n\021DOTA_UM_ChatWh" +
      "eel\020e\022\034\n\030DOTA_UM_ReceivedXmasGift\020f\022\037\n\033D" +
      "OTA_UM_UpdateSharedContent\020g\022\036\n\032DOTA_UM_" +
      "TutorialRequestExp\020h\022\037\n\033DOTA_UM_Tutorial",
      "PingMinimap\020i\022!\n\035DOTA_UM_GamerulesStateC" +
      "hanged\020j\022\026\n\022DOTA_UM_ShowSurvey\020k\022\030\n\024DOTA" +
      "_UM_TutorialFade\020l\022\034\n\030DOTA_UM_AddQuestLo" +
      "gEntry\020m\022\031\n\025DOTA_UM_SendStatPopup\020n\022\032\n\026D" +
      "OTA_UM_TutorialFinish\020o\022\033\n\027DOTA_UM_SendR" +
      "oshanPopup\020p\022\036\n\032DOTA_UM_SendGenericToolT" +
      "ip\020q\022\031\n\025DOTA_UM_SendFinalGold\020r\022\025\n\021DOTA_" +
      "UM_CustomMsg\020s\022\030\n\024DOTA_UM_CoachHUDPing\020t" +
      "\022\035\n\031DOTA_UM_ClientLoadGridNav\020u\022\027\n\023DOTA_" +
      "UM_AbilityPing\020v\022\034\n\030DOTA_UM_ShowGenericP",
      "opup\020w\022\025\n\021DOTA_UM_VoteStart\020x\022\026\n\022DOTA_UM" +
      "_VoteUpdate\020y\022\023\n\017DOTA_UM_VoteEnd\020z\022\030\n\024DO" +
      "TA_UM_BoosterState\020{\022\035\n\031DOTA_UM_WillPurc" +
      "haseAlert\020|\022#\n\037DOTA_UM_TutorialMinimapPo" +
      "sition\020}\022\025\n\021DOTA_UM_PlayerMMR\020~\022\030\n\024DOTA_" +
      "UM_AbilitySteal\020\177\022\037\n\032DOTA_UM_CourierKill" +
      "edAlert\020\200\001\022\033\n\026DOTA_UM_EnemyItemAlert\020\201\001\022" +
      "\036\n\031DOTA_UM_StatsMatchDetails\020\202\001\022\026\n\021DOTA_" +
      "UM_MiniTaunt\020\203\001\022\036\n\031DOTA_UM_BuyBackStateA" +
      "lert\020\204\001\022\032\n\025DOTA_UM_QuickBuyAlert\020\205\001\022\035\n\030D",
      "OTA_UM_StatsHeroDetails\020\206\001\022\035\n\030DOTA_UM_Pr" +
      "edictionResult\020\207\001\022\032\n\025DOTA_UM_ModifierAle" +
      "rt\020\210\001\022\030\n\023DOTA_UM_HPManaAlert\020\211\001\022\027\n\022DOTA_" +
      "UM_GlyphAlert\020\212\001\022\026\n\021DOTA_UM_BeastChat\020\213\001" +
      "\022&\n!DOTA_UM_SpectatorPlayerUnitOrders\020\214\001" +
      "\022\034\n\027DOTA_UM_CompendiumState\020\215\001\022\036\n\031DOTA_U" +
      "M_ProjectionAbility\020\216\001\022\034\n\027DOTA_UM_Projec" +
      "tionEvent\020\217\001B@\n%skadistats.clarity.wire." +
      "dota.s1.protoB\022S1DotaUserMessagesH\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
