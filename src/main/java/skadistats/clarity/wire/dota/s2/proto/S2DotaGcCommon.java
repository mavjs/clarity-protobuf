// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2_dota_gcmessages_common.proto

package skadistats.clarity.wire.dota.s2.proto;

public final class S2DotaGcCommon {
  private S2DotaGcCommon() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code DOTA_GameMode}
   */
  public enum DOTA_GameMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    DOTA_GAMEMODE_NONE(0, 0),
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    DOTA_GAMEMODE_AP(1, 1),
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    DOTA_GAMEMODE_CM(2, 2),
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    DOTA_GAMEMODE_RD(3, 3),
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    DOTA_GAMEMODE_SD(4, 4),
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    DOTA_GAMEMODE_AR(5, 5),
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    DOTA_GAMEMODE_INTRO(6, 6),
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    DOTA_GAMEMODE_HW(7, 7),
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    DOTA_GAMEMODE_REVERSE_CM(8, 8),
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    DOTA_GAMEMODE_XMAS(9, 9),
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    DOTA_GAMEMODE_TUTORIAL(10, 10),
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    DOTA_GAMEMODE_MO(11, 11),
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    DOTA_GAMEMODE_LP(12, 12),
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    DOTA_GAMEMODE_POOL1(13, 13),
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    DOTA_GAMEMODE_FH(14, 14),
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    DOTA_GAMEMODE_CUSTOM(15, 15),
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    DOTA_GAMEMODE_CD(16, 16),
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    DOTA_GAMEMODE_BD(17, 17),
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    DOTA_GAMEMODE_ABILITY_DRAFT(18, 18),
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    DOTA_GAMEMODE_EVENT(19, 19),
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    DOTA_GAMEMODE_ARDM(20, 20),
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    DOTA_GAMEMODE_1V1MID(21, 21),
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    DOTA_GAMEMODE_ALL_DRAFT(22, 22),
    /**
     * <code>DOTA_GAMEMODE_TURBO = 23;</code>
     */
    DOTA_GAMEMODE_TURBO(23, 23),
    /**
     * <code>DOTA_GAMEMODE_MUTATION = 24;</code>
     */
    DOTA_GAMEMODE_MUTATION(24, 24),
    /**
     * <code>DOTA_GAMEMODE_COACHES_CHALLENGE = 25;</code>
     */
    DOTA_GAMEMODE_COACHES_CHALLENGE(25, 25),
    ;

    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    public static final int DOTA_GAMEMODE_NONE_VALUE = 0;
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    public static final int DOTA_GAMEMODE_AP_VALUE = 1;
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    public static final int DOTA_GAMEMODE_CM_VALUE = 2;
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    public static final int DOTA_GAMEMODE_RD_VALUE = 3;
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    public static final int DOTA_GAMEMODE_SD_VALUE = 4;
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    public static final int DOTA_GAMEMODE_AR_VALUE = 5;
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    public static final int DOTA_GAMEMODE_INTRO_VALUE = 6;
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    public static final int DOTA_GAMEMODE_HW_VALUE = 7;
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    public static final int DOTA_GAMEMODE_REVERSE_CM_VALUE = 8;
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    public static final int DOTA_GAMEMODE_XMAS_VALUE = 9;
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    public static final int DOTA_GAMEMODE_TUTORIAL_VALUE = 10;
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    public static final int DOTA_GAMEMODE_MO_VALUE = 11;
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    public static final int DOTA_GAMEMODE_LP_VALUE = 12;
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    public static final int DOTA_GAMEMODE_POOL1_VALUE = 13;
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    public static final int DOTA_GAMEMODE_FH_VALUE = 14;
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    public static final int DOTA_GAMEMODE_CUSTOM_VALUE = 15;
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    public static final int DOTA_GAMEMODE_CD_VALUE = 16;
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    public static final int DOTA_GAMEMODE_BD_VALUE = 17;
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    public static final int DOTA_GAMEMODE_ABILITY_DRAFT_VALUE = 18;
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    public static final int DOTA_GAMEMODE_EVENT_VALUE = 19;
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    public static final int DOTA_GAMEMODE_ARDM_VALUE = 20;
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    public static final int DOTA_GAMEMODE_1V1MID_VALUE = 21;
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    public static final int DOTA_GAMEMODE_ALL_DRAFT_VALUE = 22;
    /**
     * <code>DOTA_GAMEMODE_TURBO = 23;</code>
     */
    public static final int DOTA_GAMEMODE_TURBO_VALUE = 23;
    /**
     * <code>DOTA_GAMEMODE_MUTATION = 24;</code>
     */
    public static final int DOTA_GAMEMODE_MUTATION_VALUE = 24;
    /**
     * <code>DOTA_GAMEMODE_COACHES_CHALLENGE = 25;</code>
     */
    public static final int DOTA_GAMEMODE_COACHES_CHALLENGE_VALUE = 25;


    public final int getNumber() { return value; }

    public static DOTA_GameMode valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GAMEMODE_NONE;
        case 1: return DOTA_GAMEMODE_AP;
        case 2: return DOTA_GAMEMODE_CM;
        case 3: return DOTA_GAMEMODE_RD;
        case 4: return DOTA_GAMEMODE_SD;
        case 5: return DOTA_GAMEMODE_AR;
        case 6: return DOTA_GAMEMODE_INTRO;
        case 7: return DOTA_GAMEMODE_HW;
        case 8: return DOTA_GAMEMODE_REVERSE_CM;
        case 9: return DOTA_GAMEMODE_XMAS;
        case 10: return DOTA_GAMEMODE_TUTORIAL;
        case 11: return DOTA_GAMEMODE_MO;
        case 12: return DOTA_GAMEMODE_LP;
        case 13: return DOTA_GAMEMODE_POOL1;
        case 14: return DOTA_GAMEMODE_FH;
        case 15: return DOTA_GAMEMODE_CUSTOM;
        case 16: return DOTA_GAMEMODE_CD;
        case 17: return DOTA_GAMEMODE_BD;
        case 18: return DOTA_GAMEMODE_ABILITY_DRAFT;
        case 19: return DOTA_GAMEMODE_EVENT;
        case 20: return DOTA_GAMEMODE_ARDM;
        case 21: return DOTA_GAMEMODE_1V1MID;
        case 22: return DOTA_GAMEMODE_ALL_DRAFT;
        case 23: return DOTA_GAMEMODE_TURBO;
        case 24: return DOTA_GAMEMODE_MUTATION;
        case 25: return DOTA_GAMEMODE_COACHES_CHALLENGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>() {
            public DOTA_GameMode findValueByNumber(int number) {
              return DOTA_GameMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.getDescriptor().getEnumTypes().get(0);
    }

    private static final DOTA_GameMode[] VALUES = values();

    public static DOTA_GameMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GameMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GameMode)
  }

  /**
   * Protobuf enum {@code DOTA_GC_TEAM}
   */
  public enum DOTA_GC_TEAM
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    DOTA_GC_TEAM_GOOD_GUYS(0, 0),
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    DOTA_GC_TEAM_BAD_GUYS(1, 1),
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    DOTA_GC_TEAM_BROADCASTER(2, 2),
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    DOTA_GC_TEAM_SPECTATOR(3, 3),
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    DOTA_GC_TEAM_PLAYER_POOL(4, 4),
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    DOTA_GC_TEAM_NOTEAM(5, 5),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_1 = 6;</code>
     */
    DOTA_GC_TEAM_CUSTOM_1(6, 6),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_2 = 7;</code>
     */
    DOTA_GC_TEAM_CUSTOM_2(7, 7),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_3 = 8;</code>
     */
    DOTA_GC_TEAM_CUSTOM_3(8, 8),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_4 = 9;</code>
     */
    DOTA_GC_TEAM_CUSTOM_4(9, 9),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_5 = 10;</code>
     */
    DOTA_GC_TEAM_CUSTOM_5(10, 10),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_6 = 11;</code>
     */
    DOTA_GC_TEAM_CUSTOM_6(11, 11),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_7 = 12;</code>
     */
    DOTA_GC_TEAM_CUSTOM_7(12, 12),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_8 = 13;</code>
     */
    DOTA_GC_TEAM_CUSTOM_8(13, 13),
    /**
     * <code>DOTA_GC_TEAM_NEUTRALS = 14;</code>
     */
    DOTA_GC_TEAM_NEUTRALS(14, 14),
    ;

    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    public static final int DOTA_GC_TEAM_GOOD_GUYS_VALUE = 0;
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    public static final int DOTA_GC_TEAM_BAD_GUYS_VALUE = 1;
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    public static final int DOTA_GC_TEAM_BROADCASTER_VALUE = 2;
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    public static final int DOTA_GC_TEAM_SPECTATOR_VALUE = 3;
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    public static final int DOTA_GC_TEAM_PLAYER_POOL_VALUE = 4;
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    public static final int DOTA_GC_TEAM_NOTEAM_VALUE = 5;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_1 = 6;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_1_VALUE = 6;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_2 = 7;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_2_VALUE = 7;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_3 = 8;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_3_VALUE = 8;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_4 = 9;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_4_VALUE = 9;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_5 = 10;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_5_VALUE = 10;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_6 = 11;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_6_VALUE = 11;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_7 = 12;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_7_VALUE = 12;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_8 = 13;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_8_VALUE = 13;
    /**
     * <code>DOTA_GC_TEAM_NEUTRALS = 14;</code>
     */
    public static final int DOTA_GC_TEAM_NEUTRALS_VALUE = 14;


    public final int getNumber() { return value; }

    public static DOTA_GC_TEAM valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GC_TEAM_GOOD_GUYS;
        case 1: return DOTA_GC_TEAM_BAD_GUYS;
        case 2: return DOTA_GC_TEAM_BROADCASTER;
        case 3: return DOTA_GC_TEAM_SPECTATOR;
        case 4: return DOTA_GC_TEAM_PLAYER_POOL;
        case 5: return DOTA_GC_TEAM_NOTEAM;
        case 6: return DOTA_GC_TEAM_CUSTOM_1;
        case 7: return DOTA_GC_TEAM_CUSTOM_2;
        case 8: return DOTA_GC_TEAM_CUSTOM_3;
        case 9: return DOTA_GC_TEAM_CUSTOM_4;
        case 10: return DOTA_GC_TEAM_CUSTOM_5;
        case 11: return DOTA_GC_TEAM_CUSTOM_6;
        case 12: return DOTA_GC_TEAM_CUSTOM_7;
        case 13: return DOTA_GC_TEAM_CUSTOM_8;
        case 14: return DOTA_GC_TEAM_NEUTRALS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>() {
            public DOTA_GC_TEAM findValueByNumber(int number) {
              return DOTA_GC_TEAM.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.getDescriptor().getEnumTypes().get(1);
    }

    private static final DOTA_GC_TEAM[] VALUES = values();

    public static DOTA_GC_TEAM valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GC_TEAM(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GC_TEAM)
  }

  /**
   * Protobuf enum {@code EEvent}
   */
  public enum EEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EVENT_ID_NONE = 0;</code>
     */
    EVENT_ID_NONE(0, 0),
    /**
     * <code>EVENT_ID_DIRETIDE = 1;</code>
     */
    EVENT_ID_DIRETIDE(1, 1),
    /**
     * <code>EVENT_ID_SPRING_FESTIVAL = 2;</code>
     */
    EVENT_ID_SPRING_FESTIVAL(2, 2),
    /**
     * <code>EVENT_ID_FROSTIVUS_2013 = 3;</code>
     */
    EVENT_ID_FROSTIVUS_2013(3, 3),
    /**
     * <code>EVENT_ID_COMPENDIUM_2014 = 4;</code>
     */
    EVENT_ID_COMPENDIUM_2014(4, 4),
    /**
     * <code>EVENT_ID_NEXON_PC_BANG = 5;</code>
     */
    EVENT_ID_NEXON_PC_BANG(5, 5),
    /**
     * <code>EVENT_ID_PWRD_DAC_2015 = 6;</code>
     */
    EVENT_ID_PWRD_DAC_2015(6, 6),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015 = 7;</code>
     */
    EVENT_ID_NEW_BLOOM_2015(7, 7),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2015 = 8;</code>
     */
    EVENT_ID_INTERNATIONAL_2015(8, 8),
    /**
     * <code>EVENT_ID_FALL_MAJOR_2015 = 9;</code>
     */
    EVENT_ID_FALL_MAJOR_2015(9, 9),
    /**
     * <code>EVENT_ID_ORACLE_PA = 10;</code>
     */
    EVENT_ID_ORACLE_PA(10, 10),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015_PREBEAST = 11;</code>
     */
    EVENT_ID_NEW_BLOOM_2015_PREBEAST(11, 11),
    /**
     * <code>EVENT_ID_FROSTIVUS = 12;</code>
     */
    EVENT_ID_FROSTIVUS(12, 12),
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2016 = 13;</code>
     */
    EVENT_ID_WINTER_MAJOR_2016(13, 13),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2016 = 14;</code>
     */
    EVENT_ID_INTERNATIONAL_2016(14, 14),
    /**
     * <code>EVENT_ID_FALL_MAJOR_2016 = 15;</code>
     */
    EVENT_ID_FALL_MAJOR_2016(15, 15),
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2017 = 16;</code>
     */
    EVENT_ID_WINTER_MAJOR_2017(16, 16),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2017 = 17;</code>
     */
    EVENT_ID_NEW_BLOOM_2017(17, 17),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2017 = 18;</code>
     */
    EVENT_ID_INTERNATIONAL_2017(18, 18),
    /**
     * <code>EVENT_ID_PLUS_SUBSCRIPTION = 19;</code>
     */
    EVENT_ID_PLUS_SUBSCRIPTION(19, 19),
    /**
     * <code>EVENT_ID_SINGLES_DAY_2017 = 20;</code>
     */
    EVENT_ID_SINGLES_DAY_2017(20, 20),
    /**
     * <code>EVENT_ID_FROSTIVUS_2017 = 21;</code>
     */
    EVENT_ID_FROSTIVUS_2017(21, 21),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2018 = 22;</code>
     */
    EVENT_ID_INTERNATIONAL_2018(22, 22),
    /**
     * <code>EVENT_ID_FROSTIVUS_2018 = 23;</code>
     */
    EVENT_ID_FROSTIVUS_2018(23, 23),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2019 = 24;</code>
     */
    EVENT_ID_NEW_BLOOM_2019(24, 24),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2019 = 25;</code>
     */
    EVENT_ID_INTERNATIONAL_2019(25, 25),
    /**
     * <code>EVENT_ID_NEW_PLAYER_EXPERIENCE = 26;</code>
     */
    EVENT_ID_NEW_PLAYER_EXPERIENCE(26, 26),
    /**
     * <code>EVENT_ID_FROSTIVUS_2019 = 27;</code>
     */
    EVENT_ID_FROSTIVUS_2019(27, 27),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2020 = 28;</code>
     */
    EVENT_ID_NEW_BLOOM_2020(28, 28),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2020 = 29;</code>
     */
    EVENT_ID_INTERNATIONAL_2020(29, 29),
    /**
     * <code>EVENT_ID_TEAM_FANDOM = 30;</code>
     */
    EVENT_ID_TEAM_FANDOM(30, 30),
    /**
     * <code>EVENT_ID_DIRETIDE_2020 = 31;</code>
     */
    EVENT_ID_DIRETIDE_2020(31, 31),
    /**
     * <code>EVENT_ID_SPRING_2021 = 32;</code>
     */
    EVENT_ID_SPRING_2021(32, 32),
    /**
     * <code>EVENT_ID_FALL_2021 = 33;</code>
     */
    EVENT_ID_FALL_2021(33, 33),
    /**
     * <code>EVENT_ID_TEAM_FANDOM_FALL_2021 = 34;</code>
     */
    EVENT_ID_TEAM_FANDOM_FALL_2021(34, 34),
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR2 = 35;</code>
     */
    EVENT_ID_TEAM_2021_2022_TOUR2(35, 35),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2022 = 36;</code>
     */
    EVENT_ID_INTERNATIONAL_2022(36, 36),
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR3 = 37;</code>
     */
    EVENT_ID_TEAM_2021_2022_TOUR3(37, 37),
    /**
     * <code>EVENT_ID_TEAM_INTERNATIONAL_2022 = 38;</code>
     */
    EVENT_ID_TEAM_INTERNATIONAL_2022(38, 38),
    /**
     * <code>EVENT_ID_PERMANENT_GRANTS = 39;</code>
     */
    EVENT_ID_PERMANENT_GRANTS(39, 39),
    /**
     * <code>EVENT_ID_MUERTA_RELEASE_SPRING2023 = 40;</code>
     */
    EVENT_ID_MUERTA_RELEASE_SPRING2023(40, 40),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR1 = 41;</code>
     */
    EVENT_ID_TEAM_2023_TOUR1(41, 41),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR2 = 42;</code>
     */
    EVENT_ID_TEAM_2023_TOUR2(42, 42),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR3 = 43;</code>
     */
    EVENT_ID_TEAM_2023_TOUR3(43, 43),
    /**
     * <code>EVENT_ID_COUNT = 44;</code>
     */
    EVENT_ID_COUNT(44, 44),
    ;

    /**
     * <code>EVENT_ID_NONE = 0;</code>
     */
    public static final int EVENT_ID_NONE_VALUE = 0;
    /**
     * <code>EVENT_ID_DIRETIDE = 1;</code>
     */
    public static final int EVENT_ID_DIRETIDE_VALUE = 1;
    /**
     * <code>EVENT_ID_SPRING_FESTIVAL = 2;</code>
     */
    public static final int EVENT_ID_SPRING_FESTIVAL_VALUE = 2;
    /**
     * <code>EVENT_ID_FROSTIVUS_2013 = 3;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2013_VALUE = 3;
    /**
     * <code>EVENT_ID_COMPENDIUM_2014 = 4;</code>
     */
    public static final int EVENT_ID_COMPENDIUM_2014_VALUE = 4;
    /**
     * <code>EVENT_ID_NEXON_PC_BANG = 5;</code>
     */
    public static final int EVENT_ID_NEXON_PC_BANG_VALUE = 5;
    /**
     * <code>EVENT_ID_PWRD_DAC_2015 = 6;</code>
     */
    public static final int EVENT_ID_PWRD_DAC_2015_VALUE = 6;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015 = 7;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2015_VALUE = 7;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2015 = 8;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2015_VALUE = 8;
    /**
     * <code>EVENT_ID_FALL_MAJOR_2015 = 9;</code>
     */
    public static final int EVENT_ID_FALL_MAJOR_2015_VALUE = 9;
    /**
     * <code>EVENT_ID_ORACLE_PA = 10;</code>
     */
    public static final int EVENT_ID_ORACLE_PA_VALUE = 10;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015_PREBEAST = 11;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2015_PREBEAST_VALUE = 11;
    /**
     * <code>EVENT_ID_FROSTIVUS = 12;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_VALUE = 12;
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2016 = 13;</code>
     */
    public static final int EVENT_ID_WINTER_MAJOR_2016_VALUE = 13;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2016 = 14;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2016_VALUE = 14;
    /**
     * <code>EVENT_ID_FALL_MAJOR_2016 = 15;</code>
     */
    public static final int EVENT_ID_FALL_MAJOR_2016_VALUE = 15;
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2017 = 16;</code>
     */
    public static final int EVENT_ID_WINTER_MAJOR_2017_VALUE = 16;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2017 = 17;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2017_VALUE = 17;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2017 = 18;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2017_VALUE = 18;
    /**
     * <code>EVENT_ID_PLUS_SUBSCRIPTION = 19;</code>
     */
    public static final int EVENT_ID_PLUS_SUBSCRIPTION_VALUE = 19;
    /**
     * <code>EVENT_ID_SINGLES_DAY_2017 = 20;</code>
     */
    public static final int EVENT_ID_SINGLES_DAY_2017_VALUE = 20;
    /**
     * <code>EVENT_ID_FROSTIVUS_2017 = 21;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2017_VALUE = 21;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2018 = 22;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2018_VALUE = 22;
    /**
     * <code>EVENT_ID_FROSTIVUS_2018 = 23;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2018_VALUE = 23;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2019 = 24;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2019_VALUE = 24;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2019 = 25;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2019_VALUE = 25;
    /**
     * <code>EVENT_ID_NEW_PLAYER_EXPERIENCE = 26;</code>
     */
    public static final int EVENT_ID_NEW_PLAYER_EXPERIENCE_VALUE = 26;
    /**
     * <code>EVENT_ID_FROSTIVUS_2019 = 27;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2019_VALUE = 27;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2020 = 28;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2020_VALUE = 28;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2020 = 29;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2020_VALUE = 29;
    /**
     * <code>EVENT_ID_TEAM_FANDOM = 30;</code>
     */
    public static final int EVENT_ID_TEAM_FANDOM_VALUE = 30;
    /**
     * <code>EVENT_ID_DIRETIDE_2020 = 31;</code>
     */
    public static final int EVENT_ID_DIRETIDE_2020_VALUE = 31;
    /**
     * <code>EVENT_ID_SPRING_2021 = 32;</code>
     */
    public static final int EVENT_ID_SPRING_2021_VALUE = 32;
    /**
     * <code>EVENT_ID_FALL_2021 = 33;</code>
     */
    public static final int EVENT_ID_FALL_2021_VALUE = 33;
    /**
     * <code>EVENT_ID_TEAM_FANDOM_FALL_2021 = 34;</code>
     */
    public static final int EVENT_ID_TEAM_FANDOM_FALL_2021_VALUE = 34;
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR2 = 35;</code>
     */
    public static final int EVENT_ID_TEAM_2021_2022_TOUR2_VALUE = 35;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2022 = 36;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2022_VALUE = 36;
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR3 = 37;</code>
     */
    public static final int EVENT_ID_TEAM_2021_2022_TOUR3_VALUE = 37;
    /**
     * <code>EVENT_ID_TEAM_INTERNATIONAL_2022 = 38;</code>
     */
    public static final int EVENT_ID_TEAM_INTERNATIONAL_2022_VALUE = 38;
    /**
     * <code>EVENT_ID_PERMANENT_GRANTS = 39;</code>
     */
    public static final int EVENT_ID_PERMANENT_GRANTS_VALUE = 39;
    /**
     * <code>EVENT_ID_MUERTA_RELEASE_SPRING2023 = 40;</code>
     */
    public static final int EVENT_ID_MUERTA_RELEASE_SPRING2023_VALUE = 40;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR1 = 41;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR1_VALUE = 41;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR2 = 42;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR2_VALUE = 42;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR3 = 43;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR3_VALUE = 43;
    /**
     * <code>EVENT_ID_COUNT = 44;</code>
     */
    public static final int EVENT_ID_COUNT_VALUE = 44;


    public final int getNumber() { return value; }

    public static EEvent valueOf(int value) {
      switch (value) {
        case 0: return EVENT_ID_NONE;
        case 1: return EVENT_ID_DIRETIDE;
        case 2: return EVENT_ID_SPRING_FESTIVAL;
        case 3: return EVENT_ID_FROSTIVUS_2013;
        case 4: return EVENT_ID_COMPENDIUM_2014;
        case 5: return EVENT_ID_NEXON_PC_BANG;
        case 6: return EVENT_ID_PWRD_DAC_2015;
        case 7: return EVENT_ID_NEW_BLOOM_2015;
        case 8: return EVENT_ID_INTERNATIONAL_2015;
        case 9: return EVENT_ID_FALL_MAJOR_2015;
        case 10: return EVENT_ID_ORACLE_PA;
        case 11: return EVENT_ID_NEW_BLOOM_2015_PREBEAST;
        case 12: return EVENT_ID_FROSTIVUS;
        case 13: return EVENT_ID_WINTER_MAJOR_2016;
        case 14: return EVENT_ID_INTERNATIONAL_2016;
        case 15: return EVENT_ID_FALL_MAJOR_2016;
        case 16: return EVENT_ID_WINTER_MAJOR_2017;
        case 17: return EVENT_ID_NEW_BLOOM_2017;
        case 18: return EVENT_ID_INTERNATIONAL_2017;
        case 19: return EVENT_ID_PLUS_SUBSCRIPTION;
        case 20: return EVENT_ID_SINGLES_DAY_2017;
        case 21: return EVENT_ID_FROSTIVUS_2017;
        case 22: return EVENT_ID_INTERNATIONAL_2018;
        case 23: return EVENT_ID_FROSTIVUS_2018;
        case 24: return EVENT_ID_NEW_BLOOM_2019;
        case 25: return EVENT_ID_INTERNATIONAL_2019;
        case 26: return EVENT_ID_NEW_PLAYER_EXPERIENCE;
        case 27: return EVENT_ID_FROSTIVUS_2019;
        case 28: return EVENT_ID_NEW_BLOOM_2020;
        case 29: return EVENT_ID_INTERNATIONAL_2020;
        case 30: return EVENT_ID_TEAM_FANDOM;
        case 31: return EVENT_ID_DIRETIDE_2020;
        case 32: return EVENT_ID_SPRING_2021;
        case 33: return EVENT_ID_FALL_2021;
        case 34: return EVENT_ID_TEAM_FANDOM_FALL_2021;
        case 35: return EVENT_ID_TEAM_2021_2022_TOUR2;
        case 36: return EVENT_ID_INTERNATIONAL_2022;
        case 37: return EVENT_ID_TEAM_2021_2022_TOUR3;
        case 38: return EVENT_ID_TEAM_INTERNATIONAL_2022;
        case 39: return EVENT_ID_PERMANENT_GRANTS;
        case 40: return EVENT_ID_MUERTA_RELEASE_SPRING2023;
        case 41: return EVENT_ID_TEAM_2023_TOUR1;
        case 42: return EVENT_ID_TEAM_2023_TOUR2;
        case 43: return EVENT_ID_TEAM_2023_TOUR3;
        case 44: return EVENT_ID_COUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EEvent>() {
            public EEvent findValueByNumber(int number) {
              return EEvent.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.getDescriptor().getEnumTypes().get(2);
    }

    private static final EEvent[] VALUES = values();

    public static EEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EEvent)
  }

  /**
   * Protobuf enum {@code EMatchOutcome}
   */
  public enum EMatchOutcome
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    k_EMatchOutcome_Unknown(0, 0),
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    k_EMatchOutcome_RadVictory(1, 2),
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    k_EMatchOutcome_DireVictory(2, 3),
    /**
     * <code>k_EMatchOutcome_NeutralVictory = 4;</code>
     */
    k_EMatchOutcome_NeutralVictory(3, 4),
    /**
     * <code>k_EMatchOutcome_NoTeamWinner = 5;</code>
     */
    k_EMatchOutcome_NoTeamWinner(4, 5),
    /**
     * <code>k_EMatchOutcome_Custom1Victory = 6;</code>
     */
    k_EMatchOutcome_Custom1Victory(5, 6),
    /**
     * <code>k_EMatchOutcome_Custom2Victory = 7;</code>
     */
    k_EMatchOutcome_Custom2Victory(6, 7),
    /**
     * <code>k_EMatchOutcome_Custom3Victory = 8;</code>
     */
    k_EMatchOutcome_Custom3Victory(7, 8),
    /**
     * <code>k_EMatchOutcome_Custom4Victory = 9;</code>
     */
    k_EMatchOutcome_Custom4Victory(8, 9),
    /**
     * <code>k_EMatchOutcome_Custom5Victory = 10;</code>
     */
    k_EMatchOutcome_Custom5Victory(9, 10),
    /**
     * <code>k_EMatchOutcome_Custom6Victory = 11;</code>
     */
    k_EMatchOutcome_Custom6Victory(10, 11),
    /**
     * <code>k_EMatchOutcome_Custom7Victory = 12;</code>
     */
    k_EMatchOutcome_Custom7Victory(11, 12),
    /**
     * <code>k_EMatchOutcome_Custom8Victory = 13;</code>
     */
    k_EMatchOutcome_Custom8Victory(12, 13),
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    k_EMatchOutcome_NotScored_PoorNetworkConditions(13, 64),
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    k_EMatchOutcome_NotScored_Leaver(14, 65),
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    k_EMatchOutcome_NotScored_ServerCrash(15, 66),
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    k_EMatchOutcome_NotScored_NeverStarted(16, 67),
    /**
     * <code>k_EMatchOutcome_NotScored_Canceled = 68;</code>
     */
    k_EMatchOutcome_NotScored_Canceled(17, 68),
    /**
     * <code>k_EMatchOutcome_NotScored_Suspicious = 69;</code>
     */
    k_EMatchOutcome_NotScored_Suspicious(18, 69),
    ;

    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    public static final int k_EMatchOutcome_Unknown_VALUE = 0;
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    public static final int k_EMatchOutcome_RadVictory_VALUE = 2;
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    public static final int k_EMatchOutcome_DireVictory_VALUE = 3;
    /**
     * <code>k_EMatchOutcome_NeutralVictory = 4;</code>
     */
    public static final int k_EMatchOutcome_NeutralVictory_VALUE = 4;
    /**
     * <code>k_EMatchOutcome_NoTeamWinner = 5;</code>
     */
    public static final int k_EMatchOutcome_NoTeamWinner_VALUE = 5;
    /**
     * <code>k_EMatchOutcome_Custom1Victory = 6;</code>
     */
    public static final int k_EMatchOutcome_Custom1Victory_VALUE = 6;
    /**
     * <code>k_EMatchOutcome_Custom2Victory = 7;</code>
     */
    public static final int k_EMatchOutcome_Custom2Victory_VALUE = 7;
    /**
     * <code>k_EMatchOutcome_Custom3Victory = 8;</code>
     */
    public static final int k_EMatchOutcome_Custom3Victory_VALUE = 8;
    /**
     * <code>k_EMatchOutcome_Custom4Victory = 9;</code>
     */
    public static final int k_EMatchOutcome_Custom4Victory_VALUE = 9;
    /**
     * <code>k_EMatchOutcome_Custom5Victory = 10;</code>
     */
    public static final int k_EMatchOutcome_Custom5Victory_VALUE = 10;
    /**
     * <code>k_EMatchOutcome_Custom6Victory = 11;</code>
     */
    public static final int k_EMatchOutcome_Custom6Victory_VALUE = 11;
    /**
     * <code>k_EMatchOutcome_Custom7Victory = 12;</code>
     */
    public static final int k_EMatchOutcome_Custom7Victory_VALUE = 12;
    /**
     * <code>k_EMatchOutcome_Custom8Victory = 13;</code>
     */
    public static final int k_EMatchOutcome_Custom8Victory_VALUE = 13;
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    public static final int k_EMatchOutcome_NotScored_PoorNetworkConditions_VALUE = 64;
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Leaver_VALUE = 65;
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    public static final int k_EMatchOutcome_NotScored_ServerCrash_VALUE = 66;
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    public static final int k_EMatchOutcome_NotScored_NeverStarted_VALUE = 67;
    /**
     * <code>k_EMatchOutcome_NotScored_Canceled = 68;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Canceled_VALUE = 68;
    /**
     * <code>k_EMatchOutcome_NotScored_Suspicious = 69;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Suspicious_VALUE = 69;


    public final int getNumber() { return value; }

    public static EMatchOutcome valueOf(int value) {
      switch (value) {
        case 0: return k_EMatchOutcome_Unknown;
        case 2: return k_EMatchOutcome_RadVictory;
        case 3: return k_EMatchOutcome_DireVictory;
        case 4: return k_EMatchOutcome_NeutralVictory;
        case 5: return k_EMatchOutcome_NoTeamWinner;
        case 6: return k_EMatchOutcome_Custom1Victory;
        case 7: return k_EMatchOutcome_Custom2Victory;
        case 8: return k_EMatchOutcome_Custom3Victory;
        case 9: return k_EMatchOutcome_Custom4Victory;
        case 10: return k_EMatchOutcome_Custom5Victory;
        case 11: return k_EMatchOutcome_Custom6Victory;
        case 12: return k_EMatchOutcome_Custom7Victory;
        case 13: return k_EMatchOutcome_Custom8Victory;
        case 64: return k_EMatchOutcome_NotScored_PoorNetworkConditions;
        case 65: return k_EMatchOutcome_NotScored_Leaver;
        case 66: return k_EMatchOutcome_NotScored_ServerCrash;
        case 67: return k_EMatchOutcome_NotScored_NeverStarted;
        case 68: return k_EMatchOutcome_NotScored_Canceled;
        case 69: return k_EMatchOutcome_NotScored_Suspicious;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>() {
            public EMatchOutcome findValueByNumber(int number) {
              return EMatchOutcome.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.getDescriptor().getEnumTypes().get(3);
    }

    private static final EMatchOutcome[] VALUES = values();

    public static EMatchOutcome valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EMatchOutcome(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMatchOutcome)
  }

  /**
   * Protobuf enum {@code EDOTAPlayerMMRType}
   */
  public enum EDOTAPlayerMMRType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    k_EDOTAPlayerMMRType_Invalid(0, 0),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    k_EDOTAPlayerMMRType_GeneralHidden(1, 1),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive2019 = 3;</code>
     */
    k_EDOTAPlayerMMRType_GeneralCompetitive2019(2, 3),
    /**
     * <code>k_EDOTAPlayerMMRType_SoloCompetitive2019 = 4;</code>
     */
    k_EDOTAPlayerMMRType_SoloCompetitive2019(3, 4),
    /**
     * <code>k_EDOTAPlayerMMRType_1v1Competitive_UNUSED = 5;</code>
     */
    k_EDOTAPlayerMMRType_1v1Competitive_UNUSED(4, 5),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralSeasonalRanked = 6;</code>
     */
    k_EDOTAPlayerMMRType_GeneralSeasonalRanked(5, 6),
    /**
     * <code>k_EDOTAPlayerMMRType_SoloSeasonalRanked = 7;</code>
     */
    k_EDOTAPlayerMMRType_SoloSeasonalRanked(6, 7),
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Core = 8;</code>
     */
    k_EDOTAPlayerMMRType_Competitive_Core(7, 8),
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Support = 9;</code>
     */
    k_EDOTAPlayerMMRType_Competitive_Support(8, 9),
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Classic = 10;</code>
     */
    k_EDOTAPlayerMMRType_Competitive_Classic(9, 10),
    ;

    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Invalid_VALUE = 0;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralHidden_VALUE = 1;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive2019 = 3;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralCompetitive2019_VALUE = 3;
    /**
     * <code>k_EDOTAPlayerMMRType_SoloCompetitive2019 = 4;</code>
     */
    public static final int k_EDOTAPlayerMMRType_SoloCompetitive2019_VALUE = 4;
    /**
     * <code>k_EDOTAPlayerMMRType_1v1Competitive_UNUSED = 5;</code>
     */
    public static final int k_EDOTAPlayerMMRType_1v1Competitive_UNUSED_VALUE = 5;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralSeasonalRanked = 6;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralSeasonalRanked_VALUE = 6;
    /**
     * <code>k_EDOTAPlayerMMRType_SoloSeasonalRanked = 7;</code>
     */
    public static final int k_EDOTAPlayerMMRType_SoloSeasonalRanked_VALUE = 7;
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Core = 8;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Competitive_Core_VALUE = 8;
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Support = 9;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Competitive_Support_VALUE = 9;
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Classic = 10;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Competitive_Classic_VALUE = 10;


    public final int getNumber() { return value; }

    public static EDOTAPlayerMMRType valueOf(int value) {
      switch (value) {
        case 0: return k_EDOTAPlayerMMRType_Invalid;
        case 1: return k_EDOTAPlayerMMRType_GeneralHidden;
        case 3: return k_EDOTAPlayerMMRType_GeneralCompetitive2019;
        case 4: return k_EDOTAPlayerMMRType_SoloCompetitive2019;
        case 5: return k_EDOTAPlayerMMRType_1v1Competitive_UNUSED;
        case 6: return k_EDOTAPlayerMMRType_GeneralSeasonalRanked;
        case 7: return k_EDOTAPlayerMMRType_SoloSeasonalRanked;
        case 8: return k_EDOTAPlayerMMRType_Competitive_Core;
        case 9: return k_EDOTAPlayerMMRType_Competitive_Support;
        case 10: return k_EDOTAPlayerMMRType_Competitive_Classic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>() {
            public EDOTAPlayerMMRType findValueByNumber(int number) {
              return EDOTAPlayerMMRType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.getDescriptor().getEnumTypes().get(4);
    }

    private static final EDOTAPlayerMMRType[] VALUES = values();

    public static EDOTAPlayerMMRType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAPlayerMMRType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAPlayerMMRType)
  }

  /**
   * Protobuf enum {@code EDOTAMMRBoostType}
   */
  public enum EDOTAMMRBoostType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAMMRBoostType_None = 0;</code>
     */
    k_EDOTAMMRBoostType_None(0, 0),
    /**
     * <code>k_EDOTAMMRBoostType_Leader = 1;</code>
     */
    k_EDOTAMMRBoostType_Leader(1, 1),
    /**
     * <code>k_EDOTAMMRBoostType_Follower = 2;</code>
     */
    k_EDOTAMMRBoostType_Follower(2, 2),
    ;

    /**
     * <code>k_EDOTAMMRBoostType_None = 0;</code>
     */
    public static final int k_EDOTAMMRBoostType_None_VALUE = 0;
    /**
     * <code>k_EDOTAMMRBoostType_Leader = 1;</code>
     */
    public static final int k_EDOTAMMRBoostType_Leader_VALUE = 1;
    /**
     * <code>k_EDOTAMMRBoostType_Follower = 2;</code>
     */
    public static final int k_EDOTAMMRBoostType_Follower_VALUE = 2;


    public final int getNumber() { return value; }

    public static EDOTAMMRBoostType valueOf(int value) {
      switch (value) {
        case 0: return k_EDOTAMMRBoostType_None;
        case 1: return k_EDOTAMMRBoostType_Leader;
        case 2: return k_EDOTAMMRBoostType_Follower;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>() {
            public EDOTAMMRBoostType findValueByNumber(int number) {
              return EDOTAMMRBoostType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.getDescriptor().getEnumTypes().get(5);
    }

    private static final EDOTAMMRBoostType[] VALUES = values();

    public static EDOTAMMRBoostType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAMMRBoostType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAMMRBoostType)
  }

  public interface CMatchPlayerAbilityUpgradeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMatchPlayerAbilityUpgrade)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 ability = 1;</code>
     */
    boolean hasAbility();
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    int getAbility();

    /**
     * <code>optional uint32 time = 2;</code>
     */
    boolean hasTime();
    /**
     * <code>optional uint32 time = 2;</code>
     */
    int getTime();
  }
  /**
   * Protobuf type {@code CMatchPlayerAbilityUpgrade}
   */
  public static final class CMatchPlayerAbilityUpgrade extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMatchPlayerAbilityUpgrade)
      CMatchPlayerAbilityUpgradeOrBuilder {
    // Use CMatchPlayerAbilityUpgrade.newBuilder() to construct.
    private CMatchPlayerAbilityUpgrade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchPlayerAbilityUpgrade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchPlayerAbilityUpgrade defaultInstance;
    public static CMatchPlayerAbilityUpgrade getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchPlayerAbilityUpgrade getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchPlayerAbilityUpgrade(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              ability_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              time_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerAbilityUpgrade_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchPlayerAbilityUpgrade> PARSER =
        new com.google.protobuf.AbstractParser<CMatchPlayerAbilityUpgrade>() {
      public CMatchPlayerAbilityUpgrade parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchPlayerAbilityUpgrade(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchPlayerAbilityUpgrade> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ABILITY_FIELD_NUMBER = 1;
    private int ability_;
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    public boolean hasAbility() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 ability = 1;</code>
     */
    public int getAbility() {
      return ability_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private int time_;
    /**
     * <code>optional uint32 time = 2;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 time = 2;</code>
     */
    public int getTime() {
      return time_;
    }

    private void initFields() {
      ability_ = 0;
      time_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, ability_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, time_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, ability_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, time_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchPlayerAbilityUpgrade}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMatchPlayerAbilityUpgrade)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerAbilityUpgrade_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        ability_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerAbilityUpgrade_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ability_ = ability_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.time_ = time_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.getDefaultInstance()) return this;
        if (other.hasAbility()) {
          setAbility(other.getAbility());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int ability_ ;
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public boolean hasAbility() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public int getAbility() {
        return ability_;
      }
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public Builder setAbility(int value) {
        bitField0_ |= 0x00000001;
        ability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ability = 1;</code>
       */
      public Builder clearAbility() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ability_ = 0;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public int getTime() {
        return time_;
      }
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public Builder setTime(int value) {
        bitField0_ |= 0x00000002;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 time = 2;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchPlayerAbilityUpgrade)
    }

    static {
      defaultInstance = new CMatchPlayerAbilityUpgrade(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchPlayerAbilityUpgrade)
  }

  public interface CMatchAdditionalUnitInventoryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMatchAdditionalUnitInventory)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string unit_name = 1;</code>
     */
    boolean hasUnitName();
    /**
     * <code>optional string unit_name = 1;</code>
     */
    java.lang.String getUnitName();
    /**
     * <code>optional string unit_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getUnitNameBytes();

    /**
     * <code>repeated int32 items = 2;</code>
     */
    java.util.List<java.lang.Integer> getItemsList();
    /**
     * <code>repeated int32 items = 2;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated int32 items = 2;</code>
     */
    int getItems(int index);
  }
  /**
   * Protobuf type {@code CMatchAdditionalUnitInventory}
   */
  public static final class CMatchAdditionalUnitInventory extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMatchAdditionalUnitInventory)
      CMatchAdditionalUnitInventoryOrBuilder {
    // Use CMatchAdditionalUnitInventory.newBuilder() to construct.
    private CMatchAdditionalUnitInventory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchAdditionalUnitInventory(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchAdditionalUnitInventory defaultInstance;
    public static CMatchAdditionalUnitInventory getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchAdditionalUnitInventory getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchAdditionalUnitInventory(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              unitName_ = bs;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                items_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              items_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                items_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                items_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchAdditionalUnitInventory_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchAdditionalUnitInventory> PARSER =
        new com.google.protobuf.AbstractParser<CMatchAdditionalUnitInventory>() {
      public CMatchAdditionalUnitInventory parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchAdditionalUnitInventory(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchAdditionalUnitInventory> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int UNIT_NAME_FIELD_NUMBER = 1;
    private java.lang.Object unitName_;
    /**
     * <code>optional string unit_name = 1;</code>
     */
    public boolean hasUnitName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string unit_name = 1;</code>
     */
    public java.lang.String getUnitName() {
      java.lang.Object ref = unitName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          unitName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string unit_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUnitNameBytes() {
      java.lang.Object ref = unitName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        unitName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ITEMS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> items_;
    /**
     * <code>repeated int32 items = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getItemsList() {
      return items_;
    }
    /**
     * <code>repeated int32 items = 2;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated int32 items = 2;</code>
     */
    public int getItems(int index) {
      return items_.get(index);
    }

    private void initFields() {
      unitName_ = "";
      items_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUnitNameBytes());
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeInt32(2, items_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUnitNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < items_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(items_.get(i));
        }
        size += dataSize;
        size += 1 * getItemsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchAdditionalUnitInventory}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMatchAdditionalUnitInventory)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchAdditionalUnitInventory_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        unitName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchAdditionalUnitInventory_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unitName_ = unitName_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = java.util.Collections.unmodifiableList(items_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.items_ = items_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.getDefaultInstance()) return this;
        if (other.hasUnitName()) {
          bitField0_ |= 0x00000001;
          unitName_ = other.unitName_;
          onChanged();
        }
        if (!other.items_.isEmpty()) {
          if (items_.isEmpty()) {
            items_ = other.items_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemsIsMutable();
            items_.addAll(other.items_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object unitName_ = "";
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public boolean hasUnitName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public java.lang.String getUnitName() {
        java.lang.Object ref = unitName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            unitName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getUnitNameBytes() {
        java.lang.Object ref = unitName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          unitName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public Builder setUnitName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        unitName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public Builder clearUnitName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unitName_ = getDefaultInstance().getUnitName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string unit_name = 1;</code>
       */
      public Builder setUnitNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        unitName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> items_ = java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = new java.util.ArrayList<java.lang.Integer>(items_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getItemsList() {
        return java.util.Collections.unmodifiableList(items_);
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public int getItemsCount() {
        return items_.size();
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public int getItems(int index) {
        return items_.get(index);
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public Builder setItems(
          int index, int value) {
        ensureItemsIsMutable();
        items_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public Builder addItems(int value) {
        ensureItemsIsMutable();
        items_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureItemsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, items_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 items = 2;</code>
       */
      public Builder clearItems() {
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchAdditionalUnitInventory)
    }

    static {
      defaultInstance = new CMatchAdditionalUnitInventory(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchAdditionalUnitInventory)
  }

  public interface CMatchPlayerPermanentBuffOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMatchPlayerPermanentBuff)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 permanent_buff = 1;</code>
     */
    boolean hasPermanentBuff();
    /**
     * <code>optional uint32 permanent_buff = 1;</code>
     */
    int getPermanentBuff();

    /**
     * <code>optional uint32 stack_count = 2;</code>
     */
    boolean hasStackCount();
    /**
     * <code>optional uint32 stack_count = 2;</code>
     */
    int getStackCount();
  }
  /**
   * Protobuf type {@code CMatchPlayerPermanentBuff}
   */
  public static final class CMatchPlayerPermanentBuff extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMatchPlayerPermanentBuff)
      CMatchPlayerPermanentBuffOrBuilder {
    // Use CMatchPlayerPermanentBuff.newBuilder() to construct.
    private CMatchPlayerPermanentBuff(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchPlayerPermanentBuff(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchPlayerPermanentBuff defaultInstance;
    public static CMatchPlayerPermanentBuff getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchPlayerPermanentBuff getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchPlayerPermanentBuff(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              permanentBuff_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              stackCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerPermanentBuff_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerPermanentBuff_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchPlayerPermanentBuff> PARSER =
        new com.google.protobuf.AbstractParser<CMatchPlayerPermanentBuff>() {
      public CMatchPlayerPermanentBuff parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchPlayerPermanentBuff(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchPlayerPermanentBuff> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PERMANENT_BUFF_FIELD_NUMBER = 1;
    private int permanentBuff_;
    /**
     * <code>optional uint32 permanent_buff = 1;</code>
     */
    public boolean hasPermanentBuff() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 permanent_buff = 1;</code>
     */
    public int getPermanentBuff() {
      return permanentBuff_;
    }

    public static final int STACK_COUNT_FIELD_NUMBER = 2;
    private int stackCount_;
    /**
     * <code>optional uint32 stack_count = 2;</code>
     */
    public boolean hasStackCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 stack_count = 2;</code>
     */
    public int getStackCount() {
      return stackCount_;
    }

    private void initFields() {
      permanentBuff_ = 0;
      stackCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, permanentBuff_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, stackCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, permanentBuff_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, stackCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchPlayerPermanentBuff}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMatchPlayerPermanentBuff)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerPermanentBuff_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerPermanentBuff_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        permanentBuff_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        stackCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchPlayerPermanentBuff_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.permanentBuff_ = permanentBuff_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stackCount_ = stackCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.getDefaultInstance()) return this;
        if (other.hasPermanentBuff()) {
          setPermanentBuff(other.getPermanentBuff());
        }
        if (other.hasStackCount()) {
          setStackCount(other.getStackCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int permanentBuff_ ;
      /**
       * <code>optional uint32 permanent_buff = 1;</code>
       */
      public boolean hasPermanentBuff() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 permanent_buff = 1;</code>
       */
      public int getPermanentBuff() {
        return permanentBuff_;
      }
      /**
       * <code>optional uint32 permanent_buff = 1;</code>
       */
      public Builder setPermanentBuff(int value) {
        bitField0_ |= 0x00000001;
        permanentBuff_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 permanent_buff = 1;</code>
       */
      public Builder clearPermanentBuff() {
        bitField0_ = (bitField0_ & ~0x00000001);
        permanentBuff_ = 0;
        onChanged();
        return this;
      }

      private int stackCount_ ;
      /**
       * <code>optional uint32 stack_count = 2;</code>
       */
      public boolean hasStackCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 stack_count = 2;</code>
       */
      public int getStackCount() {
        return stackCount_;
      }
      /**
       * <code>optional uint32 stack_count = 2;</code>
       */
      public Builder setStackCount(int value) {
        bitField0_ |= 0x00000002;
        stackCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stack_count = 2;</code>
       */
      public Builder clearStackCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stackCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchPlayerPermanentBuff)
    }

    static {
      defaultInstance = new CMatchPlayerPermanentBuff(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchPlayerPermanentBuff)
  }

  public interface CMatchHeroSelectEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMatchHeroSelectEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool is_pick = 1;</code>
     */
    boolean hasIsPick();
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    boolean getIsPick();

    /**
     * <code>optional uint32 team = 2;</code>
     */
    boolean hasTeam();
    /**
     * <code>optional uint32 team = 2;</code>
     */
    int getTeam();

    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    boolean hasHeroId();
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    int getHeroId();
  }
  /**
   * Protobuf type {@code CMatchHeroSelectEvent}
   */
  public static final class CMatchHeroSelectEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMatchHeroSelectEvent)
      CMatchHeroSelectEventOrBuilder {
    // Use CMatchHeroSelectEvent.newBuilder() to construct.
    private CMatchHeroSelectEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMatchHeroSelectEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMatchHeroSelectEvent defaultInstance;
    public static CMatchHeroSelectEvent getDefaultInstance() {
      return defaultInstance;
    }

    public CMatchHeroSelectEvent getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMatchHeroSelectEvent(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isPick_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              team_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              heroId_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchHeroSelectEvent_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchHeroSelectEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder.class);
    }

    public static com.google.protobuf.Parser<CMatchHeroSelectEvent> PARSER =
        new com.google.protobuf.AbstractParser<CMatchHeroSelectEvent>() {
      public CMatchHeroSelectEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMatchHeroSelectEvent(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMatchHeroSelectEvent> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int IS_PICK_FIELD_NUMBER = 1;
    private boolean isPick_;
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    public boolean hasIsPick() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool is_pick = 1;</code>
     */
    public boolean getIsPick() {
      return isPick_;
    }

    public static final int TEAM_FIELD_NUMBER = 2;
    private int team_;
    /**
     * <code>optional uint32 team = 2;</code>
     */
    public boolean hasTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 team = 2;</code>
     */
    public int getTeam() {
      return team_;
    }

    public static final int HERO_ID_FIELD_NUMBER = 3;
    private int heroId_;
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    public boolean hasHeroId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 hero_id = 3;</code>
     */
    public int getHeroId() {
      return heroId_;
    }

    private void initFields() {
      isPick_ = false;
      team_ = 0;
      heroId_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isPick_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, heroId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isPick_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, team_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, heroId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMatchHeroSelectEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMatchHeroSelectEvent)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchHeroSelectEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchHeroSelectEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isPick_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        team_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        heroId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMatchHeroSelectEvent_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isPick_ = isPick_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.team_ = team_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.heroId_ = heroId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.getDefaultInstance()) return this;
        if (other.hasIsPick()) {
          setIsPick(other.getIsPick());
        }
        if (other.hasTeam()) {
          setTeam(other.getTeam());
        }
        if (other.hasHeroId()) {
          setHeroId(other.getHeroId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isPick_ ;
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public boolean hasIsPick() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public boolean getIsPick() {
        return isPick_;
      }
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public Builder setIsPick(boolean value) {
        bitField0_ |= 0x00000001;
        isPick_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_pick = 1;</code>
       */
      public Builder clearIsPick() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isPick_ = false;
        onChanged();
        return this;
      }

      private int team_ ;
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public boolean hasTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public int getTeam() {
        return team_;
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public Builder setTeam(int value) {
        bitField0_ |= 0x00000002;
        team_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 team = 2;</code>
       */
      public Builder clearTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        team_ = 0;
        onChanged();
        return this;
      }

      private int heroId_ ;
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public int getHeroId() {
        return heroId_;
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public Builder setHeroId(int value) {
        bitField0_ |= 0x00000004;
        heroId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public Builder clearHeroId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        heroId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMatchHeroSelectEvent)
    }

    static {
      defaultInstance = new CMatchHeroSelectEvent(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMatchHeroSelectEvent)
  }

  public interface CMsgDOTAMatchOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgDOTAMatch)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool good_guys_win = 2;</code>
     */
    boolean hasGoodGuysWin();
    /**
     * <code>optional bool good_guys_win = 2;</code>
     */
    boolean getGoodGuysWin();

    /**
     * <code>optional uint32 duration = 3;</code>
     */
    boolean hasDuration();
    /**
     * <code>optional uint32 duration = 3;</code>
     */
    int getDuration();

    /**
     * <code>optional fixed32 startTime = 4;</code>
     */
    boolean hasStartTime();
    /**
     * <code>optional fixed32 startTime = 4;</code>
     */
    int getStartTime();

    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player> 
        getPlayersList();
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player getPlayers(int index);
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    int getPlayersCount();
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder getPlayersOrBuilder(
        int index);

    /**
     * <code>optional uint64 match_id = 6;</code>
     */
    boolean hasMatchId();
    /**
     * <code>optional uint64 match_id = 6;</code>
     */
    long getMatchId();

    /**
     * <code>repeated uint32 tower_status = 8;</code>
     */
    java.util.List<java.lang.Integer> getTowerStatusList();
    /**
     * <code>repeated uint32 tower_status = 8;</code>
     */
    int getTowerStatusCount();
    /**
     * <code>repeated uint32 tower_status = 8;</code>
     */
    int getTowerStatus(int index);

    /**
     * <code>repeated uint32 barracks_status = 9;</code>
     */
    java.util.List<java.lang.Integer> getBarracksStatusList();
    /**
     * <code>repeated uint32 barracks_status = 9;</code>
     */
    int getBarracksStatusCount();
    /**
     * <code>repeated uint32 barracks_status = 9;</code>
     */
    int getBarracksStatus(int index);

    /**
     * <code>optional uint32 cluster = 10;</code>
     */
    boolean hasCluster();
    /**
     * <code>optional uint32 cluster = 10;</code>
     */
    int getCluster();

    /**
     * <code>optional uint32 first_blood_time = 12;</code>
     */
    boolean hasFirstBloodTime();
    /**
     * <code>optional uint32 first_blood_time = 12;</code>
     */
    int getFirstBloodTime();

    /**
     * <code>optional fixed32 replay_salt = 13;</code>
     */
    boolean hasReplaySalt();
    /**
     * <code>optional fixed32 replay_salt = 13;</code>
     */
    int getReplaySalt();

    /**
     * <code>optional fixed32 server_ip = 14;</code>
     */
    boolean hasServerIp();
    /**
     * <code>optional fixed32 server_ip = 14;</code>
     */
    int getServerIp();

    /**
     * <code>optional uint32 server_port = 15;</code>
     */
    boolean hasServerPort();
    /**
     * <code>optional uint32 server_port = 15;</code>
     */
    int getServerPort();

    /**
     * <code>optional uint32 lobby_type = 16;</code>
     */
    boolean hasLobbyType();
    /**
     * <code>optional uint32 lobby_type = 16;</code>
     */
    int getLobbyType();

    /**
     * <code>optional uint32 human_players = 17;</code>
     */
    boolean hasHumanPlayers();
    /**
     * <code>optional uint32 human_players = 17;</code>
     */
    int getHumanPlayers();

    /**
     * <code>optional uint32 average_skill = 18;</code>
     */
    boolean hasAverageSkill();
    /**
     * <code>optional uint32 average_skill = 18;</code>
     */
    int getAverageSkill();

    /**
     * <code>optional float game_balance = 19;</code>
     */
    boolean hasGameBalance();
    /**
     * <code>optional float game_balance = 19;</code>
     */
    float getGameBalance();

    /**
     * <code>optional uint32 radiant_team_id = 20;</code>
     */
    boolean hasRadiantTeamId();
    /**
     * <code>optional uint32 radiant_team_id = 20;</code>
     */
    int getRadiantTeamId();

    /**
     * <code>optional uint32 dire_team_id = 21;</code>
     */
    boolean hasDireTeamId();
    /**
     * <code>optional uint32 dire_team_id = 21;</code>
     */
    int getDireTeamId();

    /**
     * <code>optional uint32 leagueid = 22;</code>
     */
    boolean hasLeagueid();
    /**
     * <code>optional uint32 leagueid = 22;</code>
     */
    int getLeagueid();

    /**
     * <code>optional string radiant_team_name = 23;</code>
     */
    boolean hasRadiantTeamName();
    /**
     * <code>optional string radiant_team_name = 23;</code>
     */
    java.lang.String getRadiantTeamName();
    /**
     * <code>optional string radiant_team_name = 23;</code>
     */
    com.google.protobuf.ByteString
        getRadiantTeamNameBytes();

    /**
     * <code>optional string dire_team_name = 24;</code>
     */
    boolean hasDireTeamName();
    /**
     * <code>optional string dire_team_name = 24;</code>
     */
    java.lang.String getDireTeamName();
    /**
     * <code>optional string dire_team_name = 24;</code>
     */
    com.google.protobuf.ByteString
        getDireTeamNameBytes();

    /**
     * <code>optional uint64 radiant_team_logo = 25;</code>
     */
    boolean hasRadiantTeamLogo();
    /**
     * <code>optional uint64 radiant_team_logo = 25;</code>
     */
    long getRadiantTeamLogo();

    /**
     * <code>optional uint64 dire_team_logo = 26;</code>
     */
    boolean hasDireTeamLogo();
    /**
     * <code>optional uint64 dire_team_logo = 26;</code>
     */
    long getDireTeamLogo();

    /**
     * <code>optional uint32 radiant_team_complete = 27;</code>
     */
    boolean hasRadiantTeamComplete();
    /**
     * <code>optional uint32 radiant_team_complete = 27;</code>
     */
    int getRadiantTeamComplete();

    /**
     * <code>optional uint32 dire_team_complete = 28;</code>
     */
    boolean hasDireTeamComplete();
    /**
     * <code>optional uint32 dire_team_complete = 28;</code>
     */
    int getDireTeamComplete();

    /**
     * <code>optional uint32 positive_votes = 29;</code>
     */
    boolean hasPositiveVotes();
    /**
     * <code>optional uint32 positive_votes = 29;</code>
     */
    int getPositiveVotes();

    /**
     * <code>optional uint32 negative_votes = 30;</code>
     */
    boolean hasNegativeVotes();
    /**
     * <code>optional uint32 negative_votes = 30;</code>
     */
    int getNegativeVotes();

    /**
     * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
     */
    boolean hasGameMode();
    /**
     * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode getGameMode();

    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent> 
        getPicksBansList();
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent getPicksBans(int index);
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    int getPicksBansCount();
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder> 
        getPicksBansOrBuilderList();
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder getPicksBansOrBuilder(
        int index);

    /**
     * <code>optional uint64 match_seq_num = 33;</code>
     */
    boolean hasMatchSeqNum();
    /**
     * <code>optional uint64 match_seq_num = 33;</code>
     */
    long getMatchSeqNum();

    /**
     * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
     */
    boolean hasReplayState();
    /**
     * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState getReplayState();

    /**
     * <code>optional uint32 radiant_guild_id = 35;</code>
     */
    boolean hasRadiantGuildId();
    /**
     * <code>optional uint32 radiant_guild_id = 35;</code>
     */
    int getRadiantGuildId();

    /**
     * <code>optional uint32 dire_guild_id = 36;</code>
     */
    boolean hasDireGuildId();
    /**
     * <code>optional uint32 dire_guild_id = 36;</code>
     */
    int getDireGuildId();

    /**
     * <code>optional string radiant_team_tag = 37;</code>
     */
    boolean hasRadiantTeamTag();
    /**
     * <code>optional string radiant_team_tag = 37;</code>
     */
    java.lang.String getRadiantTeamTag();
    /**
     * <code>optional string radiant_team_tag = 37;</code>
     */
    com.google.protobuf.ByteString
        getRadiantTeamTagBytes();

    /**
     * <code>optional string dire_team_tag = 38;</code>
     */
    boolean hasDireTeamTag();
    /**
     * <code>optional string dire_team_tag = 38;</code>
     */
    java.lang.String getDireTeamTag();
    /**
     * <code>optional string dire_team_tag = 38;</code>
     */
    com.google.protobuf.ByteString
        getDireTeamTagBytes();

    /**
     * <code>optional uint32 series_id = 39;</code>
     */
    boolean hasSeriesId();
    /**
     * <code>optional uint32 series_id = 39;</code>
     */
    int getSeriesId();

    /**
     * <code>optional uint32 series_type = 40;</code>
     */
    boolean hasSeriesType();
    /**
     * <code>optional uint32 series_type = 40;</code>
     */
    int getSeriesType();

    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel> 
        getBroadcasterChannelsList();
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel getBroadcasterChannels(int index);
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    int getBroadcasterChannelsCount();
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder> 
        getBroadcasterChannelsOrBuilderList();
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder getBroadcasterChannelsOrBuilder(
        int index);

    /**
     * <code>optional uint32 engine = 44;</code>
     */
    boolean hasEngine();
    /**
     * <code>optional uint32 engine = 44;</code>
     */
    int getEngine();

    /**
     * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
     */
    boolean hasCustomGameData();
    /**
     * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData getCustomGameData();
    /**
     * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder getCustomGameDataOrBuilder();

    /**
     * <code>optional uint32 match_flags = 46;</code>
     */
    boolean hasMatchFlags();
    /**
     * <code>optional uint32 match_flags = 46;</code>
     */
    int getMatchFlags();

    /**
     * <code>optional fixed32 private_metadata_key = 47;</code>
     */
    boolean hasPrivateMetadataKey();
    /**
     * <code>optional fixed32 private_metadata_key = 47;</code>
     */
    int getPrivateMetadataKey();

    /**
     * <code>optional uint32 radiant_team_score = 48;</code>
     */
    boolean hasRadiantTeamScore();
    /**
     * <code>optional uint32 radiant_team_score = 48;</code>
     */
    int getRadiantTeamScore();

    /**
     * <code>optional uint32 dire_team_score = 49;</code>
     */
    boolean hasDireTeamScore();
    /**
     * <code>optional uint32 dire_team_score = 49;</code>
     */
    int getDireTeamScore();

    /**
     * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
     */
    boolean hasMatchOutcome();
    /**
     * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome getMatchOutcome();

    /**
     * <code>optional uint32 tournament_id = 51;</code>
     */
    boolean hasTournamentId();
    /**
     * <code>optional uint32 tournament_id = 51;</code>
     */
    int getTournamentId();

    /**
     * <code>optional uint32 tournament_round = 52;</code>
     */
    boolean hasTournamentRound();
    /**
     * <code>optional uint32 tournament_round = 52;</code>
     */
    int getTournamentRound();

    /**
     * <code>optional uint32 pre_game_duration = 53;</code>
     */
    boolean hasPreGameDuration();
    /**
     * <code>optional uint32 pre_game_duration = 53;</code>
     */
    int getPreGameDuration();
  }
  /**
   * Protobuf type {@code CMsgDOTAMatch}
   */
  public static final class CMsgDOTAMatch extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgDOTAMatch)
      CMsgDOTAMatchOrBuilder {
    // Use CMsgDOTAMatch.newBuilder() to construct.
    private CMsgDOTAMatch(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgDOTAMatch(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgDOTAMatch defaultInstance;
    public static CMsgDOTAMatch getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgDOTAMatch getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgDOTAMatch(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              goodGuysWin_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              duration_ = input.readUInt32();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000004;
              startTime_ = input.readFixed32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                players_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player>();
                mutable_bitField0_ |= 0x00000008;
              }
              players_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              matchId_ = input.readUInt64();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                towerStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              towerStatus_.add(input.readUInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                towerStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                towerStatus_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                barracksStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              barracksStatus_.add(input.readUInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                barracksStatus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                barracksStatus_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              cluster_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000020;
              firstBloodTime_ = input.readUInt32();
              break;
            }
            case 109: {
              bitField0_ |= 0x00000040;
              replaySalt_ = input.readFixed32();
              break;
            }
            case 117: {
              bitField0_ |= 0x00000080;
              serverIp_ = input.readFixed32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              serverPort_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              lobbyType_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000400;
              humanPlayers_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00000800;
              averageSkill_ = input.readUInt32();
              break;
            }
            case 157: {
              bitField0_ |= 0x00001000;
              gameBalance_ = input.readFloat();
              break;
            }
            case 160: {
              bitField0_ |= 0x00002000;
              radiantTeamId_ = input.readUInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00004000;
              direTeamId_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00008000;
              leagueid_ = input.readUInt32();
              break;
            }
            case 186: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00010000;
              radiantTeamName_ = bs;
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00020000;
              direTeamName_ = bs;
              break;
            }
            case 200: {
              bitField0_ |= 0x00040000;
              radiantTeamLogo_ = input.readUInt64();
              break;
            }
            case 208: {
              bitField0_ |= 0x00080000;
              direTeamLogo_ = input.readUInt64();
              break;
            }
            case 216: {
              bitField0_ |= 0x00100000;
              radiantTeamComplete_ = input.readUInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00200000;
              direTeamComplete_ = input.readUInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00400000;
              positiveVotes_ = input.readUInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x00800000;
              negativeVotes_ = input.readUInt32();
              break;
            }
            case 248: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode value = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(31, rawValue);
              } else {
                bitField0_ |= 0x01000000;
                gameMode_ = value;
              }
              break;
            }
            case 258: {
              if (!((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
                picksBans_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent>();
                mutable_bitField0_ |= 0x10000000;
              }
              picksBans_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.PARSER, extensionRegistry));
              break;
            }
            case 264: {
              bitField0_ |= 0x02000000;
              matchSeqNum_ = input.readUInt64();
              break;
            }
            case 272: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState value = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(34, rawValue);
              } else {
                bitField0_ |= 0x04000000;
                replayState_ = value;
              }
              break;
            }
            case 280: {
              bitField0_ |= 0x08000000;
              radiantGuildId_ = input.readUInt32();
              break;
            }
            case 288: {
              bitField0_ |= 0x10000000;
              direGuildId_ = input.readUInt32();
              break;
            }
            case 298: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x20000000;
              radiantTeamTag_ = bs;
              break;
            }
            case 306: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x40000000;
              direTeamTag_ = bs;
              break;
            }
            case 312: {
              bitField0_ |= 0x80000000;
              seriesId_ = input.readUInt32();
              break;
            }
            case 320: {
              bitField1_ |= 0x00000001;
              seriesType_ = input.readUInt32();
              break;
            }
            case 346: {
              if (!((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
                broadcasterChannels_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel>();
                mutable_bitField1_ |= 0x00000020;
              }
              broadcasterChannels_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.PARSER, extensionRegistry));
              break;
            }
            case 352: {
              bitField1_ |= 0x00000002;
              engine_ = input.readUInt32();
              break;
            }
            case 362: {
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder subBuilder = null;
              if (((bitField1_ & 0x00000004) == 0x00000004)) {
                subBuilder = customGameData_.toBuilder();
              }
              customGameData_ = input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(customGameData_);
                customGameData_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000004;
              break;
            }
            case 368: {
              bitField1_ |= 0x00000008;
              matchFlags_ = input.readUInt32();
              break;
            }
            case 381: {
              bitField1_ |= 0x00000010;
              privateMetadataKey_ = input.readFixed32();
              break;
            }
            case 384: {
              bitField1_ |= 0x00000020;
              radiantTeamScore_ = input.readUInt32();
              break;
            }
            case 392: {
              bitField1_ |= 0x00000040;
              direTeamScore_ = input.readUInt32();
              break;
            }
            case 400: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome value = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(50, rawValue);
              } else {
                bitField1_ |= 0x00000080;
                matchOutcome_ = value;
              }
              break;
            }
            case 408: {
              bitField1_ |= 0x00000100;
              tournamentId_ = input.readUInt32();
              break;
            }
            case 416: {
              bitField1_ |= 0x00000200;
              tournamentRound_ = input.readUInt32();
              break;
            }
            case 424: {
              bitField1_ |= 0x00000400;
              preGameDuration_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          towerStatus_ = java.util.Collections.unmodifiableList(towerStatus_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          barracksStatus_ = java.util.Collections.unmodifiableList(barracksStatus_);
        }
        if (((mutable_bitField0_ & 0x10000000) == 0x10000000)) {
          picksBans_ = java.util.Collections.unmodifiableList(picksBans_);
        }
        if (((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
          broadcasterChannels_ = java.util.Collections.unmodifiableList(broadcasterChannels_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgDOTAMatch> PARSER =
        new com.google.protobuf.AbstractParser<CMsgDOTAMatch>() {
      public CMsgDOTAMatch parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgDOTAMatch(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgDOTAMatch> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code CMsgDOTAMatch.ReplayState}
     */
    public enum ReplayState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>REPLAY_AVAILABLE = 0;</code>
       */
      REPLAY_AVAILABLE(0, 0),
      /**
       * <code>REPLAY_NOT_RECORDED = 1;</code>
       */
      REPLAY_NOT_RECORDED(1, 1),
      /**
       * <code>REPLAY_EXPIRED = 2;</code>
       */
      REPLAY_EXPIRED(2, 2),
      ;

      /**
       * <code>REPLAY_AVAILABLE = 0;</code>
       */
      public static final int REPLAY_AVAILABLE_VALUE = 0;
      /**
       * <code>REPLAY_NOT_RECORDED = 1;</code>
       */
      public static final int REPLAY_NOT_RECORDED_VALUE = 1;
      /**
       * <code>REPLAY_EXPIRED = 2;</code>
       */
      public static final int REPLAY_EXPIRED_VALUE = 2;


      public final int getNumber() { return value; }

      public static ReplayState valueOf(int value) {
        switch (value) {
          case 0: return REPLAY_AVAILABLE;
          case 1: return REPLAY_NOT_RECORDED;
          case 2: return REPLAY_EXPIRED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ReplayState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ReplayState>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ReplayState>() {
              public ReplayState findValueByNumber(int number) {
                return ReplayState.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.getDescriptor().getEnumTypes().get(0);
      }

      private static final ReplayState[] VALUES = values();

      public static ReplayState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ReplayState(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:CMsgDOTAMatch.ReplayState)
    }

    public interface PlayerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAMatch.Player)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional uint32 player_slot = 2;</code>
       */
      boolean hasPlayerSlot();
      /**
       * <code>optional uint32 player_slot = 2;</code>
       */
      int getPlayerSlot();

      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      boolean hasHeroId();
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      int getHeroId();

      /**
       * <code>optional int32 item_0 = 4;</code>
       */
      boolean hasItem0();
      /**
       * <code>optional int32 item_0 = 4;</code>
       */
      int getItem0();

      /**
       * <code>optional int32 item_1 = 5;</code>
       */
      boolean hasItem1();
      /**
       * <code>optional int32 item_1 = 5;</code>
       */
      int getItem1();

      /**
       * <code>optional int32 item_2 = 6;</code>
       */
      boolean hasItem2();
      /**
       * <code>optional int32 item_2 = 6;</code>
       */
      int getItem2();

      /**
       * <code>optional int32 item_3 = 7;</code>
       */
      boolean hasItem3();
      /**
       * <code>optional int32 item_3 = 7;</code>
       */
      int getItem3();

      /**
       * <code>optional int32 item_4 = 8;</code>
       */
      boolean hasItem4();
      /**
       * <code>optional int32 item_4 = 8;</code>
       */
      int getItem4();

      /**
       * <code>optional int32 item_5 = 9;</code>
       */
      boolean hasItem5();
      /**
       * <code>optional int32 item_5 = 9;</code>
       */
      int getItem5();

      /**
       * <code>optional int32 item_6 = 59;</code>
       */
      boolean hasItem6();
      /**
       * <code>optional int32 item_6 = 59;</code>
       */
      int getItem6();

      /**
       * <code>optional int32 item_7 = 60;</code>
       */
      boolean hasItem7();
      /**
       * <code>optional int32 item_7 = 60;</code>
       */
      int getItem7();

      /**
       * <code>optional int32 item_8 = 61;</code>
       */
      boolean hasItem8();
      /**
       * <code>optional int32 item_8 = 61;</code>
       */
      int getItem8();

      /**
       * <code>optional float expected_team_contribution = 10;</code>
       */
      boolean hasExpectedTeamContribution();
      /**
       * <code>optional float expected_team_contribution = 10;</code>
       */
      float getExpectedTeamContribution();

      /**
       * <code>optional float scaled_metric = 11;</code>
       */
      boolean hasScaledMetric();
      /**
       * <code>optional float scaled_metric = 11;</code>
       */
      float getScaledMetric();

      /**
       * <code>optional uint32 previous_rank = 12;</code>
       */
      boolean hasPreviousRank();
      /**
       * <code>optional uint32 previous_rank = 12;</code>
       */
      int getPreviousRank();

      /**
       * <code>optional sint32 rank_change = 13;</code>
       */
      boolean hasRankChange();
      /**
       * <code>optional sint32 rank_change = 13;</code>
       */
      int getRankChange();

      /**
       * <code>optional bool solo_rank = 49;</code>
       */
      boolean hasSoloRank();
      /**
       * <code>optional bool solo_rank = 49;</code>
       */
      boolean getSoloRank();

      /**
       * <code>optional bool seasonal_rank = 53;</code>
       */
      boolean hasSeasonalRank();
      /**
       * <code>optional bool seasonal_rank = 53;</code>
       */
      boolean getSeasonalRank();

      /**
       * <code>optional bool rank_tier_updated = 66;</code>
       */
      boolean hasRankTierUpdated();
      /**
       * <code>optional bool rank_tier_updated = 66;</code>
       */
      boolean getRankTierUpdated();

      /**
       * <code>optional uint32 kills = 14;</code>
       */
      boolean hasKills();
      /**
       * <code>optional uint32 kills = 14;</code>
       */
      int getKills();

      /**
       * <code>optional uint32 deaths = 15;</code>
       */
      boolean hasDeaths();
      /**
       * <code>optional uint32 deaths = 15;</code>
       */
      int getDeaths();

      /**
       * <code>optional uint32 assists = 16;</code>
       */
      boolean hasAssists();
      /**
       * <code>optional uint32 assists = 16;</code>
       */
      int getAssists();

      /**
       * <code>optional uint32 leaver_status = 17;</code>
       */
      boolean hasLeaverStatus();
      /**
       * <code>optional uint32 leaver_status = 17;</code>
       */
      int getLeaverStatus();

      /**
       * <code>optional uint32 gold = 18;</code>
       */
      boolean hasGold();
      /**
       * <code>optional uint32 gold = 18;</code>
       */
      int getGold();

      /**
       * <code>optional uint32 last_hits = 19;</code>
       */
      boolean hasLastHits();
      /**
       * <code>optional uint32 last_hits = 19;</code>
       */
      int getLastHits();

      /**
       * <code>optional uint32 denies = 20;</code>
       */
      boolean hasDenies();
      /**
       * <code>optional uint32 denies = 20;</code>
       */
      int getDenies();

      /**
       * <code>optional uint32 gold_per_min = 21;</code>
       */
      boolean hasGoldPerMin();
      /**
       * <code>optional uint32 gold_per_min = 21;</code>
       */
      int getGoldPerMin();

      /**
       * <code>optional uint32 XP_per_min = 22;</code>
       */
      boolean hasXPPerMin();
      /**
       * <code>optional uint32 XP_per_min = 22;</code>
       */
      int getXPPerMin();

      /**
       * <code>optional uint32 gold_spent = 23;</code>
       */
      boolean hasGoldSpent();
      /**
       * <code>optional uint32 gold_spent = 23;</code>
       */
      int getGoldSpent();

      /**
       * <code>optional uint32 hero_damage = 24;</code>
       */
      boolean hasHeroDamage();
      /**
       * <code>optional uint32 hero_damage = 24;</code>
       */
      int getHeroDamage();

      /**
       * <code>optional uint32 tower_damage = 25;</code>
       */
      boolean hasTowerDamage();
      /**
       * <code>optional uint32 tower_damage = 25;</code>
       */
      int getTowerDamage();

      /**
       * <code>optional uint32 hero_healing = 26;</code>
       */
      boolean hasHeroHealing();
      /**
       * <code>optional uint32 hero_healing = 26;</code>
       */
      int getHeroHealing();

      /**
       * <code>optional uint32 level = 27;</code>
       */
      boolean hasLevel();
      /**
       * <code>optional uint32 level = 27;</code>
       */
      int getLevel();

      /**
       * <code>optional uint32 time_last_seen = 28;</code>
       */
      boolean hasTimeLastSeen();
      /**
       * <code>optional uint32 time_last_seen = 28;</code>
       */
      int getTimeLastSeen();

      /**
       * <code>optional string player_name = 29;</code>
       */
      boolean hasPlayerName();
      /**
       * <code>optional string player_name = 29;</code>
       */
      java.lang.String getPlayerName();
      /**
       * <code>optional string player_name = 29;</code>
       */
      com.google.protobuf.ByteString
          getPlayerNameBytes();

      /**
       * <code>optional uint32 support_ability_value = 30;</code>
       */
      boolean hasSupportAbilityValue();
      /**
       * <code>optional uint32 support_ability_value = 30;</code>
       */
      int getSupportAbilityValue();

      /**
       * <code>optional bool feeding_detected = 32;</code>
       */
      boolean hasFeedingDetected();
      /**
       * <code>optional bool feeding_detected = 32;</code>
       */
      boolean getFeedingDetected();

      /**
       * <code>optional uint32 search_rank = 34;</code>
       */
      boolean hasSearchRank();
      /**
       * <code>optional uint32 search_rank = 34;</code>
       */
      int getSearchRank();

      /**
       * <code>optional uint32 search_rank_uncertainty = 35;</code>
       */
      boolean hasSearchRankUncertainty();
      /**
       * <code>optional uint32 search_rank_uncertainty = 35;</code>
       */
      int getSearchRankUncertainty();

      /**
       * <code>optional int32 rank_uncertainty_change = 36;</code>
       */
      boolean hasRankUncertaintyChange();
      /**
       * <code>optional int32 rank_uncertainty_change = 36;</code>
       */
      int getRankUncertaintyChange();

      /**
       * <code>optional uint32 hero_play_count = 37;</code>
       */
      boolean hasHeroPlayCount();
      /**
       * <code>optional uint32 hero_play_count = 37;</code>
       */
      int getHeroPlayCount();

      /**
       * <code>optional fixed64 party_id = 38;</code>
       */
      boolean hasPartyId();
      /**
       * <code>optional fixed64 party_id = 38;</code>
       */
      long getPartyId();

      /**
       * <code>optional uint32 scaled_hero_damage = 54;</code>
       */
      boolean hasScaledHeroDamage();
      /**
       * <code>optional uint32 scaled_hero_damage = 54;</code>
       */
      int getScaledHeroDamage();

      /**
       * <code>optional uint32 scaled_tower_damage = 55;</code>
       */
      boolean hasScaledTowerDamage();
      /**
       * <code>optional uint32 scaled_tower_damage = 55;</code>
       */
      int getScaledTowerDamage();

      /**
       * <code>optional uint32 scaled_hero_healing = 56;</code>
       */
      boolean hasScaledHeroHealing();
      /**
       * <code>optional uint32 scaled_hero_healing = 56;</code>
       */
      int getScaledHeroHealing();

      /**
       * <code>optional float scaled_kills = 39;</code>
       */
      boolean hasScaledKills();
      /**
       * <code>optional float scaled_kills = 39;</code>
       */
      float getScaledKills();

      /**
       * <code>optional float scaled_deaths = 40;</code>
       */
      boolean hasScaledDeaths();
      /**
       * <code>optional float scaled_deaths = 40;</code>
       */
      float getScaledDeaths();

      /**
       * <code>optional float scaled_assists = 41;</code>
       */
      boolean hasScaledAssists();
      /**
       * <code>optional float scaled_assists = 41;</code>
       */
      float getScaledAssists();

      /**
       * <code>optional uint32 claimed_farm_gold = 42;</code>
       */
      boolean hasClaimedFarmGold();
      /**
       * <code>optional uint32 claimed_farm_gold = 42;</code>
       */
      int getClaimedFarmGold();

      /**
       * <code>optional uint32 support_gold = 43;</code>
       */
      boolean hasSupportGold();
      /**
       * <code>optional uint32 support_gold = 43;</code>
       */
      int getSupportGold();

      /**
       * <code>optional uint32 claimed_denies = 44;</code>
       */
      boolean hasClaimedDenies();
      /**
       * <code>optional uint32 claimed_denies = 44;</code>
       */
      int getClaimedDenies();

      /**
       * <code>optional uint32 claimed_misses = 45;</code>
       */
      boolean hasClaimedMisses();
      /**
       * <code>optional uint32 claimed_misses = 45;</code>
       */
      int getClaimedMisses();

      /**
       * <code>optional uint32 misses = 46;</code>
       */
      boolean hasMisses();
      /**
       * <code>optional uint32 misses = 46;</code>
       */
      int getMisses();

      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade> 
          getAbilityUpgradesList();
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade getAbilityUpgrades(int index);
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      int getAbilityUpgradesCount();
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder> 
          getAbilityUpgradesOrBuilderList();
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder getAbilityUpgradesOrBuilder(
          int index);

      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory> 
          getAdditionalUnitsInventoryList();
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory getAdditionalUnitsInventory(int index);
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      int getAdditionalUnitsInventoryCount();
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder> 
          getAdditionalUnitsInventoryOrBuilderList();
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder getAdditionalUnitsInventoryOrBuilder(
          int index);

      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff> 
          getPermanentBuffsList();
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff getPermanentBuffs(int index);
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      int getPermanentBuffsCount();
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder> 
          getPermanentBuffsOrBuilderList();
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder getPermanentBuffsOrBuilder(
          int index);

      /**
       * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
       */
      boolean hasCustomGameData();
      /**
       * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData getCustomGameData();
      /**
       * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder getCustomGameDataOrBuilder();

      /**
       * <code>optional bool active_prime_subscription = 51;</code>
       */
      boolean hasActivePrimeSubscription();
      /**
       * <code>optional bool active_prime_subscription = 51;</code>
       */
      boolean getActivePrimeSubscription();

      /**
       * <code>optional uint32 net_worth = 52;</code>
       */
      boolean hasNetWorth();
      /**
       * <code>optional uint32 net_worth = 52;</code>
       */
      int getNetWorth();

      /**
       * <code>optional uint32 bot_difficulty = 58;</code>
       */
      boolean hasBotDifficulty();
      /**
       * <code>optional uint32 bot_difficulty = 58;</code>
       */
      int getBotDifficulty();

      /**
       * <code>optional uint32 hero_pick_order = 63;</code>
       */
      boolean hasHeroPickOrder();
      /**
       * <code>optional uint32 hero_pick_order = 63;</code>
       */
      int getHeroPickOrder();

      /**
       * <code>optional bool hero_was_randomed = 64;</code>
       */
      boolean hasHeroWasRandomed();
      /**
       * <code>optional bool hero_was_randomed = 64;</code>
       */
      boolean getHeroWasRandomed();

      /**
       * <code>optional bool hero_was_bonus = 65;</code>
       */
      boolean hasHeroWasBonus();
      /**
       * <code>optional bool hero_was_bonus = 65;</code>
       */
      boolean getHeroWasBonus();
    }
    /**
     * Protobuf type {@code CMsgDOTAMatch.Player}
     */
    public static final class Player extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAMatch.Player)
        PlayerOrBuilder {
      // Use Player.newBuilder() to construct.
      private Player(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Player(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Player defaultInstance;
      public static Player getDefaultInstance() {
        return defaultInstance;
      }

      public Player getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Player(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        int mutable_bitField1_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                playerSlot_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                heroId_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                item0_ = input.readInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                item1_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                item2_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                item3_ = input.readInt32();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                item4_ = input.readInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000100;
                item5_ = input.readInt32();
                break;
              }
              case 85: {
                bitField0_ |= 0x00001000;
                expectedTeamContribution_ = input.readFloat();
                break;
              }
              case 93: {
                bitField0_ |= 0x00002000;
                scaledMetric_ = input.readFloat();
                break;
              }
              case 96: {
                bitField0_ |= 0x00004000;
                previousRank_ = input.readUInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00008000;
                rankChange_ = input.readSInt32();
                break;
              }
              case 112: {
                bitField0_ |= 0x00080000;
                kills_ = input.readUInt32();
                break;
              }
              case 120: {
                bitField0_ |= 0x00100000;
                deaths_ = input.readUInt32();
                break;
              }
              case 128: {
                bitField0_ |= 0x00200000;
                assists_ = input.readUInt32();
                break;
              }
              case 136: {
                bitField0_ |= 0x00400000;
                leaverStatus_ = input.readUInt32();
                break;
              }
              case 144: {
                bitField0_ |= 0x00800000;
                gold_ = input.readUInt32();
                break;
              }
              case 152: {
                bitField0_ |= 0x01000000;
                lastHits_ = input.readUInt32();
                break;
              }
              case 160: {
                bitField0_ |= 0x02000000;
                denies_ = input.readUInt32();
                break;
              }
              case 168: {
                bitField0_ |= 0x04000000;
                goldPerMin_ = input.readUInt32();
                break;
              }
              case 176: {
                bitField0_ |= 0x08000000;
                xPPerMin_ = input.readUInt32();
                break;
              }
              case 184: {
                bitField0_ |= 0x10000000;
                goldSpent_ = input.readUInt32();
                break;
              }
              case 192: {
                bitField0_ |= 0x20000000;
                heroDamage_ = input.readUInt32();
                break;
              }
              case 200: {
                bitField0_ |= 0x40000000;
                towerDamage_ = input.readUInt32();
                break;
              }
              case 208: {
                bitField0_ |= 0x80000000;
                heroHealing_ = input.readUInt32();
                break;
              }
              case 216: {
                bitField1_ |= 0x00000001;
                level_ = input.readUInt32();
                break;
              }
              case 224: {
                bitField1_ |= 0x00000002;
                timeLastSeen_ = input.readUInt32();
                break;
              }
              case 234: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField1_ |= 0x00000004;
                playerName_ = bs;
                break;
              }
              case 240: {
                bitField1_ |= 0x00000008;
                supportAbilityValue_ = input.readUInt32();
                break;
              }
              case 256: {
                bitField1_ |= 0x00000010;
                feedingDetected_ = input.readBool();
                break;
              }
              case 272: {
                bitField1_ |= 0x00000020;
                searchRank_ = input.readUInt32();
                break;
              }
              case 280: {
                bitField1_ |= 0x00000040;
                searchRankUncertainty_ = input.readUInt32();
                break;
              }
              case 288: {
                bitField1_ |= 0x00000080;
                rankUncertaintyChange_ = input.readInt32();
                break;
              }
              case 296: {
                bitField1_ |= 0x00000100;
                heroPlayCount_ = input.readUInt32();
                break;
              }
              case 305: {
                bitField1_ |= 0x00000200;
                partyId_ = input.readFixed64();
                break;
              }
              case 317: {
                bitField1_ |= 0x00002000;
                scaledKills_ = input.readFloat();
                break;
              }
              case 325: {
                bitField1_ |= 0x00004000;
                scaledDeaths_ = input.readFloat();
                break;
              }
              case 333: {
                bitField1_ |= 0x00008000;
                scaledAssists_ = input.readFloat();
                break;
              }
              case 336: {
                bitField1_ |= 0x00010000;
                claimedFarmGold_ = input.readUInt32();
                break;
              }
              case 344: {
                bitField1_ |= 0x00020000;
                supportGold_ = input.readUInt32();
                break;
              }
              case 352: {
                bitField1_ |= 0x00040000;
                claimedDenies_ = input.readUInt32();
                break;
              }
              case 360: {
                bitField1_ |= 0x00080000;
                claimedMisses_ = input.readUInt32();
                break;
              }
              case 368: {
                bitField1_ |= 0x00100000;
                misses_ = input.readUInt32();
                break;
              }
              case 378: {
                if (!((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
                  abilityUpgrades_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade>();
                  mutable_bitField1_ |= 0x00200000;
                }
                abilityUpgrades_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.PARSER, extensionRegistry));
                break;
              }
              case 386: {
                if (!((mutable_bitField1_ & 0x00400000) == 0x00400000)) {
                  additionalUnitsInventory_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory>();
                  mutable_bitField1_ |= 0x00400000;
                }
                additionalUnitsInventory_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.PARSER, extensionRegistry));
                break;
              }
              case 392: {
                bitField0_ |= 0x00010000;
                soloRank_ = input.readBool();
                break;
              }
              case 402: {
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder subBuilder = null;
                if (((bitField1_ & 0x00200000) == 0x00200000)) {
                  subBuilder = customGameData_.toBuilder();
                }
                customGameData_ = input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(customGameData_);
                  customGameData_ = subBuilder.buildPartial();
                }
                bitField1_ |= 0x00200000;
                break;
              }
              case 408: {
                bitField1_ |= 0x00400000;
                activePrimeSubscription_ = input.readBool();
                break;
              }
              case 416: {
                bitField1_ |= 0x00800000;
                netWorth_ = input.readUInt32();
                break;
              }
              case 424: {
                bitField0_ |= 0x00020000;
                seasonalRank_ = input.readBool();
                break;
              }
              case 432: {
                bitField1_ |= 0x00000400;
                scaledHeroDamage_ = input.readUInt32();
                break;
              }
              case 440: {
                bitField1_ |= 0x00000800;
                scaledTowerDamage_ = input.readUInt32();
                break;
              }
              case 448: {
                bitField1_ |= 0x00001000;
                scaledHeroHealing_ = input.readUInt32();
                break;
              }
              case 458: {
                if (!((mutable_bitField1_ & 0x00800000) == 0x00800000)) {
                  permanentBuffs_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff>();
                  mutable_bitField1_ |= 0x00800000;
                }
                permanentBuffs_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.PARSER, extensionRegistry));
                break;
              }
              case 464: {
                bitField1_ |= 0x01000000;
                botDifficulty_ = input.readUInt32();
                break;
              }
              case 472: {
                bitField0_ |= 0x00000200;
                item6_ = input.readInt32();
                break;
              }
              case 480: {
                bitField0_ |= 0x00000400;
                item7_ = input.readInt32();
                break;
              }
              case 488: {
                bitField0_ |= 0x00000800;
                item8_ = input.readInt32();
                break;
              }
              case 504: {
                bitField1_ |= 0x02000000;
                heroPickOrder_ = input.readUInt32();
                break;
              }
              case 512: {
                bitField1_ |= 0x04000000;
                heroWasRandomed_ = input.readBool();
                break;
              }
              case 520: {
                bitField1_ |= 0x08000000;
                heroWasBonus_ = input.readBool();
                break;
              }
              case 528: {
                bitField0_ |= 0x00040000;
                rankTierUpdated_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField1_ & 0x00200000) == 0x00200000)) {
            abilityUpgrades_ = java.util.Collections.unmodifiableList(abilityUpgrades_);
          }
          if (((mutable_bitField1_ & 0x00400000) == 0x00400000)) {
            additionalUnitsInventory_ = java.util.Collections.unmodifiableList(additionalUnitsInventory_);
          }
          if (((mutable_bitField1_ & 0x00800000) == 0x00800000)) {
            permanentBuffs_ = java.util.Collections.unmodifiableList(permanentBuffs_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder.class);
      }

      public static com.google.protobuf.Parser<Player> PARSER =
          new com.google.protobuf.AbstractParser<Player>() {
        public Player parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Player(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Player> getParserForType() {
        return PARSER;
      }

      public interface CustomGameDataOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMsgDOTAMatch.Player.CustomGameData)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        boolean hasDotaTeam();
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        int getDotaTeam();

        /**
         * <code>optional bool winner = 2;</code>
         */
        boolean hasWinner();
        /**
         * <code>optional bool winner = 2;</code>
         */
        boolean getWinner();
      }
      /**
       * Protobuf type {@code CMsgDOTAMatch.Player.CustomGameData}
       */
      public static final class CustomGameData extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMsgDOTAMatch.Player.CustomGameData)
          CustomGameDataOrBuilder {
        // Use CustomGameData.newBuilder() to construct.
        private CustomGameData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private CustomGameData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final CustomGameData defaultInstance;
        public static CustomGameData getDefaultInstance() {
          return defaultInstance;
        }

        public CustomGameData getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private CustomGameData(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  dotaTeam_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  winner_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_CustomGameData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_CustomGameData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder.class);
        }

        public static com.google.protobuf.Parser<CustomGameData> PARSER =
            new com.google.protobuf.AbstractParser<CustomGameData>() {
          public CustomGameData parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new CustomGameData(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<CustomGameData> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        public static final int DOTA_TEAM_FIELD_NUMBER = 1;
        private int dotaTeam_;
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public boolean hasDotaTeam() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 dota_team = 1;</code>
         */
        public int getDotaTeam() {
          return dotaTeam_;
        }

        public static final int WINNER_FIELD_NUMBER = 2;
        private boolean winner_;
        /**
         * <code>optional bool winner = 2;</code>
         */
        public boolean hasWinner() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool winner = 2;</code>
         */
        public boolean getWinner() {
          return winner_;
        }

        private void initFields() {
          dotaTeam_ = 0;
          winner_ = false;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, dotaTeam_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBool(2, winner_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, dotaTeam_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(2, winner_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMsgDOTAMatch.Player.CustomGameData}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMsgDOTAMatch.Player.CustomGameData)
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_CustomGameData_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_CustomGameData_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder.class);
          }

          // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            dotaTeam_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            winner_ = false;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_CustomGameData_descriptor;
          }

          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData getDefaultInstanceForType() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance();
          }

          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData build() {
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData buildPartial() {
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.dotaTeam_ = dotaTeam_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.winner_ = winner_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData) {
              return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData other) {
            if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance()) return this;
            if (other.hasDotaTeam()) {
              setDotaTeam(other.getDotaTeam());
            }
            if (other.hasWinner()) {
              setWinner(other.getWinner());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private int dotaTeam_ ;
          /**
           * <code>optional uint32 dota_team = 1;</code>
           */
          public boolean hasDotaTeam() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 dota_team = 1;</code>
           */
          public int getDotaTeam() {
            return dotaTeam_;
          }
          /**
           * <code>optional uint32 dota_team = 1;</code>
           */
          public Builder setDotaTeam(int value) {
            bitField0_ |= 0x00000001;
            dotaTeam_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 dota_team = 1;</code>
           */
          public Builder clearDotaTeam() {
            bitField0_ = (bitField0_ & ~0x00000001);
            dotaTeam_ = 0;
            onChanged();
            return this;
          }

          private boolean winner_ ;
          /**
           * <code>optional bool winner = 2;</code>
           */
          public boolean hasWinner() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional bool winner = 2;</code>
           */
          public boolean getWinner() {
            return winner_;
          }
          /**
           * <code>optional bool winner = 2;</code>
           */
          public Builder setWinner(boolean value) {
            bitField0_ |= 0x00000002;
            winner_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool winner = 2;</code>
           */
          public Builder clearWinner() {
            bitField0_ = (bitField0_ & ~0x00000002);
            winner_ = false;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMsgDOTAMatch.Player.CustomGameData)
        }

        static {
          defaultInstance = new CustomGameData(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.Player.CustomGameData)
      }

      private int bitField0_;
      private int bitField1_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int PLAYER_SLOT_FIELD_NUMBER = 2;
      private int playerSlot_;
      /**
       * <code>optional uint32 player_slot = 2;</code>
       */
      public boolean hasPlayerSlot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 player_slot = 2;</code>
       */
      public int getPlayerSlot() {
        return playerSlot_;
      }

      public static final int HERO_ID_FIELD_NUMBER = 3;
      private int heroId_;
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public boolean hasHeroId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 hero_id = 3;</code>
       */
      public int getHeroId() {
        return heroId_;
      }

      public static final int ITEM_0_FIELD_NUMBER = 4;
      private int item0_;
      /**
       * <code>optional int32 item_0 = 4;</code>
       */
      public boolean hasItem0() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 item_0 = 4;</code>
       */
      public int getItem0() {
        return item0_;
      }

      public static final int ITEM_1_FIELD_NUMBER = 5;
      private int item1_;
      /**
       * <code>optional int32 item_1 = 5;</code>
       */
      public boolean hasItem1() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 item_1 = 5;</code>
       */
      public int getItem1() {
        return item1_;
      }

      public static final int ITEM_2_FIELD_NUMBER = 6;
      private int item2_;
      /**
       * <code>optional int32 item_2 = 6;</code>
       */
      public boolean hasItem2() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 item_2 = 6;</code>
       */
      public int getItem2() {
        return item2_;
      }

      public static final int ITEM_3_FIELD_NUMBER = 7;
      private int item3_;
      /**
       * <code>optional int32 item_3 = 7;</code>
       */
      public boolean hasItem3() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 item_3 = 7;</code>
       */
      public int getItem3() {
        return item3_;
      }

      public static final int ITEM_4_FIELD_NUMBER = 8;
      private int item4_;
      /**
       * <code>optional int32 item_4 = 8;</code>
       */
      public boolean hasItem4() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 item_4 = 8;</code>
       */
      public int getItem4() {
        return item4_;
      }

      public static final int ITEM_5_FIELD_NUMBER = 9;
      private int item5_;
      /**
       * <code>optional int32 item_5 = 9;</code>
       */
      public boolean hasItem5() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 item_5 = 9;</code>
       */
      public int getItem5() {
        return item5_;
      }

      public static final int ITEM_6_FIELD_NUMBER = 59;
      private int item6_;
      /**
       * <code>optional int32 item_6 = 59;</code>
       */
      public boolean hasItem6() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 item_6 = 59;</code>
       */
      public int getItem6() {
        return item6_;
      }

      public static final int ITEM_7_FIELD_NUMBER = 60;
      private int item7_;
      /**
       * <code>optional int32 item_7 = 60;</code>
       */
      public boolean hasItem7() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 item_7 = 60;</code>
       */
      public int getItem7() {
        return item7_;
      }

      public static final int ITEM_8_FIELD_NUMBER = 61;
      private int item8_;
      /**
       * <code>optional int32 item_8 = 61;</code>
       */
      public boolean hasItem8() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 item_8 = 61;</code>
       */
      public int getItem8() {
        return item8_;
      }

      public static final int EXPECTED_TEAM_CONTRIBUTION_FIELD_NUMBER = 10;
      private float expectedTeamContribution_;
      /**
       * <code>optional float expected_team_contribution = 10;</code>
       */
      public boolean hasExpectedTeamContribution() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional float expected_team_contribution = 10;</code>
       */
      public float getExpectedTeamContribution() {
        return expectedTeamContribution_;
      }

      public static final int SCALED_METRIC_FIELD_NUMBER = 11;
      private float scaledMetric_;
      /**
       * <code>optional float scaled_metric = 11;</code>
       */
      public boolean hasScaledMetric() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float scaled_metric = 11;</code>
       */
      public float getScaledMetric() {
        return scaledMetric_;
      }

      public static final int PREVIOUS_RANK_FIELD_NUMBER = 12;
      private int previousRank_;
      /**
       * <code>optional uint32 previous_rank = 12;</code>
       */
      public boolean hasPreviousRank() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 previous_rank = 12;</code>
       */
      public int getPreviousRank() {
        return previousRank_;
      }

      public static final int RANK_CHANGE_FIELD_NUMBER = 13;
      private int rankChange_;
      /**
       * <code>optional sint32 rank_change = 13;</code>
       */
      public boolean hasRankChange() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional sint32 rank_change = 13;</code>
       */
      public int getRankChange() {
        return rankChange_;
      }

      public static final int SOLO_RANK_FIELD_NUMBER = 49;
      private boolean soloRank_;
      /**
       * <code>optional bool solo_rank = 49;</code>
       */
      public boolean hasSoloRank() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool solo_rank = 49;</code>
       */
      public boolean getSoloRank() {
        return soloRank_;
      }

      public static final int SEASONAL_RANK_FIELD_NUMBER = 53;
      private boolean seasonalRank_;
      /**
       * <code>optional bool seasonal_rank = 53;</code>
       */
      public boolean hasSeasonalRank() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional bool seasonal_rank = 53;</code>
       */
      public boolean getSeasonalRank() {
        return seasonalRank_;
      }

      public static final int RANK_TIER_UPDATED_FIELD_NUMBER = 66;
      private boolean rankTierUpdated_;
      /**
       * <code>optional bool rank_tier_updated = 66;</code>
       */
      public boolean hasRankTierUpdated() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool rank_tier_updated = 66;</code>
       */
      public boolean getRankTierUpdated() {
        return rankTierUpdated_;
      }

      public static final int KILLS_FIELD_NUMBER = 14;
      private int kills_;
      /**
       * <code>optional uint32 kills = 14;</code>
       */
      public boolean hasKills() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 kills = 14;</code>
       */
      public int getKills() {
        return kills_;
      }

      public static final int DEATHS_FIELD_NUMBER = 15;
      private int deaths_;
      /**
       * <code>optional uint32 deaths = 15;</code>
       */
      public boolean hasDeaths() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 deaths = 15;</code>
       */
      public int getDeaths() {
        return deaths_;
      }

      public static final int ASSISTS_FIELD_NUMBER = 16;
      private int assists_;
      /**
       * <code>optional uint32 assists = 16;</code>
       */
      public boolean hasAssists() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 assists = 16;</code>
       */
      public int getAssists() {
        return assists_;
      }

      public static final int LEAVER_STATUS_FIELD_NUMBER = 17;
      private int leaverStatus_;
      /**
       * <code>optional uint32 leaver_status = 17;</code>
       */
      public boolean hasLeaverStatus() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint32 leaver_status = 17;</code>
       */
      public int getLeaverStatus() {
        return leaverStatus_;
      }

      public static final int GOLD_FIELD_NUMBER = 18;
      private int gold_;
      /**
       * <code>optional uint32 gold = 18;</code>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 gold = 18;</code>
       */
      public int getGold() {
        return gold_;
      }

      public static final int LAST_HITS_FIELD_NUMBER = 19;
      private int lastHits_;
      /**
       * <code>optional uint32 last_hits = 19;</code>
       */
      public boolean hasLastHits() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 last_hits = 19;</code>
       */
      public int getLastHits() {
        return lastHits_;
      }

      public static final int DENIES_FIELD_NUMBER = 20;
      private int denies_;
      /**
       * <code>optional uint32 denies = 20;</code>
       */
      public boolean hasDenies() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 denies = 20;</code>
       */
      public int getDenies() {
        return denies_;
      }

      public static final int GOLD_PER_MIN_FIELD_NUMBER = 21;
      private int goldPerMin_;
      /**
       * <code>optional uint32 gold_per_min = 21;</code>
       */
      public boolean hasGoldPerMin() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 gold_per_min = 21;</code>
       */
      public int getGoldPerMin() {
        return goldPerMin_;
      }

      public static final int XP_PER_MIN_FIELD_NUMBER = 22;
      private int xPPerMin_;
      /**
       * <code>optional uint32 XP_per_min = 22;</code>
       */
      public boolean hasXPPerMin() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional uint32 XP_per_min = 22;</code>
       */
      public int getXPPerMin() {
        return xPPerMin_;
      }

      public static final int GOLD_SPENT_FIELD_NUMBER = 23;
      private int goldSpent_;
      /**
       * <code>optional uint32 gold_spent = 23;</code>
       */
      public boolean hasGoldSpent() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional uint32 gold_spent = 23;</code>
       */
      public int getGoldSpent() {
        return goldSpent_;
      }

      public static final int HERO_DAMAGE_FIELD_NUMBER = 24;
      private int heroDamage_;
      /**
       * <code>optional uint32 hero_damage = 24;</code>
       */
      public boolean hasHeroDamage() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint32 hero_damage = 24;</code>
       */
      public int getHeroDamage() {
        return heroDamage_;
      }

      public static final int TOWER_DAMAGE_FIELD_NUMBER = 25;
      private int towerDamage_;
      /**
       * <code>optional uint32 tower_damage = 25;</code>
       */
      public boolean hasTowerDamage() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional uint32 tower_damage = 25;</code>
       */
      public int getTowerDamage() {
        return towerDamage_;
      }

      public static final int HERO_HEALING_FIELD_NUMBER = 26;
      private int heroHealing_;
      /**
       * <code>optional uint32 hero_healing = 26;</code>
       */
      public boolean hasHeroHealing() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 hero_healing = 26;</code>
       */
      public int getHeroHealing() {
        return heroHealing_;
      }

      public static final int LEVEL_FIELD_NUMBER = 27;
      private int level_;
      /**
       * <code>optional uint32 level = 27;</code>
       */
      public boolean hasLevel() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 level = 27;</code>
       */
      public int getLevel() {
        return level_;
      }

      public static final int TIME_LAST_SEEN_FIELD_NUMBER = 28;
      private int timeLastSeen_;
      /**
       * <code>optional uint32 time_last_seen = 28;</code>
       */
      public boolean hasTimeLastSeen() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 time_last_seen = 28;</code>
       */
      public int getTimeLastSeen() {
        return timeLastSeen_;
      }

      public static final int PLAYER_NAME_FIELD_NUMBER = 29;
      private java.lang.Object playerName_;
      /**
       * <code>optional string player_name = 29;</code>
       */
      public boolean hasPlayerName() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string player_name = 29;</code>
       */
      public java.lang.String getPlayerName() {
        java.lang.Object ref = playerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            playerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string player_name = 29;</code>
       */
      public com.google.protobuf.ByteString
          getPlayerNameBytes() {
        java.lang.Object ref = playerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          playerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SUPPORT_ABILITY_VALUE_FIELD_NUMBER = 30;
      private int supportAbilityValue_;
      /**
       * <code>optional uint32 support_ability_value = 30;</code>
       */
      public boolean hasSupportAbilityValue() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 support_ability_value = 30;</code>
       */
      public int getSupportAbilityValue() {
        return supportAbilityValue_;
      }

      public static final int FEEDING_DETECTED_FIELD_NUMBER = 32;
      private boolean feedingDetected_;
      /**
       * <code>optional bool feeding_detected = 32;</code>
       */
      public boolean hasFeedingDetected() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool feeding_detected = 32;</code>
       */
      public boolean getFeedingDetected() {
        return feedingDetected_;
      }

      public static final int SEARCH_RANK_FIELD_NUMBER = 34;
      private int searchRank_;
      /**
       * <code>optional uint32 search_rank = 34;</code>
       */
      public boolean hasSearchRank() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 search_rank = 34;</code>
       */
      public int getSearchRank() {
        return searchRank_;
      }

      public static final int SEARCH_RANK_UNCERTAINTY_FIELD_NUMBER = 35;
      private int searchRankUncertainty_;
      /**
       * <code>optional uint32 search_rank_uncertainty = 35;</code>
       */
      public boolean hasSearchRankUncertainty() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 search_rank_uncertainty = 35;</code>
       */
      public int getSearchRankUncertainty() {
        return searchRankUncertainty_;
      }

      public static final int RANK_UNCERTAINTY_CHANGE_FIELD_NUMBER = 36;
      private int rankUncertaintyChange_;
      /**
       * <code>optional int32 rank_uncertainty_change = 36;</code>
       */
      public boolean hasRankUncertaintyChange() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 rank_uncertainty_change = 36;</code>
       */
      public int getRankUncertaintyChange() {
        return rankUncertaintyChange_;
      }

      public static final int HERO_PLAY_COUNT_FIELD_NUMBER = 37;
      private int heroPlayCount_;
      /**
       * <code>optional uint32 hero_play_count = 37;</code>
       */
      public boolean hasHeroPlayCount() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 hero_play_count = 37;</code>
       */
      public int getHeroPlayCount() {
        return heroPlayCount_;
      }

      public static final int PARTY_ID_FIELD_NUMBER = 38;
      private long partyId_;
      /**
       * <code>optional fixed64 party_id = 38;</code>
       */
      public boolean hasPartyId() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed64 party_id = 38;</code>
       */
      public long getPartyId() {
        return partyId_;
      }

      public static final int SCALED_HERO_DAMAGE_FIELD_NUMBER = 54;
      private int scaledHeroDamage_;
      /**
       * <code>optional uint32 scaled_hero_damage = 54;</code>
       */
      public boolean hasScaledHeroDamage() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 scaled_hero_damage = 54;</code>
       */
      public int getScaledHeroDamage() {
        return scaledHeroDamage_;
      }

      public static final int SCALED_TOWER_DAMAGE_FIELD_NUMBER = 55;
      private int scaledTowerDamage_;
      /**
       * <code>optional uint32 scaled_tower_damage = 55;</code>
       */
      public boolean hasScaledTowerDamage() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 scaled_tower_damage = 55;</code>
       */
      public int getScaledTowerDamage() {
        return scaledTowerDamage_;
      }

      public static final int SCALED_HERO_HEALING_FIELD_NUMBER = 56;
      private int scaledHeroHealing_;
      /**
       * <code>optional uint32 scaled_hero_healing = 56;</code>
       */
      public boolean hasScaledHeroHealing() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 scaled_hero_healing = 56;</code>
       */
      public int getScaledHeroHealing() {
        return scaledHeroHealing_;
      }

      public static final int SCALED_KILLS_FIELD_NUMBER = 39;
      private float scaledKills_;
      /**
       * <code>optional float scaled_kills = 39;</code>
       */
      public boolean hasScaledKills() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional float scaled_kills = 39;</code>
       */
      public float getScaledKills() {
        return scaledKills_;
      }

      public static final int SCALED_DEATHS_FIELD_NUMBER = 40;
      private float scaledDeaths_;
      /**
       * <code>optional float scaled_deaths = 40;</code>
       */
      public boolean hasScaledDeaths() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional float scaled_deaths = 40;</code>
       */
      public float getScaledDeaths() {
        return scaledDeaths_;
      }

      public static final int SCALED_ASSISTS_FIELD_NUMBER = 41;
      private float scaledAssists_;
      /**
       * <code>optional float scaled_assists = 41;</code>
       */
      public boolean hasScaledAssists() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float scaled_assists = 41;</code>
       */
      public float getScaledAssists() {
        return scaledAssists_;
      }

      public static final int CLAIMED_FARM_GOLD_FIELD_NUMBER = 42;
      private int claimedFarmGold_;
      /**
       * <code>optional uint32 claimed_farm_gold = 42;</code>
       */
      public boolean hasClaimedFarmGold() {
        return ((bitField1_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 claimed_farm_gold = 42;</code>
       */
      public int getClaimedFarmGold() {
        return claimedFarmGold_;
      }

      public static final int SUPPORT_GOLD_FIELD_NUMBER = 43;
      private int supportGold_;
      /**
       * <code>optional uint32 support_gold = 43;</code>
       */
      public boolean hasSupportGold() {
        return ((bitField1_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 support_gold = 43;</code>
       */
      public int getSupportGold() {
        return supportGold_;
      }

      public static final int CLAIMED_DENIES_FIELD_NUMBER = 44;
      private int claimedDenies_;
      /**
       * <code>optional uint32 claimed_denies = 44;</code>
       */
      public boolean hasClaimedDenies() {
        return ((bitField1_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 claimed_denies = 44;</code>
       */
      public int getClaimedDenies() {
        return claimedDenies_;
      }

      public static final int CLAIMED_MISSES_FIELD_NUMBER = 45;
      private int claimedMisses_;
      /**
       * <code>optional uint32 claimed_misses = 45;</code>
       */
      public boolean hasClaimedMisses() {
        return ((bitField1_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional uint32 claimed_misses = 45;</code>
       */
      public int getClaimedMisses() {
        return claimedMisses_;
      }

      public static final int MISSES_FIELD_NUMBER = 46;
      private int misses_;
      /**
       * <code>optional uint32 misses = 46;</code>
       */
      public boolean hasMisses() {
        return ((bitField1_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional uint32 misses = 46;</code>
       */
      public int getMisses() {
        return misses_;
      }

      public static final int ABILITY_UPGRADES_FIELD_NUMBER = 47;
      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade> abilityUpgrades_;
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade> getAbilityUpgradesList() {
        return abilityUpgrades_;
      }
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder> 
          getAbilityUpgradesOrBuilderList() {
        return abilityUpgrades_;
      }
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      public int getAbilityUpgradesCount() {
        return abilityUpgrades_.size();
      }
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade getAbilityUpgrades(int index) {
        return abilityUpgrades_.get(index);
      }
      /**
       * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder getAbilityUpgradesOrBuilder(
          int index) {
        return abilityUpgrades_.get(index);
      }

      public static final int ADDITIONAL_UNITS_INVENTORY_FIELD_NUMBER = 48;
      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory> additionalUnitsInventory_;
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory> getAdditionalUnitsInventoryList() {
        return additionalUnitsInventory_;
      }
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder> 
          getAdditionalUnitsInventoryOrBuilderList() {
        return additionalUnitsInventory_;
      }
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      public int getAdditionalUnitsInventoryCount() {
        return additionalUnitsInventory_.size();
      }
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory getAdditionalUnitsInventory(int index) {
        return additionalUnitsInventory_.get(index);
      }
      /**
       * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder getAdditionalUnitsInventoryOrBuilder(
          int index) {
        return additionalUnitsInventory_.get(index);
      }

      public static final int PERMANENT_BUFFS_FIELD_NUMBER = 57;
      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff> permanentBuffs_;
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff> getPermanentBuffsList() {
        return permanentBuffs_;
      }
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder> 
          getPermanentBuffsOrBuilderList() {
        return permanentBuffs_;
      }
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      public int getPermanentBuffsCount() {
        return permanentBuffs_.size();
      }
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff getPermanentBuffs(int index) {
        return permanentBuffs_.get(index);
      }
      /**
       * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder getPermanentBuffsOrBuilder(
          int index) {
        return permanentBuffs_.get(index);
      }

      public static final int CUSTOM_GAME_DATA_FIELD_NUMBER = 50;
      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData customGameData_;
      /**
       * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
       */
      public boolean hasCustomGameData() {
        return ((bitField1_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData getCustomGameData() {
        return customGameData_;
      }
      /**
       * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder getCustomGameDataOrBuilder() {
        return customGameData_;
      }

      public static final int ACTIVE_PRIME_SUBSCRIPTION_FIELD_NUMBER = 51;
      private boolean activePrimeSubscription_;
      /**
       * <code>optional bool active_prime_subscription = 51;</code>
       */
      public boolean hasActivePrimeSubscription() {
        return ((bitField1_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool active_prime_subscription = 51;</code>
       */
      public boolean getActivePrimeSubscription() {
        return activePrimeSubscription_;
      }

      public static final int NET_WORTH_FIELD_NUMBER = 52;
      private int netWorth_;
      /**
       * <code>optional uint32 net_worth = 52;</code>
       */
      public boolean hasNetWorth() {
        return ((bitField1_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 net_worth = 52;</code>
       */
      public int getNetWorth() {
        return netWorth_;
      }

      public static final int BOT_DIFFICULTY_FIELD_NUMBER = 58;
      private int botDifficulty_;
      /**
       * <code>optional uint32 bot_difficulty = 58;</code>
       */
      public boolean hasBotDifficulty() {
        return ((bitField1_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 bot_difficulty = 58;</code>
       */
      public int getBotDifficulty() {
        return botDifficulty_;
      }

      public static final int HERO_PICK_ORDER_FIELD_NUMBER = 63;
      private int heroPickOrder_;
      /**
       * <code>optional uint32 hero_pick_order = 63;</code>
       */
      public boolean hasHeroPickOrder() {
        return ((bitField1_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 hero_pick_order = 63;</code>
       */
      public int getHeroPickOrder() {
        return heroPickOrder_;
      }

      public static final int HERO_WAS_RANDOMED_FIELD_NUMBER = 64;
      private boolean heroWasRandomed_;
      /**
       * <code>optional bool hero_was_randomed = 64;</code>
       */
      public boolean hasHeroWasRandomed() {
        return ((bitField1_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool hero_was_randomed = 64;</code>
       */
      public boolean getHeroWasRandomed() {
        return heroWasRandomed_;
      }

      public static final int HERO_WAS_BONUS_FIELD_NUMBER = 65;
      private boolean heroWasBonus_;
      /**
       * <code>optional bool hero_was_bonus = 65;</code>
       */
      public boolean hasHeroWasBonus() {
        return ((bitField1_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool hero_was_bonus = 65;</code>
       */
      public boolean getHeroWasBonus() {
        return heroWasBonus_;
      }

      private void initFields() {
        accountId_ = 0;
        playerSlot_ = 0;
        heroId_ = 0;
        item0_ = 0;
        item1_ = 0;
        item2_ = 0;
        item3_ = 0;
        item4_ = 0;
        item5_ = 0;
        item6_ = 0;
        item7_ = 0;
        item8_ = 0;
        expectedTeamContribution_ = 0F;
        scaledMetric_ = 0F;
        previousRank_ = 0;
        rankChange_ = 0;
        soloRank_ = false;
        seasonalRank_ = false;
        rankTierUpdated_ = false;
        kills_ = 0;
        deaths_ = 0;
        assists_ = 0;
        leaverStatus_ = 0;
        gold_ = 0;
        lastHits_ = 0;
        denies_ = 0;
        goldPerMin_ = 0;
        xPPerMin_ = 0;
        goldSpent_ = 0;
        heroDamage_ = 0;
        towerDamage_ = 0;
        heroHealing_ = 0;
        level_ = 0;
        timeLastSeen_ = 0;
        playerName_ = "";
        supportAbilityValue_ = 0;
        feedingDetected_ = false;
        searchRank_ = 0;
        searchRankUncertainty_ = 0;
        rankUncertaintyChange_ = 0;
        heroPlayCount_ = 0;
        partyId_ = 0L;
        scaledHeroDamage_ = 0;
        scaledTowerDamage_ = 0;
        scaledHeroHealing_ = 0;
        scaledKills_ = 0F;
        scaledDeaths_ = 0F;
        scaledAssists_ = 0F;
        claimedFarmGold_ = 0;
        supportGold_ = 0;
        claimedDenies_ = 0;
        claimedMisses_ = 0;
        misses_ = 0;
        abilityUpgrades_ = java.util.Collections.emptyList();
        additionalUnitsInventory_ = java.util.Collections.emptyList();
        permanentBuffs_ = java.util.Collections.emptyList();
        customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance();
        activePrimeSubscription_ = false;
        netWorth_ = 0;
        botDifficulty_ = 0;
        heroPickOrder_ = 0;
        heroWasRandomed_ = false;
        heroWasBonus_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, playerSlot_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, heroId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, item0_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, item1_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, item2_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(7, item3_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(8, item4_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeInt32(9, item5_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          output.writeFloat(10, expectedTeamContribution_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          output.writeFloat(11, scaledMetric_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          output.writeUInt32(12, previousRank_);
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          output.writeSInt32(13, rankChange_);
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          output.writeUInt32(14, kills_);
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          output.writeUInt32(15, deaths_);
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          output.writeUInt32(16, assists_);
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          output.writeUInt32(17, leaverStatus_);
        }
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          output.writeUInt32(18, gold_);
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          output.writeUInt32(19, lastHits_);
        }
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          output.writeUInt32(20, denies_);
        }
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          output.writeUInt32(21, goldPerMin_);
        }
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          output.writeUInt32(22, xPPerMin_);
        }
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          output.writeUInt32(23, goldSpent_);
        }
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          output.writeUInt32(24, heroDamage_);
        }
        if (((bitField0_ & 0x40000000) == 0x40000000)) {
          output.writeUInt32(25, towerDamage_);
        }
        if (((bitField0_ & 0x80000000) == 0x80000000)) {
          output.writeUInt32(26, heroHealing_);
        }
        if (((bitField1_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(27, level_);
        }
        if (((bitField1_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(28, timeLastSeen_);
        }
        if (((bitField1_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(29, getPlayerNameBytes());
        }
        if (((bitField1_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(30, supportAbilityValue_);
        }
        if (((bitField1_ & 0x00000010) == 0x00000010)) {
          output.writeBool(32, feedingDetected_);
        }
        if (((bitField1_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(34, searchRank_);
        }
        if (((bitField1_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(35, searchRankUncertainty_);
        }
        if (((bitField1_ & 0x00000080) == 0x00000080)) {
          output.writeInt32(36, rankUncertaintyChange_);
        }
        if (((bitField1_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(37, heroPlayCount_);
        }
        if (((bitField1_ & 0x00000200) == 0x00000200)) {
          output.writeFixed64(38, partyId_);
        }
        if (((bitField1_ & 0x00002000) == 0x00002000)) {
          output.writeFloat(39, scaledKills_);
        }
        if (((bitField1_ & 0x00004000) == 0x00004000)) {
          output.writeFloat(40, scaledDeaths_);
        }
        if (((bitField1_ & 0x00008000) == 0x00008000)) {
          output.writeFloat(41, scaledAssists_);
        }
        if (((bitField1_ & 0x00010000) == 0x00010000)) {
          output.writeUInt32(42, claimedFarmGold_);
        }
        if (((bitField1_ & 0x00020000) == 0x00020000)) {
          output.writeUInt32(43, supportGold_);
        }
        if (((bitField1_ & 0x00040000) == 0x00040000)) {
          output.writeUInt32(44, claimedDenies_);
        }
        if (((bitField1_ & 0x00080000) == 0x00080000)) {
          output.writeUInt32(45, claimedMisses_);
        }
        if (((bitField1_ & 0x00100000) == 0x00100000)) {
          output.writeUInt32(46, misses_);
        }
        for (int i = 0; i < abilityUpgrades_.size(); i++) {
          output.writeMessage(47, abilityUpgrades_.get(i));
        }
        for (int i = 0; i < additionalUnitsInventory_.size(); i++) {
          output.writeMessage(48, additionalUnitsInventory_.get(i));
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          output.writeBool(49, soloRank_);
        }
        if (((bitField1_ & 0x00200000) == 0x00200000)) {
          output.writeMessage(50, customGameData_);
        }
        if (((bitField1_ & 0x00400000) == 0x00400000)) {
          output.writeBool(51, activePrimeSubscription_);
        }
        if (((bitField1_ & 0x00800000) == 0x00800000)) {
          output.writeUInt32(52, netWorth_);
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          output.writeBool(53, seasonalRank_);
        }
        if (((bitField1_ & 0x00000400) == 0x00000400)) {
          output.writeUInt32(54, scaledHeroDamage_);
        }
        if (((bitField1_ & 0x00000800) == 0x00000800)) {
          output.writeUInt32(55, scaledTowerDamage_);
        }
        if (((bitField1_ & 0x00001000) == 0x00001000)) {
          output.writeUInt32(56, scaledHeroHealing_);
        }
        for (int i = 0; i < permanentBuffs_.size(); i++) {
          output.writeMessage(57, permanentBuffs_.get(i));
        }
        if (((bitField1_ & 0x01000000) == 0x01000000)) {
          output.writeUInt32(58, botDifficulty_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeInt32(59, item6_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeInt32(60, item7_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeInt32(61, item8_);
        }
        if (((bitField1_ & 0x02000000) == 0x02000000)) {
          output.writeUInt32(63, heroPickOrder_);
        }
        if (((bitField1_ & 0x04000000) == 0x04000000)) {
          output.writeBool(64, heroWasRandomed_);
        }
        if (((bitField1_ & 0x08000000) == 0x08000000)) {
          output.writeBool(65, heroWasBonus_);
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          output.writeBool(66, rankTierUpdated_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, playerSlot_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, heroId_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, item0_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, item1_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, item2_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, item3_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, item4_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(9, item5_);
        }
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(10, expectedTeamContribution_);
        }
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(11, scaledMetric_);
        }
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(12, previousRank_);
        }
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(13, rankChange_);
        }
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(14, kills_);
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(15, deaths_);
        }
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(16, assists_);
        }
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(17, leaverStatus_);
        }
        if (((bitField0_ & 0x00800000) == 0x00800000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(18, gold_);
        }
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(19, lastHits_);
        }
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(20, denies_);
        }
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(21, goldPerMin_);
        }
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(22, xPPerMin_);
        }
        if (((bitField0_ & 0x10000000) == 0x10000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(23, goldSpent_);
        }
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(24, heroDamage_);
        }
        if (((bitField0_ & 0x40000000) == 0x40000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(25, towerDamage_);
        }
        if (((bitField0_ & 0x80000000) == 0x80000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(26, heroHealing_);
        }
        if (((bitField1_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(27, level_);
        }
        if (((bitField1_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(28, timeLastSeen_);
        }
        if (((bitField1_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(29, getPlayerNameBytes());
        }
        if (((bitField1_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(30, supportAbilityValue_);
        }
        if (((bitField1_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(32, feedingDetected_);
        }
        if (((bitField1_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(34, searchRank_);
        }
        if (((bitField1_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(35, searchRankUncertainty_);
        }
        if (((bitField1_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(36, rankUncertaintyChange_);
        }
        if (((bitField1_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(37, heroPlayCount_);
        }
        if (((bitField1_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(38, partyId_);
        }
        if (((bitField1_ & 0x00002000) == 0x00002000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(39, scaledKills_);
        }
        if (((bitField1_ & 0x00004000) == 0x00004000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(40, scaledDeaths_);
        }
        if (((bitField1_ & 0x00008000) == 0x00008000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(41, scaledAssists_);
        }
        if (((bitField1_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(42, claimedFarmGold_);
        }
        if (((bitField1_ & 0x00020000) == 0x00020000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(43, supportGold_);
        }
        if (((bitField1_ & 0x00040000) == 0x00040000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(44, claimedDenies_);
        }
        if (((bitField1_ & 0x00080000) == 0x00080000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(45, claimedMisses_);
        }
        if (((bitField1_ & 0x00100000) == 0x00100000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(46, misses_);
        }
        for (int i = 0; i < abilityUpgrades_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(47, abilityUpgrades_.get(i));
        }
        for (int i = 0; i < additionalUnitsInventory_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(48, additionalUnitsInventory_.get(i));
        }
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(49, soloRank_);
        }
        if (((bitField1_ & 0x00200000) == 0x00200000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(50, customGameData_);
        }
        if (((bitField1_ & 0x00400000) == 0x00400000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(51, activePrimeSubscription_);
        }
        if (((bitField1_ & 0x00800000) == 0x00800000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(52, netWorth_);
        }
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(53, seasonalRank_);
        }
        if (((bitField1_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(54, scaledHeroDamage_);
        }
        if (((bitField1_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(55, scaledTowerDamage_);
        }
        if (((bitField1_ & 0x00001000) == 0x00001000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(56, scaledHeroHealing_);
        }
        for (int i = 0; i < permanentBuffs_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(57, permanentBuffs_.get(i));
        }
        if (((bitField1_ & 0x01000000) == 0x01000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(58, botDifficulty_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(59, item6_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(60, item7_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(61, item8_);
        }
        if (((bitField1_ & 0x02000000) == 0x02000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(63, heroPickOrder_);
        }
        if (((bitField1_ & 0x04000000) == 0x04000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(64, heroWasRandomed_);
        }
        if (((bitField1_ & 0x08000000) == 0x08000000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(65, heroWasBonus_);
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(66, rankTierUpdated_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAMatch.Player}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAMatch.Player)
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder.class);
        }

        // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAbilityUpgradesFieldBuilder();
            getAdditionalUnitsInventoryFieldBuilder();
            getPermanentBuffsFieldBuilder();
            getCustomGameDataFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          playerSlot_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          heroId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          item0_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          item1_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          item2_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          item3_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          item4_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          item5_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          item6_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          item7_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          item8_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          expectedTeamContribution_ = 0F;
          bitField0_ = (bitField0_ & ~0x00001000);
          scaledMetric_ = 0F;
          bitField0_ = (bitField0_ & ~0x00002000);
          previousRank_ = 0;
          bitField0_ = (bitField0_ & ~0x00004000);
          rankChange_ = 0;
          bitField0_ = (bitField0_ & ~0x00008000);
          soloRank_ = false;
          bitField0_ = (bitField0_ & ~0x00010000);
          seasonalRank_ = false;
          bitField0_ = (bitField0_ & ~0x00020000);
          rankTierUpdated_ = false;
          bitField0_ = (bitField0_ & ~0x00040000);
          kills_ = 0;
          bitField0_ = (bitField0_ & ~0x00080000);
          deaths_ = 0;
          bitField0_ = (bitField0_ & ~0x00100000);
          assists_ = 0;
          bitField0_ = (bitField0_ & ~0x00200000);
          leaverStatus_ = 0;
          bitField0_ = (bitField0_ & ~0x00400000);
          gold_ = 0;
          bitField0_ = (bitField0_ & ~0x00800000);
          lastHits_ = 0;
          bitField0_ = (bitField0_ & ~0x01000000);
          denies_ = 0;
          bitField0_ = (bitField0_ & ~0x02000000);
          goldPerMin_ = 0;
          bitField0_ = (bitField0_ & ~0x04000000);
          xPPerMin_ = 0;
          bitField0_ = (bitField0_ & ~0x08000000);
          goldSpent_ = 0;
          bitField0_ = (bitField0_ & ~0x10000000);
          heroDamage_ = 0;
          bitField0_ = (bitField0_ & ~0x20000000);
          towerDamage_ = 0;
          bitField0_ = (bitField0_ & ~0x40000000);
          heroHealing_ = 0;
          bitField0_ = (bitField0_ & ~0x80000000);
          level_ = 0;
          bitField1_ = (bitField1_ & ~0x00000001);
          timeLastSeen_ = 0;
          bitField1_ = (bitField1_ & ~0x00000002);
          playerName_ = "";
          bitField1_ = (bitField1_ & ~0x00000004);
          supportAbilityValue_ = 0;
          bitField1_ = (bitField1_ & ~0x00000008);
          feedingDetected_ = false;
          bitField1_ = (bitField1_ & ~0x00000010);
          searchRank_ = 0;
          bitField1_ = (bitField1_ & ~0x00000020);
          searchRankUncertainty_ = 0;
          bitField1_ = (bitField1_ & ~0x00000040);
          rankUncertaintyChange_ = 0;
          bitField1_ = (bitField1_ & ~0x00000080);
          heroPlayCount_ = 0;
          bitField1_ = (bitField1_ & ~0x00000100);
          partyId_ = 0L;
          bitField1_ = (bitField1_ & ~0x00000200);
          scaledHeroDamage_ = 0;
          bitField1_ = (bitField1_ & ~0x00000400);
          scaledTowerDamage_ = 0;
          bitField1_ = (bitField1_ & ~0x00000800);
          scaledHeroHealing_ = 0;
          bitField1_ = (bitField1_ & ~0x00001000);
          scaledKills_ = 0F;
          bitField1_ = (bitField1_ & ~0x00002000);
          scaledDeaths_ = 0F;
          bitField1_ = (bitField1_ & ~0x00004000);
          scaledAssists_ = 0F;
          bitField1_ = (bitField1_ & ~0x00008000);
          claimedFarmGold_ = 0;
          bitField1_ = (bitField1_ & ~0x00010000);
          supportGold_ = 0;
          bitField1_ = (bitField1_ & ~0x00020000);
          claimedDenies_ = 0;
          bitField1_ = (bitField1_ & ~0x00040000);
          claimedMisses_ = 0;
          bitField1_ = (bitField1_ & ~0x00080000);
          misses_ = 0;
          bitField1_ = (bitField1_ & ~0x00100000);
          if (abilityUpgradesBuilder_ == null) {
            abilityUpgrades_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00200000);
          } else {
            abilityUpgradesBuilder_.clear();
          }
          if (additionalUnitsInventoryBuilder_ == null) {
            additionalUnitsInventory_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00400000);
          } else {
            additionalUnitsInventoryBuilder_.clear();
          }
          if (permanentBuffsBuilder_ == null) {
            permanentBuffs_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00800000);
          } else {
            permanentBuffsBuilder_.clear();
          }
          if (customGameDataBuilder_ == null) {
            customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance();
          } else {
            customGameDataBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x01000000);
          activePrimeSubscription_ = false;
          bitField1_ = (bitField1_ & ~0x02000000);
          netWorth_ = 0;
          bitField1_ = (bitField1_ & ~0x04000000);
          botDifficulty_ = 0;
          bitField1_ = (bitField1_ & ~0x08000000);
          heroPickOrder_ = 0;
          bitField1_ = (bitField1_ & ~0x10000000);
          heroWasRandomed_ = false;
          bitField1_ = (bitField1_ & ~0x20000000);
          heroWasBonus_ = false;
          bitField1_ = (bitField1_ & ~0x40000000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_Player_descriptor;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player getDefaultInstanceForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.getDefaultInstance();
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player build() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player buildPartial() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player(this);
          int from_bitField0_ = bitField0_;
          int from_bitField1_ = bitField1_;
          int to_bitField0_ = 0;
          int to_bitField1_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.playerSlot_ = playerSlot_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.heroId_ = heroId_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.item0_ = item0_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.item1_ = item1_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.item2_ = item2_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.item3_ = item3_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.item4_ = item4_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.item5_ = item5_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.item6_ = item6_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000400;
          }
          result.item7_ = item7_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000800;
          }
          result.item8_ = item8_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00001000;
          }
          result.expectedTeamContribution_ = expectedTeamContribution_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00002000;
          }
          result.scaledMetric_ = scaledMetric_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00004000;
          }
          result.previousRank_ = previousRank_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00008000;
          }
          result.rankChange_ = rankChange_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00010000;
          }
          result.soloRank_ = soloRank_;
          if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
            to_bitField0_ |= 0x00020000;
          }
          result.seasonalRank_ = seasonalRank_;
          if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
            to_bitField0_ |= 0x00040000;
          }
          result.rankTierUpdated_ = rankTierUpdated_;
          if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
            to_bitField0_ |= 0x00080000;
          }
          result.kills_ = kills_;
          if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
            to_bitField0_ |= 0x00100000;
          }
          result.deaths_ = deaths_;
          if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
            to_bitField0_ |= 0x00200000;
          }
          result.assists_ = assists_;
          if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
            to_bitField0_ |= 0x00400000;
          }
          result.leaverStatus_ = leaverStatus_;
          if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
            to_bitField0_ |= 0x00800000;
          }
          result.gold_ = gold_;
          if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
            to_bitField0_ |= 0x01000000;
          }
          result.lastHits_ = lastHits_;
          if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
            to_bitField0_ |= 0x02000000;
          }
          result.denies_ = denies_;
          if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
            to_bitField0_ |= 0x04000000;
          }
          result.goldPerMin_ = goldPerMin_;
          if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
            to_bitField0_ |= 0x08000000;
          }
          result.xPPerMin_ = xPPerMin_;
          if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
            to_bitField0_ |= 0x10000000;
          }
          result.goldSpent_ = goldSpent_;
          if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
            to_bitField0_ |= 0x20000000;
          }
          result.heroDamage_ = heroDamage_;
          if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
            to_bitField0_ |= 0x40000000;
          }
          result.towerDamage_ = towerDamage_;
          if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
            to_bitField0_ |= 0x80000000;
          }
          result.heroHealing_ = heroHealing_;
          if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
            to_bitField1_ |= 0x00000001;
          }
          result.level_ = level_;
          if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
            to_bitField1_ |= 0x00000002;
          }
          result.timeLastSeen_ = timeLastSeen_;
          if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
            to_bitField1_ |= 0x00000004;
          }
          result.playerName_ = playerName_;
          if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
            to_bitField1_ |= 0x00000008;
          }
          result.supportAbilityValue_ = supportAbilityValue_;
          if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
            to_bitField1_ |= 0x00000010;
          }
          result.feedingDetected_ = feedingDetected_;
          if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
            to_bitField1_ |= 0x00000020;
          }
          result.searchRank_ = searchRank_;
          if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
            to_bitField1_ |= 0x00000040;
          }
          result.searchRankUncertainty_ = searchRankUncertainty_;
          if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
            to_bitField1_ |= 0x00000080;
          }
          result.rankUncertaintyChange_ = rankUncertaintyChange_;
          if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
            to_bitField1_ |= 0x00000100;
          }
          result.heroPlayCount_ = heroPlayCount_;
          if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
            to_bitField1_ |= 0x00000200;
          }
          result.partyId_ = partyId_;
          if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
            to_bitField1_ |= 0x00000400;
          }
          result.scaledHeroDamage_ = scaledHeroDamage_;
          if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
            to_bitField1_ |= 0x00000800;
          }
          result.scaledTowerDamage_ = scaledTowerDamage_;
          if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
            to_bitField1_ |= 0x00001000;
          }
          result.scaledHeroHealing_ = scaledHeroHealing_;
          if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
            to_bitField1_ |= 0x00002000;
          }
          result.scaledKills_ = scaledKills_;
          if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
            to_bitField1_ |= 0x00004000;
          }
          result.scaledDeaths_ = scaledDeaths_;
          if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
            to_bitField1_ |= 0x00008000;
          }
          result.scaledAssists_ = scaledAssists_;
          if (((from_bitField1_ & 0x00010000) == 0x00010000)) {
            to_bitField1_ |= 0x00010000;
          }
          result.claimedFarmGold_ = claimedFarmGold_;
          if (((from_bitField1_ & 0x00020000) == 0x00020000)) {
            to_bitField1_ |= 0x00020000;
          }
          result.supportGold_ = supportGold_;
          if (((from_bitField1_ & 0x00040000) == 0x00040000)) {
            to_bitField1_ |= 0x00040000;
          }
          result.claimedDenies_ = claimedDenies_;
          if (((from_bitField1_ & 0x00080000) == 0x00080000)) {
            to_bitField1_ |= 0x00080000;
          }
          result.claimedMisses_ = claimedMisses_;
          if (((from_bitField1_ & 0x00100000) == 0x00100000)) {
            to_bitField1_ |= 0x00100000;
          }
          result.misses_ = misses_;
          if (abilityUpgradesBuilder_ == null) {
            if (((bitField1_ & 0x00200000) == 0x00200000)) {
              abilityUpgrades_ = java.util.Collections.unmodifiableList(abilityUpgrades_);
              bitField1_ = (bitField1_ & ~0x00200000);
            }
            result.abilityUpgrades_ = abilityUpgrades_;
          } else {
            result.abilityUpgrades_ = abilityUpgradesBuilder_.build();
          }
          if (additionalUnitsInventoryBuilder_ == null) {
            if (((bitField1_ & 0x00400000) == 0x00400000)) {
              additionalUnitsInventory_ = java.util.Collections.unmodifiableList(additionalUnitsInventory_);
              bitField1_ = (bitField1_ & ~0x00400000);
            }
            result.additionalUnitsInventory_ = additionalUnitsInventory_;
          } else {
            result.additionalUnitsInventory_ = additionalUnitsInventoryBuilder_.build();
          }
          if (permanentBuffsBuilder_ == null) {
            if (((bitField1_ & 0x00800000) == 0x00800000)) {
              permanentBuffs_ = java.util.Collections.unmodifiableList(permanentBuffs_);
              bitField1_ = (bitField1_ & ~0x00800000);
            }
            result.permanentBuffs_ = permanentBuffs_;
          } else {
            result.permanentBuffs_ = permanentBuffsBuilder_.build();
          }
          if (((from_bitField1_ & 0x01000000) == 0x01000000)) {
            to_bitField1_ |= 0x00200000;
          }
          if (customGameDataBuilder_ == null) {
            result.customGameData_ = customGameData_;
          } else {
            result.customGameData_ = customGameDataBuilder_.build();
          }
          if (((from_bitField1_ & 0x02000000) == 0x02000000)) {
            to_bitField1_ |= 0x00400000;
          }
          result.activePrimeSubscription_ = activePrimeSubscription_;
          if (((from_bitField1_ & 0x04000000) == 0x04000000)) {
            to_bitField1_ |= 0x00800000;
          }
          result.netWorth_ = netWorth_;
          if (((from_bitField1_ & 0x08000000) == 0x08000000)) {
            to_bitField1_ |= 0x01000000;
          }
          result.botDifficulty_ = botDifficulty_;
          if (((from_bitField1_ & 0x10000000) == 0x10000000)) {
            to_bitField1_ |= 0x02000000;
          }
          result.heroPickOrder_ = heroPickOrder_;
          if (((from_bitField1_ & 0x20000000) == 0x20000000)) {
            to_bitField1_ |= 0x04000000;
          }
          result.heroWasRandomed_ = heroWasRandomed_;
          if (((from_bitField1_ & 0x40000000) == 0x40000000)) {
            to_bitField1_ |= 0x08000000;
          }
          result.heroWasBonus_ = heroWasBonus_;
          result.bitField0_ = to_bitField0_;
          result.bitField1_ = to_bitField1_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player) {
            return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player other) {
          if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasPlayerSlot()) {
            setPlayerSlot(other.getPlayerSlot());
          }
          if (other.hasHeroId()) {
            setHeroId(other.getHeroId());
          }
          if (other.hasItem0()) {
            setItem0(other.getItem0());
          }
          if (other.hasItem1()) {
            setItem1(other.getItem1());
          }
          if (other.hasItem2()) {
            setItem2(other.getItem2());
          }
          if (other.hasItem3()) {
            setItem3(other.getItem3());
          }
          if (other.hasItem4()) {
            setItem4(other.getItem4());
          }
          if (other.hasItem5()) {
            setItem5(other.getItem5());
          }
          if (other.hasItem6()) {
            setItem6(other.getItem6());
          }
          if (other.hasItem7()) {
            setItem7(other.getItem7());
          }
          if (other.hasItem8()) {
            setItem8(other.getItem8());
          }
          if (other.hasExpectedTeamContribution()) {
            setExpectedTeamContribution(other.getExpectedTeamContribution());
          }
          if (other.hasScaledMetric()) {
            setScaledMetric(other.getScaledMetric());
          }
          if (other.hasPreviousRank()) {
            setPreviousRank(other.getPreviousRank());
          }
          if (other.hasRankChange()) {
            setRankChange(other.getRankChange());
          }
          if (other.hasSoloRank()) {
            setSoloRank(other.getSoloRank());
          }
          if (other.hasSeasonalRank()) {
            setSeasonalRank(other.getSeasonalRank());
          }
          if (other.hasRankTierUpdated()) {
            setRankTierUpdated(other.getRankTierUpdated());
          }
          if (other.hasKills()) {
            setKills(other.getKills());
          }
          if (other.hasDeaths()) {
            setDeaths(other.getDeaths());
          }
          if (other.hasAssists()) {
            setAssists(other.getAssists());
          }
          if (other.hasLeaverStatus()) {
            setLeaverStatus(other.getLeaverStatus());
          }
          if (other.hasGold()) {
            setGold(other.getGold());
          }
          if (other.hasLastHits()) {
            setLastHits(other.getLastHits());
          }
          if (other.hasDenies()) {
            setDenies(other.getDenies());
          }
          if (other.hasGoldPerMin()) {
            setGoldPerMin(other.getGoldPerMin());
          }
          if (other.hasXPPerMin()) {
            setXPPerMin(other.getXPPerMin());
          }
          if (other.hasGoldSpent()) {
            setGoldSpent(other.getGoldSpent());
          }
          if (other.hasHeroDamage()) {
            setHeroDamage(other.getHeroDamage());
          }
          if (other.hasTowerDamage()) {
            setTowerDamage(other.getTowerDamage());
          }
          if (other.hasHeroHealing()) {
            setHeroHealing(other.getHeroHealing());
          }
          if (other.hasLevel()) {
            setLevel(other.getLevel());
          }
          if (other.hasTimeLastSeen()) {
            setTimeLastSeen(other.getTimeLastSeen());
          }
          if (other.hasPlayerName()) {
            bitField1_ |= 0x00000004;
            playerName_ = other.playerName_;
            onChanged();
          }
          if (other.hasSupportAbilityValue()) {
            setSupportAbilityValue(other.getSupportAbilityValue());
          }
          if (other.hasFeedingDetected()) {
            setFeedingDetected(other.getFeedingDetected());
          }
          if (other.hasSearchRank()) {
            setSearchRank(other.getSearchRank());
          }
          if (other.hasSearchRankUncertainty()) {
            setSearchRankUncertainty(other.getSearchRankUncertainty());
          }
          if (other.hasRankUncertaintyChange()) {
            setRankUncertaintyChange(other.getRankUncertaintyChange());
          }
          if (other.hasHeroPlayCount()) {
            setHeroPlayCount(other.getHeroPlayCount());
          }
          if (other.hasPartyId()) {
            setPartyId(other.getPartyId());
          }
          if (other.hasScaledHeroDamage()) {
            setScaledHeroDamage(other.getScaledHeroDamage());
          }
          if (other.hasScaledTowerDamage()) {
            setScaledTowerDamage(other.getScaledTowerDamage());
          }
          if (other.hasScaledHeroHealing()) {
            setScaledHeroHealing(other.getScaledHeroHealing());
          }
          if (other.hasScaledKills()) {
            setScaledKills(other.getScaledKills());
          }
          if (other.hasScaledDeaths()) {
            setScaledDeaths(other.getScaledDeaths());
          }
          if (other.hasScaledAssists()) {
            setScaledAssists(other.getScaledAssists());
          }
          if (other.hasClaimedFarmGold()) {
            setClaimedFarmGold(other.getClaimedFarmGold());
          }
          if (other.hasSupportGold()) {
            setSupportGold(other.getSupportGold());
          }
          if (other.hasClaimedDenies()) {
            setClaimedDenies(other.getClaimedDenies());
          }
          if (other.hasClaimedMisses()) {
            setClaimedMisses(other.getClaimedMisses());
          }
          if (other.hasMisses()) {
            setMisses(other.getMisses());
          }
          if (abilityUpgradesBuilder_ == null) {
            if (!other.abilityUpgrades_.isEmpty()) {
              if (abilityUpgrades_.isEmpty()) {
                abilityUpgrades_ = other.abilityUpgrades_;
                bitField1_ = (bitField1_ & ~0x00200000);
              } else {
                ensureAbilityUpgradesIsMutable();
                abilityUpgrades_.addAll(other.abilityUpgrades_);
              }
              onChanged();
            }
          } else {
            if (!other.abilityUpgrades_.isEmpty()) {
              if (abilityUpgradesBuilder_.isEmpty()) {
                abilityUpgradesBuilder_.dispose();
                abilityUpgradesBuilder_ = null;
                abilityUpgrades_ = other.abilityUpgrades_;
                bitField1_ = (bitField1_ & ~0x00200000);
                abilityUpgradesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAbilityUpgradesFieldBuilder() : null;
              } else {
                abilityUpgradesBuilder_.addAllMessages(other.abilityUpgrades_);
              }
            }
          }
          if (additionalUnitsInventoryBuilder_ == null) {
            if (!other.additionalUnitsInventory_.isEmpty()) {
              if (additionalUnitsInventory_.isEmpty()) {
                additionalUnitsInventory_ = other.additionalUnitsInventory_;
                bitField1_ = (bitField1_ & ~0x00400000);
              } else {
                ensureAdditionalUnitsInventoryIsMutable();
                additionalUnitsInventory_.addAll(other.additionalUnitsInventory_);
              }
              onChanged();
            }
          } else {
            if (!other.additionalUnitsInventory_.isEmpty()) {
              if (additionalUnitsInventoryBuilder_.isEmpty()) {
                additionalUnitsInventoryBuilder_.dispose();
                additionalUnitsInventoryBuilder_ = null;
                additionalUnitsInventory_ = other.additionalUnitsInventory_;
                bitField1_ = (bitField1_ & ~0x00400000);
                additionalUnitsInventoryBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAdditionalUnitsInventoryFieldBuilder() : null;
              } else {
                additionalUnitsInventoryBuilder_.addAllMessages(other.additionalUnitsInventory_);
              }
            }
          }
          if (permanentBuffsBuilder_ == null) {
            if (!other.permanentBuffs_.isEmpty()) {
              if (permanentBuffs_.isEmpty()) {
                permanentBuffs_ = other.permanentBuffs_;
                bitField1_ = (bitField1_ & ~0x00800000);
              } else {
                ensurePermanentBuffsIsMutable();
                permanentBuffs_.addAll(other.permanentBuffs_);
              }
              onChanged();
            }
          } else {
            if (!other.permanentBuffs_.isEmpty()) {
              if (permanentBuffsBuilder_.isEmpty()) {
                permanentBuffsBuilder_.dispose();
                permanentBuffsBuilder_ = null;
                permanentBuffs_ = other.permanentBuffs_;
                bitField1_ = (bitField1_ & ~0x00800000);
                permanentBuffsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getPermanentBuffsFieldBuilder() : null;
              } else {
                permanentBuffsBuilder_.addAllMessages(other.permanentBuffs_);
              }
            }
          }
          if (other.hasCustomGameData()) {
            mergeCustomGameData(other.getCustomGameData());
          }
          if (other.hasActivePrimeSubscription()) {
            setActivePrimeSubscription(other.getActivePrimeSubscription());
          }
          if (other.hasNetWorth()) {
            setNetWorth(other.getNetWorth());
          }
          if (other.hasBotDifficulty()) {
            setBotDifficulty(other.getBotDifficulty());
          }
          if (other.hasHeroPickOrder()) {
            setHeroPickOrder(other.getHeroPickOrder());
          }
          if (other.hasHeroWasRandomed()) {
            setHeroWasRandomed(other.getHeroWasRandomed());
          }
          if (other.hasHeroWasBonus()) {
            setHeroWasBonus(other.getHeroWasBonus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;
        private int bitField1_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private int playerSlot_ ;
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        public boolean hasPlayerSlot() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        public int getPlayerSlot() {
          return playerSlot_;
        }
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        public Builder setPlayerSlot(int value) {
          bitField0_ |= 0x00000002;
          playerSlot_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 player_slot = 2;</code>
         */
        public Builder clearPlayerSlot() {
          bitField0_ = (bitField0_ & ~0x00000002);
          playerSlot_ = 0;
          onChanged();
          return this;
        }

        private int heroId_ ;
        /**
         * <code>optional uint32 hero_id = 3;</code>
         */
        public boolean hasHeroId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 hero_id = 3;</code>
         */
        public int getHeroId() {
          return heroId_;
        }
        /**
         * <code>optional uint32 hero_id = 3;</code>
         */
        public Builder setHeroId(int value) {
          bitField0_ |= 0x00000004;
          heroId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_id = 3;</code>
         */
        public Builder clearHeroId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          heroId_ = 0;
          onChanged();
          return this;
        }

        private int item0_ ;
        /**
         * <code>optional int32 item_0 = 4;</code>
         */
        public boolean hasItem0() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int32 item_0 = 4;</code>
         */
        public int getItem0() {
          return item0_;
        }
        /**
         * <code>optional int32 item_0 = 4;</code>
         */
        public Builder setItem0(int value) {
          bitField0_ |= 0x00000008;
          item0_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_0 = 4;</code>
         */
        public Builder clearItem0() {
          bitField0_ = (bitField0_ & ~0x00000008);
          item0_ = 0;
          onChanged();
          return this;
        }

        private int item1_ ;
        /**
         * <code>optional int32 item_1 = 5;</code>
         */
        public boolean hasItem1() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 item_1 = 5;</code>
         */
        public int getItem1() {
          return item1_;
        }
        /**
         * <code>optional int32 item_1 = 5;</code>
         */
        public Builder setItem1(int value) {
          bitField0_ |= 0x00000010;
          item1_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_1 = 5;</code>
         */
        public Builder clearItem1() {
          bitField0_ = (bitField0_ & ~0x00000010);
          item1_ = 0;
          onChanged();
          return this;
        }

        private int item2_ ;
        /**
         * <code>optional int32 item_2 = 6;</code>
         */
        public boolean hasItem2() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 item_2 = 6;</code>
         */
        public int getItem2() {
          return item2_;
        }
        /**
         * <code>optional int32 item_2 = 6;</code>
         */
        public Builder setItem2(int value) {
          bitField0_ |= 0x00000020;
          item2_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_2 = 6;</code>
         */
        public Builder clearItem2() {
          bitField0_ = (bitField0_ & ~0x00000020);
          item2_ = 0;
          onChanged();
          return this;
        }

        private int item3_ ;
        /**
         * <code>optional int32 item_3 = 7;</code>
         */
        public boolean hasItem3() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional int32 item_3 = 7;</code>
         */
        public int getItem3() {
          return item3_;
        }
        /**
         * <code>optional int32 item_3 = 7;</code>
         */
        public Builder setItem3(int value) {
          bitField0_ |= 0x00000040;
          item3_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_3 = 7;</code>
         */
        public Builder clearItem3() {
          bitField0_ = (bitField0_ & ~0x00000040);
          item3_ = 0;
          onChanged();
          return this;
        }

        private int item4_ ;
        /**
         * <code>optional int32 item_4 = 8;</code>
         */
        public boolean hasItem4() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional int32 item_4 = 8;</code>
         */
        public int getItem4() {
          return item4_;
        }
        /**
         * <code>optional int32 item_4 = 8;</code>
         */
        public Builder setItem4(int value) {
          bitField0_ |= 0x00000080;
          item4_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_4 = 8;</code>
         */
        public Builder clearItem4() {
          bitField0_ = (bitField0_ & ~0x00000080);
          item4_ = 0;
          onChanged();
          return this;
        }

        private int item5_ ;
        /**
         * <code>optional int32 item_5 = 9;</code>
         */
        public boolean hasItem5() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional int32 item_5 = 9;</code>
         */
        public int getItem5() {
          return item5_;
        }
        /**
         * <code>optional int32 item_5 = 9;</code>
         */
        public Builder setItem5(int value) {
          bitField0_ |= 0x00000100;
          item5_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_5 = 9;</code>
         */
        public Builder clearItem5() {
          bitField0_ = (bitField0_ & ~0x00000100);
          item5_ = 0;
          onChanged();
          return this;
        }

        private int item6_ ;
        /**
         * <code>optional int32 item_6 = 59;</code>
         */
        public boolean hasItem6() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional int32 item_6 = 59;</code>
         */
        public int getItem6() {
          return item6_;
        }
        /**
         * <code>optional int32 item_6 = 59;</code>
         */
        public Builder setItem6(int value) {
          bitField0_ |= 0x00000200;
          item6_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_6 = 59;</code>
         */
        public Builder clearItem6() {
          bitField0_ = (bitField0_ & ~0x00000200);
          item6_ = 0;
          onChanged();
          return this;
        }

        private int item7_ ;
        /**
         * <code>optional int32 item_7 = 60;</code>
         */
        public boolean hasItem7() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 item_7 = 60;</code>
         */
        public int getItem7() {
          return item7_;
        }
        /**
         * <code>optional int32 item_7 = 60;</code>
         */
        public Builder setItem7(int value) {
          bitField0_ |= 0x00000400;
          item7_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_7 = 60;</code>
         */
        public Builder clearItem7() {
          bitField0_ = (bitField0_ & ~0x00000400);
          item7_ = 0;
          onChanged();
          return this;
        }

        private int item8_ ;
        /**
         * <code>optional int32 item_8 = 61;</code>
         */
        public boolean hasItem8() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional int32 item_8 = 61;</code>
         */
        public int getItem8() {
          return item8_;
        }
        /**
         * <code>optional int32 item_8 = 61;</code>
         */
        public Builder setItem8(int value) {
          bitField0_ |= 0x00000800;
          item8_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 item_8 = 61;</code>
         */
        public Builder clearItem8() {
          bitField0_ = (bitField0_ & ~0x00000800);
          item8_ = 0;
          onChanged();
          return this;
        }

        private float expectedTeamContribution_ ;
        /**
         * <code>optional float expected_team_contribution = 10;</code>
         */
        public boolean hasExpectedTeamContribution() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional float expected_team_contribution = 10;</code>
         */
        public float getExpectedTeamContribution() {
          return expectedTeamContribution_;
        }
        /**
         * <code>optional float expected_team_contribution = 10;</code>
         */
        public Builder setExpectedTeamContribution(float value) {
          bitField0_ |= 0x00001000;
          expectedTeamContribution_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float expected_team_contribution = 10;</code>
         */
        public Builder clearExpectedTeamContribution() {
          bitField0_ = (bitField0_ & ~0x00001000);
          expectedTeamContribution_ = 0F;
          onChanged();
          return this;
        }

        private float scaledMetric_ ;
        /**
         * <code>optional float scaled_metric = 11;</code>
         */
        public boolean hasScaledMetric() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional float scaled_metric = 11;</code>
         */
        public float getScaledMetric() {
          return scaledMetric_;
        }
        /**
         * <code>optional float scaled_metric = 11;</code>
         */
        public Builder setScaledMetric(float value) {
          bitField0_ |= 0x00002000;
          scaledMetric_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float scaled_metric = 11;</code>
         */
        public Builder clearScaledMetric() {
          bitField0_ = (bitField0_ & ~0x00002000);
          scaledMetric_ = 0F;
          onChanged();
          return this;
        }

        private int previousRank_ ;
        /**
         * <code>optional uint32 previous_rank = 12;</code>
         */
        public boolean hasPreviousRank() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional uint32 previous_rank = 12;</code>
         */
        public int getPreviousRank() {
          return previousRank_;
        }
        /**
         * <code>optional uint32 previous_rank = 12;</code>
         */
        public Builder setPreviousRank(int value) {
          bitField0_ |= 0x00004000;
          previousRank_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 previous_rank = 12;</code>
         */
        public Builder clearPreviousRank() {
          bitField0_ = (bitField0_ & ~0x00004000);
          previousRank_ = 0;
          onChanged();
          return this;
        }

        private int rankChange_ ;
        /**
         * <code>optional sint32 rank_change = 13;</code>
         */
        public boolean hasRankChange() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional sint32 rank_change = 13;</code>
         */
        public int getRankChange() {
          return rankChange_;
        }
        /**
         * <code>optional sint32 rank_change = 13;</code>
         */
        public Builder setRankChange(int value) {
          bitField0_ |= 0x00008000;
          rankChange_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint32 rank_change = 13;</code>
         */
        public Builder clearRankChange() {
          bitField0_ = (bitField0_ & ~0x00008000);
          rankChange_ = 0;
          onChanged();
          return this;
        }

        private boolean soloRank_ ;
        /**
         * <code>optional bool solo_rank = 49;</code>
         */
        public boolean hasSoloRank() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional bool solo_rank = 49;</code>
         */
        public boolean getSoloRank() {
          return soloRank_;
        }
        /**
         * <code>optional bool solo_rank = 49;</code>
         */
        public Builder setSoloRank(boolean value) {
          bitField0_ |= 0x00010000;
          soloRank_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool solo_rank = 49;</code>
         */
        public Builder clearSoloRank() {
          bitField0_ = (bitField0_ & ~0x00010000);
          soloRank_ = false;
          onChanged();
          return this;
        }

        private boolean seasonalRank_ ;
        /**
         * <code>optional bool seasonal_rank = 53;</code>
         */
        public boolean hasSeasonalRank() {
          return ((bitField0_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional bool seasonal_rank = 53;</code>
         */
        public boolean getSeasonalRank() {
          return seasonalRank_;
        }
        /**
         * <code>optional bool seasonal_rank = 53;</code>
         */
        public Builder setSeasonalRank(boolean value) {
          bitField0_ |= 0x00020000;
          seasonalRank_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool seasonal_rank = 53;</code>
         */
        public Builder clearSeasonalRank() {
          bitField0_ = (bitField0_ & ~0x00020000);
          seasonalRank_ = false;
          onChanged();
          return this;
        }

        private boolean rankTierUpdated_ ;
        /**
         * <code>optional bool rank_tier_updated = 66;</code>
         */
        public boolean hasRankTierUpdated() {
          return ((bitField0_ & 0x00040000) == 0x00040000);
        }
        /**
         * <code>optional bool rank_tier_updated = 66;</code>
         */
        public boolean getRankTierUpdated() {
          return rankTierUpdated_;
        }
        /**
         * <code>optional bool rank_tier_updated = 66;</code>
         */
        public Builder setRankTierUpdated(boolean value) {
          bitField0_ |= 0x00040000;
          rankTierUpdated_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool rank_tier_updated = 66;</code>
         */
        public Builder clearRankTierUpdated() {
          bitField0_ = (bitField0_ & ~0x00040000);
          rankTierUpdated_ = false;
          onChanged();
          return this;
        }

        private int kills_ ;
        /**
         * <code>optional uint32 kills = 14;</code>
         */
        public boolean hasKills() {
          return ((bitField0_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>optional uint32 kills = 14;</code>
         */
        public int getKills() {
          return kills_;
        }
        /**
         * <code>optional uint32 kills = 14;</code>
         */
        public Builder setKills(int value) {
          bitField0_ |= 0x00080000;
          kills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 kills = 14;</code>
         */
        public Builder clearKills() {
          bitField0_ = (bitField0_ & ~0x00080000);
          kills_ = 0;
          onChanged();
          return this;
        }

        private int deaths_ ;
        /**
         * <code>optional uint32 deaths = 15;</code>
         */
        public boolean hasDeaths() {
          return ((bitField0_ & 0x00100000) == 0x00100000);
        }
        /**
         * <code>optional uint32 deaths = 15;</code>
         */
        public int getDeaths() {
          return deaths_;
        }
        /**
         * <code>optional uint32 deaths = 15;</code>
         */
        public Builder setDeaths(int value) {
          bitField0_ |= 0x00100000;
          deaths_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 deaths = 15;</code>
         */
        public Builder clearDeaths() {
          bitField0_ = (bitField0_ & ~0x00100000);
          deaths_ = 0;
          onChanged();
          return this;
        }

        private int assists_ ;
        /**
         * <code>optional uint32 assists = 16;</code>
         */
        public boolean hasAssists() {
          return ((bitField0_ & 0x00200000) == 0x00200000);
        }
        /**
         * <code>optional uint32 assists = 16;</code>
         */
        public int getAssists() {
          return assists_;
        }
        /**
         * <code>optional uint32 assists = 16;</code>
         */
        public Builder setAssists(int value) {
          bitField0_ |= 0x00200000;
          assists_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 assists = 16;</code>
         */
        public Builder clearAssists() {
          bitField0_ = (bitField0_ & ~0x00200000);
          assists_ = 0;
          onChanged();
          return this;
        }

        private int leaverStatus_ ;
        /**
         * <code>optional uint32 leaver_status = 17;</code>
         */
        public boolean hasLeaverStatus() {
          return ((bitField0_ & 0x00400000) == 0x00400000);
        }
        /**
         * <code>optional uint32 leaver_status = 17;</code>
         */
        public int getLeaverStatus() {
          return leaverStatus_;
        }
        /**
         * <code>optional uint32 leaver_status = 17;</code>
         */
        public Builder setLeaverStatus(int value) {
          bitField0_ |= 0x00400000;
          leaverStatus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 leaver_status = 17;</code>
         */
        public Builder clearLeaverStatus() {
          bitField0_ = (bitField0_ & ~0x00400000);
          leaverStatus_ = 0;
          onChanged();
          return this;
        }

        private int gold_ ;
        /**
         * <code>optional uint32 gold = 18;</code>
         */
        public boolean hasGold() {
          return ((bitField0_ & 0x00800000) == 0x00800000);
        }
        /**
         * <code>optional uint32 gold = 18;</code>
         */
        public int getGold() {
          return gold_;
        }
        /**
         * <code>optional uint32 gold = 18;</code>
         */
        public Builder setGold(int value) {
          bitField0_ |= 0x00800000;
          gold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 gold = 18;</code>
         */
        public Builder clearGold() {
          bitField0_ = (bitField0_ & ~0x00800000);
          gold_ = 0;
          onChanged();
          return this;
        }

        private int lastHits_ ;
        /**
         * <code>optional uint32 last_hits = 19;</code>
         */
        public boolean hasLastHits() {
          return ((bitField0_ & 0x01000000) == 0x01000000);
        }
        /**
         * <code>optional uint32 last_hits = 19;</code>
         */
        public int getLastHits() {
          return lastHits_;
        }
        /**
         * <code>optional uint32 last_hits = 19;</code>
         */
        public Builder setLastHits(int value) {
          bitField0_ |= 0x01000000;
          lastHits_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 last_hits = 19;</code>
         */
        public Builder clearLastHits() {
          bitField0_ = (bitField0_ & ~0x01000000);
          lastHits_ = 0;
          onChanged();
          return this;
        }

        private int denies_ ;
        /**
         * <code>optional uint32 denies = 20;</code>
         */
        public boolean hasDenies() {
          return ((bitField0_ & 0x02000000) == 0x02000000);
        }
        /**
         * <code>optional uint32 denies = 20;</code>
         */
        public int getDenies() {
          return denies_;
        }
        /**
         * <code>optional uint32 denies = 20;</code>
         */
        public Builder setDenies(int value) {
          bitField0_ |= 0x02000000;
          denies_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 denies = 20;</code>
         */
        public Builder clearDenies() {
          bitField0_ = (bitField0_ & ~0x02000000);
          denies_ = 0;
          onChanged();
          return this;
        }

        private int goldPerMin_ ;
        /**
         * <code>optional uint32 gold_per_min = 21;</code>
         */
        public boolean hasGoldPerMin() {
          return ((bitField0_ & 0x04000000) == 0x04000000);
        }
        /**
         * <code>optional uint32 gold_per_min = 21;</code>
         */
        public int getGoldPerMin() {
          return goldPerMin_;
        }
        /**
         * <code>optional uint32 gold_per_min = 21;</code>
         */
        public Builder setGoldPerMin(int value) {
          bitField0_ |= 0x04000000;
          goldPerMin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 gold_per_min = 21;</code>
         */
        public Builder clearGoldPerMin() {
          bitField0_ = (bitField0_ & ~0x04000000);
          goldPerMin_ = 0;
          onChanged();
          return this;
        }

        private int xPPerMin_ ;
        /**
         * <code>optional uint32 XP_per_min = 22;</code>
         */
        public boolean hasXPPerMin() {
          return ((bitField0_ & 0x08000000) == 0x08000000);
        }
        /**
         * <code>optional uint32 XP_per_min = 22;</code>
         */
        public int getXPPerMin() {
          return xPPerMin_;
        }
        /**
         * <code>optional uint32 XP_per_min = 22;</code>
         */
        public Builder setXPPerMin(int value) {
          bitField0_ |= 0x08000000;
          xPPerMin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 XP_per_min = 22;</code>
         */
        public Builder clearXPPerMin() {
          bitField0_ = (bitField0_ & ~0x08000000);
          xPPerMin_ = 0;
          onChanged();
          return this;
        }

        private int goldSpent_ ;
        /**
         * <code>optional uint32 gold_spent = 23;</code>
         */
        public boolean hasGoldSpent() {
          return ((bitField0_ & 0x10000000) == 0x10000000);
        }
        /**
         * <code>optional uint32 gold_spent = 23;</code>
         */
        public int getGoldSpent() {
          return goldSpent_;
        }
        /**
         * <code>optional uint32 gold_spent = 23;</code>
         */
        public Builder setGoldSpent(int value) {
          bitField0_ |= 0x10000000;
          goldSpent_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 gold_spent = 23;</code>
         */
        public Builder clearGoldSpent() {
          bitField0_ = (bitField0_ & ~0x10000000);
          goldSpent_ = 0;
          onChanged();
          return this;
        }

        private int heroDamage_ ;
        /**
         * <code>optional uint32 hero_damage = 24;</code>
         */
        public boolean hasHeroDamage() {
          return ((bitField0_ & 0x20000000) == 0x20000000);
        }
        /**
         * <code>optional uint32 hero_damage = 24;</code>
         */
        public int getHeroDamage() {
          return heroDamage_;
        }
        /**
         * <code>optional uint32 hero_damage = 24;</code>
         */
        public Builder setHeroDamage(int value) {
          bitField0_ |= 0x20000000;
          heroDamage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_damage = 24;</code>
         */
        public Builder clearHeroDamage() {
          bitField0_ = (bitField0_ & ~0x20000000);
          heroDamage_ = 0;
          onChanged();
          return this;
        }

        private int towerDamage_ ;
        /**
         * <code>optional uint32 tower_damage = 25;</code>
         */
        public boolean hasTowerDamage() {
          return ((bitField0_ & 0x40000000) == 0x40000000);
        }
        /**
         * <code>optional uint32 tower_damage = 25;</code>
         */
        public int getTowerDamage() {
          return towerDamage_;
        }
        /**
         * <code>optional uint32 tower_damage = 25;</code>
         */
        public Builder setTowerDamage(int value) {
          bitField0_ |= 0x40000000;
          towerDamage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tower_damage = 25;</code>
         */
        public Builder clearTowerDamage() {
          bitField0_ = (bitField0_ & ~0x40000000);
          towerDamage_ = 0;
          onChanged();
          return this;
        }

        private int heroHealing_ ;
        /**
         * <code>optional uint32 hero_healing = 26;</code>
         */
        public boolean hasHeroHealing() {
          return ((bitField0_ & 0x80000000) == 0x80000000);
        }
        /**
         * <code>optional uint32 hero_healing = 26;</code>
         */
        public int getHeroHealing() {
          return heroHealing_;
        }
        /**
         * <code>optional uint32 hero_healing = 26;</code>
         */
        public Builder setHeroHealing(int value) {
          bitField0_ |= 0x80000000;
          heroHealing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_healing = 26;</code>
         */
        public Builder clearHeroHealing() {
          bitField0_ = (bitField0_ & ~0x80000000);
          heroHealing_ = 0;
          onChanged();
          return this;
        }

        private int level_ ;
        /**
         * <code>optional uint32 level = 27;</code>
         */
        public boolean hasLevel() {
          return ((bitField1_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 level = 27;</code>
         */
        public int getLevel() {
          return level_;
        }
        /**
         * <code>optional uint32 level = 27;</code>
         */
        public Builder setLevel(int value) {
          bitField1_ |= 0x00000001;
          level_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 level = 27;</code>
         */
        public Builder clearLevel() {
          bitField1_ = (bitField1_ & ~0x00000001);
          level_ = 0;
          onChanged();
          return this;
        }

        private int timeLastSeen_ ;
        /**
         * <code>optional uint32 time_last_seen = 28;</code>
         */
        public boolean hasTimeLastSeen() {
          return ((bitField1_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 time_last_seen = 28;</code>
         */
        public int getTimeLastSeen() {
          return timeLastSeen_;
        }
        /**
         * <code>optional uint32 time_last_seen = 28;</code>
         */
        public Builder setTimeLastSeen(int value) {
          bitField1_ |= 0x00000002;
          timeLastSeen_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 time_last_seen = 28;</code>
         */
        public Builder clearTimeLastSeen() {
          bitField1_ = (bitField1_ & ~0x00000002);
          timeLastSeen_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object playerName_ = "";
        /**
         * <code>optional string player_name = 29;</code>
         */
        public boolean hasPlayerName() {
          return ((bitField1_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string player_name = 29;</code>
         */
        public java.lang.String getPlayerName() {
          java.lang.Object ref = playerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              playerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string player_name = 29;</code>
         */
        public com.google.protobuf.ByteString
            getPlayerNameBytes() {
          java.lang.Object ref = playerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            playerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string player_name = 29;</code>
         */
        public Builder setPlayerName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
          playerName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string player_name = 29;</code>
         */
        public Builder clearPlayerName() {
          bitField1_ = (bitField1_ & ~0x00000004);
          playerName_ = getDefaultInstance().getPlayerName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string player_name = 29;</code>
         */
        public Builder setPlayerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
          playerName_ = value;
          onChanged();
          return this;
        }

        private int supportAbilityValue_ ;
        /**
         * <code>optional uint32 support_ability_value = 30;</code>
         */
        public boolean hasSupportAbilityValue() {
          return ((bitField1_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 support_ability_value = 30;</code>
         */
        public int getSupportAbilityValue() {
          return supportAbilityValue_;
        }
        /**
         * <code>optional uint32 support_ability_value = 30;</code>
         */
        public Builder setSupportAbilityValue(int value) {
          bitField1_ |= 0x00000008;
          supportAbilityValue_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 support_ability_value = 30;</code>
         */
        public Builder clearSupportAbilityValue() {
          bitField1_ = (bitField1_ & ~0x00000008);
          supportAbilityValue_ = 0;
          onChanged();
          return this;
        }

        private boolean feedingDetected_ ;
        /**
         * <code>optional bool feeding_detected = 32;</code>
         */
        public boolean hasFeedingDetected() {
          return ((bitField1_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool feeding_detected = 32;</code>
         */
        public boolean getFeedingDetected() {
          return feedingDetected_;
        }
        /**
         * <code>optional bool feeding_detected = 32;</code>
         */
        public Builder setFeedingDetected(boolean value) {
          bitField1_ |= 0x00000010;
          feedingDetected_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool feeding_detected = 32;</code>
         */
        public Builder clearFeedingDetected() {
          bitField1_ = (bitField1_ & ~0x00000010);
          feedingDetected_ = false;
          onChanged();
          return this;
        }

        private int searchRank_ ;
        /**
         * <code>optional uint32 search_rank = 34;</code>
         */
        public boolean hasSearchRank() {
          return ((bitField1_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 search_rank = 34;</code>
         */
        public int getSearchRank() {
          return searchRank_;
        }
        /**
         * <code>optional uint32 search_rank = 34;</code>
         */
        public Builder setSearchRank(int value) {
          bitField1_ |= 0x00000020;
          searchRank_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 search_rank = 34;</code>
         */
        public Builder clearSearchRank() {
          bitField1_ = (bitField1_ & ~0x00000020);
          searchRank_ = 0;
          onChanged();
          return this;
        }

        private int searchRankUncertainty_ ;
        /**
         * <code>optional uint32 search_rank_uncertainty = 35;</code>
         */
        public boolean hasSearchRankUncertainty() {
          return ((bitField1_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 search_rank_uncertainty = 35;</code>
         */
        public int getSearchRankUncertainty() {
          return searchRankUncertainty_;
        }
        /**
         * <code>optional uint32 search_rank_uncertainty = 35;</code>
         */
        public Builder setSearchRankUncertainty(int value) {
          bitField1_ |= 0x00000040;
          searchRankUncertainty_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 search_rank_uncertainty = 35;</code>
         */
        public Builder clearSearchRankUncertainty() {
          bitField1_ = (bitField1_ & ~0x00000040);
          searchRankUncertainty_ = 0;
          onChanged();
          return this;
        }

        private int rankUncertaintyChange_ ;
        /**
         * <code>optional int32 rank_uncertainty_change = 36;</code>
         */
        public boolean hasRankUncertaintyChange() {
          return ((bitField1_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional int32 rank_uncertainty_change = 36;</code>
         */
        public int getRankUncertaintyChange() {
          return rankUncertaintyChange_;
        }
        /**
         * <code>optional int32 rank_uncertainty_change = 36;</code>
         */
        public Builder setRankUncertaintyChange(int value) {
          bitField1_ |= 0x00000080;
          rankUncertaintyChange_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 rank_uncertainty_change = 36;</code>
         */
        public Builder clearRankUncertaintyChange() {
          bitField1_ = (bitField1_ & ~0x00000080);
          rankUncertaintyChange_ = 0;
          onChanged();
          return this;
        }

        private int heroPlayCount_ ;
        /**
         * <code>optional uint32 hero_play_count = 37;</code>
         */
        public boolean hasHeroPlayCount() {
          return ((bitField1_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 hero_play_count = 37;</code>
         */
        public int getHeroPlayCount() {
          return heroPlayCount_;
        }
        /**
         * <code>optional uint32 hero_play_count = 37;</code>
         */
        public Builder setHeroPlayCount(int value) {
          bitField1_ |= 0x00000100;
          heroPlayCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_play_count = 37;</code>
         */
        public Builder clearHeroPlayCount() {
          bitField1_ = (bitField1_ & ~0x00000100);
          heroPlayCount_ = 0;
          onChanged();
          return this;
        }

        private long partyId_ ;
        /**
         * <code>optional fixed64 party_id = 38;</code>
         */
        public boolean hasPartyId() {
          return ((bitField1_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional fixed64 party_id = 38;</code>
         */
        public long getPartyId() {
          return partyId_;
        }
        /**
         * <code>optional fixed64 party_id = 38;</code>
         */
        public Builder setPartyId(long value) {
          bitField1_ |= 0x00000200;
          partyId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 party_id = 38;</code>
         */
        public Builder clearPartyId() {
          bitField1_ = (bitField1_ & ~0x00000200);
          partyId_ = 0L;
          onChanged();
          return this;
        }

        private int scaledHeroDamage_ ;
        /**
         * <code>optional uint32 scaled_hero_damage = 54;</code>
         */
        public boolean hasScaledHeroDamage() {
          return ((bitField1_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional uint32 scaled_hero_damage = 54;</code>
         */
        public int getScaledHeroDamage() {
          return scaledHeroDamage_;
        }
        /**
         * <code>optional uint32 scaled_hero_damage = 54;</code>
         */
        public Builder setScaledHeroDamage(int value) {
          bitField1_ |= 0x00000400;
          scaledHeroDamage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 scaled_hero_damage = 54;</code>
         */
        public Builder clearScaledHeroDamage() {
          bitField1_ = (bitField1_ & ~0x00000400);
          scaledHeroDamage_ = 0;
          onChanged();
          return this;
        }

        private int scaledTowerDamage_ ;
        /**
         * <code>optional uint32 scaled_tower_damage = 55;</code>
         */
        public boolean hasScaledTowerDamage() {
          return ((bitField1_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional uint32 scaled_tower_damage = 55;</code>
         */
        public int getScaledTowerDamage() {
          return scaledTowerDamage_;
        }
        /**
         * <code>optional uint32 scaled_tower_damage = 55;</code>
         */
        public Builder setScaledTowerDamage(int value) {
          bitField1_ |= 0x00000800;
          scaledTowerDamage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 scaled_tower_damage = 55;</code>
         */
        public Builder clearScaledTowerDamage() {
          bitField1_ = (bitField1_ & ~0x00000800);
          scaledTowerDamage_ = 0;
          onChanged();
          return this;
        }

        private int scaledHeroHealing_ ;
        /**
         * <code>optional uint32 scaled_hero_healing = 56;</code>
         */
        public boolean hasScaledHeroHealing() {
          return ((bitField1_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional uint32 scaled_hero_healing = 56;</code>
         */
        public int getScaledHeroHealing() {
          return scaledHeroHealing_;
        }
        /**
         * <code>optional uint32 scaled_hero_healing = 56;</code>
         */
        public Builder setScaledHeroHealing(int value) {
          bitField1_ |= 0x00001000;
          scaledHeroHealing_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 scaled_hero_healing = 56;</code>
         */
        public Builder clearScaledHeroHealing() {
          bitField1_ = (bitField1_ & ~0x00001000);
          scaledHeroHealing_ = 0;
          onChanged();
          return this;
        }

        private float scaledKills_ ;
        /**
         * <code>optional float scaled_kills = 39;</code>
         */
        public boolean hasScaledKills() {
          return ((bitField1_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional float scaled_kills = 39;</code>
         */
        public float getScaledKills() {
          return scaledKills_;
        }
        /**
         * <code>optional float scaled_kills = 39;</code>
         */
        public Builder setScaledKills(float value) {
          bitField1_ |= 0x00002000;
          scaledKills_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float scaled_kills = 39;</code>
         */
        public Builder clearScaledKills() {
          bitField1_ = (bitField1_ & ~0x00002000);
          scaledKills_ = 0F;
          onChanged();
          return this;
        }

        private float scaledDeaths_ ;
        /**
         * <code>optional float scaled_deaths = 40;</code>
         */
        public boolean hasScaledDeaths() {
          return ((bitField1_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional float scaled_deaths = 40;</code>
         */
        public float getScaledDeaths() {
          return scaledDeaths_;
        }
        /**
         * <code>optional float scaled_deaths = 40;</code>
         */
        public Builder setScaledDeaths(float value) {
          bitField1_ |= 0x00004000;
          scaledDeaths_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float scaled_deaths = 40;</code>
         */
        public Builder clearScaledDeaths() {
          bitField1_ = (bitField1_ & ~0x00004000);
          scaledDeaths_ = 0F;
          onChanged();
          return this;
        }

        private float scaledAssists_ ;
        /**
         * <code>optional float scaled_assists = 41;</code>
         */
        public boolean hasScaledAssists() {
          return ((bitField1_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional float scaled_assists = 41;</code>
         */
        public float getScaledAssists() {
          return scaledAssists_;
        }
        /**
         * <code>optional float scaled_assists = 41;</code>
         */
        public Builder setScaledAssists(float value) {
          bitField1_ |= 0x00008000;
          scaledAssists_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float scaled_assists = 41;</code>
         */
        public Builder clearScaledAssists() {
          bitField1_ = (bitField1_ & ~0x00008000);
          scaledAssists_ = 0F;
          onChanged();
          return this;
        }

        private int claimedFarmGold_ ;
        /**
         * <code>optional uint32 claimed_farm_gold = 42;</code>
         */
        public boolean hasClaimedFarmGold() {
          return ((bitField1_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>optional uint32 claimed_farm_gold = 42;</code>
         */
        public int getClaimedFarmGold() {
          return claimedFarmGold_;
        }
        /**
         * <code>optional uint32 claimed_farm_gold = 42;</code>
         */
        public Builder setClaimedFarmGold(int value) {
          bitField1_ |= 0x00010000;
          claimedFarmGold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 claimed_farm_gold = 42;</code>
         */
        public Builder clearClaimedFarmGold() {
          bitField1_ = (bitField1_ & ~0x00010000);
          claimedFarmGold_ = 0;
          onChanged();
          return this;
        }

        private int supportGold_ ;
        /**
         * <code>optional uint32 support_gold = 43;</code>
         */
        public boolean hasSupportGold() {
          return ((bitField1_ & 0x00020000) == 0x00020000);
        }
        /**
         * <code>optional uint32 support_gold = 43;</code>
         */
        public int getSupportGold() {
          return supportGold_;
        }
        /**
         * <code>optional uint32 support_gold = 43;</code>
         */
        public Builder setSupportGold(int value) {
          bitField1_ |= 0x00020000;
          supportGold_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 support_gold = 43;</code>
         */
        public Builder clearSupportGold() {
          bitField1_ = (bitField1_ & ~0x00020000);
          supportGold_ = 0;
          onChanged();
          return this;
        }

        private int claimedDenies_ ;
        /**
         * <code>optional uint32 claimed_denies = 44;</code>
         */
        public boolean hasClaimedDenies() {
          return ((bitField1_ & 0x00040000) == 0x00040000);
        }
        /**
         * <code>optional uint32 claimed_denies = 44;</code>
         */
        public int getClaimedDenies() {
          return claimedDenies_;
        }
        /**
         * <code>optional uint32 claimed_denies = 44;</code>
         */
        public Builder setClaimedDenies(int value) {
          bitField1_ |= 0x00040000;
          claimedDenies_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 claimed_denies = 44;</code>
         */
        public Builder clearClaimedDenies() {
          bitField1_ = (bitField1_ & ~0x00040000);
          claimedDenies_ = 0;
          onChanged();
          return this;
        }

        private int claimedMisses_ ;
        /**
         * <code>optional uint32 claimed_misses = 45;</code>
         */
        public boolean hasClaimedMisses() {
          return ((bitField1_ & 0x00080000) == 0x00080000);
        }
        /**
         * <code>optional uint32 claimed_misses = 45;</code>
         */
        public int getClaimedMisses() {
          return claimedMisses_;
        }
        /**
         * <code>optional uint32 claimed_misses = 45;</code>
         */
        public Builder setClaimedMisses(int value) {
          bitField1_ |= 0x00080000;
          claimedMisses_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 claimed_misses = 45;</code>
         */
        public Builder clearClaimedMisses() {
          bitField1_ = (bitField1_ & ~0x00080000);
          claimedMisses_ = 0;
          onChanged();
          return this;
        }

        private int misses_ ;
        /**
         * <code>optional uint32 misses = 46;</code>
         */
        public boolean hasMisses() {
          return ((bitField1_ & 0x00100000) == 0x00100000);
        }
        /**
         * <code>optional uint32 misses = 46;</code>
         */
        public int getMisses() {
          return misses_;
        }
        /**
         * <code>optional uint32 misses = 46;</code>
         */
        public Builder setMisses(int value) {
          bitField1_ |= 0x00100000;
          misses_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 misses = 46;</code>
         */
        public Builder clearMisses() {
          bitField1_ = (bitField1_ & ~0x00100000);
          misses_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade> abilityUpgrades_ =
          java.util.Collections.emptyList();
        private void ensureAbilityUpgradesIsMutable() {
          if (!((bitField1_ & 0x00200000) == 0x00200000)) {
            abilityUpgrades_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade>(abilityUpgrades_);
            bitField1_ |= 0x00200000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder> abilityUpgradesBuilder_;

        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade> getAbilityUpgradesList() {
          if (abilityUpgradesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(abilityUpgrades_);
          } else {
            return abilityUpgradesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public int getAbilityUpgradesCount() {
          if (abilityUpgradesBuilder_ == null) {
            return abilityUpgrades_.size();
          } else {
            return abilityUpgradesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade getAbilityUpgrades(int index) {
          if (abilityUpgradesBuilder_ == null) {
            return abilityUpgrades_.get(index);
          } else {
            return abilityUpgradesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder setAbilityUpgrades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade value) {
          if (abilityUpgradesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.set(index, value);
            onChanged();
          } else {
            abilityUpgradesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder setAbilityUpgrades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder builderForValue) {
          if (abilityUpgradesBuilder_ == null) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.set(index, builderForValue.build());
            onChanged();
          } else {
            abilityUpgradesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder addAbilityUpgrades(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade value) {
          if (abilityUpgradesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.add(value);
            onChanged();
          } else {
            abilityUpgradesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder addAbilityUpgrades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade value) {
          if (abilityUpgradesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.add(index, value);
            onChanged();
          } else {
            abilityUpgradesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder addAbilityUpgrades(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder builderForValue) {
          if (abilityUpgradesBuilder_ == null) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.add(builderForValue.build());
            onChanged();
          } else {
            abilityUpgradesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder addAbilityUpgrades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder builderForValue) {
          if (abilityUpgradesBuilder_ == null) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.add(index, builderForValue.build());
            onChanged();
          } else {
            abilityUpgradesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder addAllAbilityUpgrades(
            java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade> values) {
          if (abilityUpgradesBuilder_ == null) {
            ensureAbilityUpgradesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, abilityUpgrades_);
            onChanged();
          } else {
            abilityUpgradesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder clearAbilityUpgrades() {
          if (abilityUpgradesBuilder_ == null) {
            abilityUpgrades_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00200000);
            onChanged();
          } else {
            abilityUpgradesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public Builder removeAbilityUpgrades(int index) {
          if (abilityUpgradesBuilder_ == null) {
            ensureAbilityUpgradesIsMutable();
            abilityUpgrades_.remove(index);
            onChanged();
          } else {
            abilityUpgradesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder getAbilityUpgradesBuilder(
            int index) {
          return getAbilityUpgradesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder getAbilityUpgradesOrBuilder(
            int index) {
          if (abilityUpgradesBuilder_ == null) {
            return abilityUpgrades_.get(index);  } else {
            return abilityUpgradesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder> 
             getAbilityUpgradesOrBuilderList() {
          if (abilityUpgradesBuilder_ != null) {
            return abilityUpgradesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(abilityUpgrades_);
          }
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder addAbilityUpgradesBuilder() {
          return getAbilityUpgradesFieldBuilder().addBuilder(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.getDefaultInstance());
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder addAbilityUpgradesBuilder(
            int index) {
          return getAbilityUpgradesFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.getDefaultInstance());
        }
        /**
         * <code>repeated .CMatchPlayerAbilityUpgrade ability_upgrades = 47;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder> 
             getAbilityUpgradesBuilderList() {
          return getAbilityUpgradesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder> 
            getAbilityUpgradesFieldBuilder() {
          if (abilityUpgradesBuilder_ == null) {
            abilityUpgradesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgrade.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerAbilityUpgradeOrBuilder>(
                    abilityUpgrades_,
                    ((bitField1_ & 0x00200000) == 0x00200000),
                    getParentForChildren(),
                    isClean());
            abilityUpgrades_ = null;
          }
          return abilityUpgradesBuilder_;
        }

        private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory> additionalUnitsInventory_ =
          java.util.Collections.emptyList();
        private void ensureAdditionalUnitsInventoryIsMutable() {
          if (!((bitField1_ & 0x00400000) == 0x00400000)) {
            additionalUnitsInventory_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory>(additionalUnitsInventory_);
            bitField1_ |= 0x00400000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder> additionalUnitsInventoryBuilder_;

        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory> getAdditionalUnitsInventoryList() {
          if (additionalUnitsInventoryBuilder_ == null) {
            return java.util.Collections.unmodifiableList(additionalUnitsInventory_);
          } else {
            return additionalUnitsInventoryBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public int getAdditionalUnitsInventoryCount() {
          if (additionalUnitsInventoryBuilder_ == null) {
            return additionalUnitsInventory_.size();
          } else {
            return additionalUnitsInventoryBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory getAdditionalUnitsInventory(int index) {
          if (additionalUnitsInventoryBuilder_ == null) {
            return additionalUnitsInventory_.get(index);
          } else {
            return additionalUnitsInventoryBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder setAdditionalUnitsInventory(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory value) {
          if (additionalUnitsInventoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.set(index, value);
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder setAdditionalUnitsInventory(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder builderForValue) {
          if (additionalUnitsInventoryBuilder_ == null) {
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.set(index, builderForValue.build());
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder addAdditionalUnitsInventory(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory value) {
          if (additionalUnitsInventoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.add(value);
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder addAdditionalUnitsInventory(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory value) {
          if (additionalUnitsInventoryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.add(index, value);
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder addAdditionalUnitsInventory(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder builderForValue) {
          if (additionalUnitsInventoryBuilder_ == null) {
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.add(builderForValue.build());
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder addAdditionalUnitsInventory(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder builderForValue) {
          if (additionalUnitsInventoryBuilder_ == null) {
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.add(index, builderForValue.build());
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder addAllAdditionalUnitsInventory(
            java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory> values) {
          if (additionalUnitsInventoryBuilder_ == null) {
            ensureAdditionalUnitsInventoryIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, additionalUnitsInventory_);
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder clearAdditionalUnitsInventory() {
          if (additionalUnitsInventoryBuilder_ == null) {
            additionalUnitsInventory_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00400000);
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public Builder removeAdditionalUnitsInventory(int index) {
          if (additionalUnitsInventoryBuilder_ == null) {
            ensureAdditionalUnitsInventoryIsMutable();
            additionalUnitsInventory_.remove(index);
            onChanged();
          } else {
            additionalUnitsInventoryBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder getAdditionalUnitsInventoryBuilder(
            int index) {
          return getAdditionalUnitsInventoryFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder getAdditionalUnitsInventoryOrBuilder(
            int index) {
          if (additionalUnitsInventoryBuilder_ == null) {
            return additionalUnitsInventory_.get(index);  } else {
            return additionalUnitsInventoryBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder> 
             getAdditionalUnitsInventoryOrBuilderList() {
          if (additionalUnitsInventoryBuilder_ != null) {
            return additionalUnitsInventoryBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(additionalUnitsInventory_);
          }
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder addAdditionalUnitsInventoryBuilder() {
          return getAdditionalUnitsInventoryFieldBuilder().addBuilder(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.getDefaultInstance());
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder addAdditionalUnitsInventoryBuilder(
            int index) {
          return getAdditionalUnitsInventoryFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.getDefaultInstance());
        }
        /**
         * <code>repeated .CMatchAdditionalUnitInventory additional_units_inventory = 48;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder> 
             getAdditionalUnitsInventoryBuilderList() {
          return getAdditionalUnitsInventoryFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder> 
            getAdditionalUnitsInventoryFieldBuilder() {
          if (additionalUnitsInventoryBuilder_ == null) {
            additionalUnitsInventoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventory.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchAdditionalUnitInventoryOrBuilder>(
                    additionalUnitsInventory_,
                    ((bitField1_ & 0x00400000) == 0x00400000),
                    getParentForChildren(),
                    isClean());
            additionalUnitsInventory_ = null;
          }
          return additionalUnitsInventoryBuilder_;
        }

        private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff> permanentBuffs_ =
          java.util.Collections.emptyList();
        private void ensurePermanentBuffsIsMutable() {
          if (!((bitField1_ & 0x00800000) == 0x00800000)) {
            permanentBuffs_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff>(permanentBuffs_);
            bitField1_ |= 0x00800000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder> permanentBuffsBuilder_;

        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff> getPermanentBuffsList() {
          if (permanentBuffsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(permanentBuffs_);
          } else {
            return permanentBuffsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public int getPermanentBuffsCount() {
          if (permanentBuffsBuilder_ == null) {
            return permanentBuffs_.size();
          } else {
            return permanentBuffsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff getPermanentBuffs(int index) {
          if (permanentBuffsBuilder_ == null) {
            return permanentBuffs_.get(index);
          } else {
            return permanentBuffsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder setPermanentBuffs(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff value) {
          if (permanentBuffsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.set(index, value);
            onChanged();
          } else {
            permanentBuffsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder setPermanentBuffs(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder builderForValue) {
          if (permanentBuffsBuilder_ == null) {
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.set(index, builderForValue.build());
            onChanged();
          } else {
            permanentBuffsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder addPermanentBuffs(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff value) {
          if (permanentBuffsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.add(value);
            onChanged();
          } else {
            permanentBuffsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder addPermanentBuffs(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff value) {
          if (permanentBuffsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.add(index, value);
            onChanged();
          } else {
            permanentBuffsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder addPermanentBuffs(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder builderForValue) {
          if (permanentBuffsBuilder_ == null) {
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.add(builderForValue.build());
            onChanged();
          } else {
            permanentBuffsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder addPermanentBuffs(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder builderForValue) {
          if (permanentBuffsBuilder_ == null) {
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.add(index, builderForValue.build());
            onChanged();
          } else {
            permanentBuffsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder addAllPermanentBuffs(
            java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff> values) {
          if (permanentBuffsBuilder_ == null) {
            ensurePermanentBuffsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, permanentBuffs_);
            onChanged();
          } else {
            permanentBuffsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder clearPermanentBuffs() {
          if (permanentBuffsBuilder_ == null) {
            permanentBuffs_ = java.util.Collections.emptyList();
            bitField1_ = (bitField1_ & ~0x00800000);
            onChanged();
          } else {
            permanentBuffsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public Builder removePermanentBuffs(int index) {
          if (permanentBuffsBuilder_ == null) {
            ensurePermanentBuffsIsMutable();
            permanentBuffs_.remove(index);
            onChanged();
          } else {
            permanentBuffsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder getPermanentBuffsBuilder(
            int index) {
          return getPermanentBuffsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder getPermanentBuffsOrBuilder(
            int index) {
          if (permanentBuffsBuilder_ == null) {
            return permanentBuffs_.get(index);  } else {
            return permanentBuffsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder> 
             getPermanentBuffsOrBuilderList() {
          if (permanentBuffsBuilder_ != null) {
            return permanentBuffsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(permanentBuffs_);
          }
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder addPermanentBuffsBuilder() {
          return getPermanentBuffsFieldBuilder().addBuilder(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.getDefaultInstance());
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder addPermanentBuffsBuilder(
            int index) {
          return getPermanentBuffsFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.getDefaultInstance());
        }
        /**
         * <code>repeated .CMatchPlayerPermanentBuff permanent_buffs = 57;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder> 
             getPermanentBuffsBuilderList() {
          return getPermanentBuffsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder> 
            getPermanentBuffsFieldBuilder() {
          if (permanentBuffsBuilder_ == null) {
            permanentBuffsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuff.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchPlayerPermanentBuffOrBuilder>(
                    permanentBuffs_,
                    ((bitField1_ & 0x00800000) == 0x00800000),
                    getParentForChildren(),
                    isClean());
            permanentBuffs_ = null;
          }
          return permanentBuffsBuilder_;
        }

        private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder> customGameDataBuilder_;
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public boolean hasCustomGameData() {
          return ((bitField1_ & 0x01000000) == 0x01000000);
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData getCustomGameData() {
          if (customGameDataBuilder_ == null) {
            return customGameData_;
          } else {
            return customGameDataBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public Builder setCustomGameData(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData value) {
          if (customGameDataBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            customGameData_ = value;
            onChanged();
          } else {
            customGameDataBuilder_.setMessage(value);
          }
          bitField1_ |= 0x01000000;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public Builder setCustomGameData(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder builderForValue) {
          if (customGameDataBuilder_ == null) {
            customGameData_ = builderForValue.build();
            onChanged();
          } else {
            customGameDataBuilder_.setMessage(builderForValue.build());
          }
          bitField1_ |= 0x01000000;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public Builder mergeCustomGameData(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData value) {
          if (customGameDataBuilder_ == null) {
            if (((bitField1_ & 0x01000000) == 0x01000000) &&
                customGameData_ != skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance()) {
              customGameData_ =
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.newBuilder(customGameData_).mergeFrom(value).buildPartial();
            } else {
              customGameData_ = value;
            }
            onChanged();
          } else {
            customGameDataBuilder_.mergeFrom(value);
          }
          bitField1_ |= 0x01000000;
          return this;
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public Builder clearCustomGameData() {
          if (customGameDataBuilder_ == null) {
            customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.getDefaultInstance();
            onChanged();
          } else {
            customGameDataBuilder_.clear();
          }
          bitField1_ = (bitField1_ & ~0x01000000);
          return this;
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder getCustomGameDataBuilder() {
          bitField1_ |= 0x01000000;
          onChanged();
          return getCustomGameDataFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder getCustomGameDataOrBuilder() {
          if (customGameDataBuilder_ != null) {
            return customGameDataBuilder_.getMessageOrBuilder();
          } else {
            return customGameData_;
          }
        }
        /**
         * <code>optional .CMsgDOTAMatch.Player.CustomGameData custom_game_data = 50;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder> 
            getCustomGameDataFieldBuilder() {
          if (customGameDataBuilder_ == null) {
            customGameDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameData.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.CustomGameDataOrBuilder>(
                    getCustomGameData(),
                    getParentForChildren(),
                    isClean());
            customGameData_ = null;
          }
          return customGameDataBuilder_;
        }

        private boolean activePrimeSubscription_ ;
        /**
         * <code>optional bool active_prime_subscription = 51;</code>
         */
        public boolean hasActivePrimeSubscription() {
          return ((bitField1_ & 0x02000000) == 0x02000000);
        }
        /**
         * <code>optional bool active_prime_subscription = 51;</code>
         */
        public boolean getActivePrimeSubscription() {
          return activePrimeSubscription_;
        }
        /**
         * <code>optional bool active_prime_subscription = 51;</code>
         */
        public Builder setActivePrimeSubscription(boolean value) {
          bitField1_ |= 0x02000000;
          activePrimeSubscription_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool active_prime_subscription = 51;</code>
         */
        public Builder clearActivePrimeSubscription() {
          bitField1_ = (bitField1_ & ~0x02000000);
          activePrimeSubscription_ = false;
          onChanged();
          return this;
        }

        private int netWorth_ ;
        /**
         * <code>optional uint32 net_worth = 52;</code>
         */
        public boolean hasNetWorth() {
          return ((bitField1_ & 0x04000000) == 0x04000000);
        }
        /**
         * <code>optional uint32 net_worth = 52;</code>
         */
        public int getNetWorth() {
          return netWorth_;
        }
        /**
         * <code>optional uint32 net_worth = 52;</code>
         */
        public Builder setNetWorth(int value) {
          bitField1_ |= 0x04000000;
          netWorth_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 net_worth = 52;</code>
         */
        public Builder clearNetWorth() {
          bitField1_ = (bitField1_ & ~0x04000000);
          netWorth_ = 0;
          onChanged();
          return this;
        }

        private int botDifficulty_ ;
        /**
         * <code>optional uint32 bot_difficulty = 58;</code>
         */
        public boolean hasBotDifficulty() {
          return ((bitField1_ & 0x08000000) == 0x08000000);
        }
        /**
         * <code>optional uint32 bot_difficulty = 58;</code>
         */
        public int getBotDifficulty() {
          return botDifficulty_;
        }
        /**
         * <code>optional uint32 bot_difficulty = 58;</code>
         */
        public Builder setBotDifficulty(int value) {
          bitField1_ |= 0x08000000;
          botDifficulty_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 bot_difficulty = 58;</code>
         */
        public Builder clearBotDifficulty() {
          bitField1_ = (bitField1_ & ~0x08000000);
          botDifficulty_ = 0;
          onChanged();
          return this;
        }

        private int heroPickOrder_ ;
        /**
         * <code>optional uint32 hero_pick_order = 63;</code>
         */
        public boolean hasHeroPickOrder() {
          return ((bitField1_ & 0x10000000) == 0x10000000);
        }
        /**
         * <code>optional uint32 hero_pick_order = 63;</code>
         */
        public int getHeroPickOrder() {
          return heroPickOrder_;
        }
        /**
         * <code>optional uint32 hero_pick_order = 63;</code>
         */
        public Builder setHeroPickOrder(int value) {
          bitField1_ |= 0x10000000;
          heroPickOrder_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 hero_pick_order = 63;</code>
         */
        public Builder clearHeroPickOrder() {
          bitField1_ = (bitField1_ & ~0x10000000);
          heroPickOrder_ = 0;
          onChanged();
          return this;
        }

        private boolean heroWasRandomed_ ;
        /**
         * <code>optional bool hero_was_randomed = 64;</code>
         */
        public boolean hasHeroWasRandomed() {
          return ((bitField1_ & 0x20000000) == 0x20000000);
        }
        /**
         * <code>optional bool hero_was_randomed = 64;</code>
         */
        public boolean getHeroWasRandomed() {
          return heroWasRandomed_;
        }
        /**
         * <code>optional bool hero_was_randomed = 64;</code>
         */
        public Builder setHeroWasRandomed(boolean value) {
          bitField1_ |= 0x20000000;
          heroWasRandomed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool hero_was_randomed = 64;</code>
         */
        public Builder clearHeroWasRandomed() {
          bitField1_ = (bitField1_ & ~0x20000000);
          heroWasRandomed_ = false;
          onChanged();
          return this;
        }

        private boolean heroWasBonus_ ;
        /**
         * <code>optional bool hero_was_bonus = 65;</code>
         */
        public boolean hasHeroWasBonus() {
          return ((bitField1_ & 0x40000000) == 0x40000000);
        }
        /**
         * <code>optional bool hero_was_bonus = 65;</code>
         */
        public boolean getHeroWasBonus() {
          return heroWasBonus_;
        }
        /**
         * <code>optional bool hero_was_bonus = 65;</code>
         */
        public Builder setHeroWasBonus(boolean value) {
          bitField1_ |= 0x40000000;
          heroWasBonus_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool hero_was_bonus = 65;</code>
         */
        public Builder clearHeroWasBonus() {
          bitField1_ = (bitField1_ & ~0x40000000);
          heroWasBonus_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAMatch.Player)
      }

      static {
        defaultInstance = new Player(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.Player)
    }

    public interface BroadcasterInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAMatch.BroadcasterInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      int getAccountId();

      /**
       * <code>optional string name = 2;</code>
       */
      boolean hasName();
      /**
       * <code>optional string name = 2;</code>
       */
      java.lang.String getName();
      /**
       * <code>optional string name = 2;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTAMatch.BroadcasterInfo}
     */
    public static final class BroadcasterInfo extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAMatch.BroadcasterInfo)
        BroadcasterInfoOrBuilder {
      // Use BroadcasterInfo.newBuilder() to construct.
      private BroadcasterInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BroadcasterInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BroadcasterInfo defaultInstance;
      public static BroadcasterInfo getDefaultInstance() {
        return defaultInstance;
      }

      public BroadcasterInfo getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BroadcasterInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                accountId_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                name_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder.class);
      }

      public static com.google.protobuf.Parser<BroadcasterInfo> PARSER =
          new com.google.protobuf.AbstractParser<BroadcasterInfo>() {
        public BroadcasterInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BroadcasterInfo(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BroadcasterInfo> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int ACCOUNT_ID_FIELD_NUMBER = 1;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 account_id = 1;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      public static final int NAME_FIELD_NUMBER = 2;
      private java.lang.Object name_;
      /**
       * <code>optional string name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        accountId_ = 0;
        name_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getNameBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, accountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getNameBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAMatch.BroadcasterInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAMatch.BroadcasterInfo)
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterInfo_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder.class);
        }

        // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterInfo_descriptor;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo getDefaultInstanceForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.getDefaultInstance();
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo build() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo buildPartial() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.accountId_ = accountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.name_ = name_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo) {
            return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo other) {
          if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.getDefaultInstance()) return this;
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000002;
            name_ = other.name_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000001;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 1;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          accountId_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object name_ = "";
        /**
         * <code>optional string name = 2;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string name = 2;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          name_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAMatch.BroadcasterInfo)
      }

      static {
        defaultInstance = new BroadcasterInfo(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.BroadcasterInfo)
    }

    public interface BroadcasterChannelOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAMatch.BroadcasterChannel)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string country_code = 1;</code>
       */
      boolean hasCountryCode();
      /**
       * <code>optional string country_code = 1;</code>
       */
      java.lang.String getCountryCode();
      /**
       * <code>optional string country_code = 1;</code>
       */
      com.google.protobuf.ByteString
          getCountryCodeBytes();

      /**
       * <code>optional string description = 2;</code>
       */
      boolean hasDescription();
      /**
       * <code>optional string description = 2;</code>
       */
      java.lang.String getDescription();
      /**
       * <code>optional string description = 2;</code>
       */
      com.google.protobuf.ByteString
          getDescriptionBytes();

      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo> 
          getBroadcasterInfosList();
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo getBroadcasterInfos(int index);
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      int getBroadcasterInfosCount();
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder> 
          getBroadcasterInfosOrBuilderList();
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder getBroadcasterInfosOrBuilder(
          int index);

      /**
       * <code>optional string language_code = 4;</code>
       */
      boolean hasLanguageCode();
      /**
       * <code>optional string language_code = 4;</code>
       */
      java.lang.String getLanguageCode();
      /**
       * <code>optional string language_code = 4;</code>
       */
      com.google.protobuf.ByteString
          getLanguageCodeBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTAMatch.BroadcasterChannel}
     */
    public static final class BroadcasterChannel extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAMatch.BroadcasterChannel)
        BroadcasterChannelOrBuilder {
      // Use BroadcasterChannel.newBuilder() to construct.
      private BroadcasterChannel(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private BroadcasterChannel(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final BroadcasterChannel defaultInstance;
      public static BroadcasterChannel getDefaultInstance() {
        return defaultInstance;
      }

      public BroadcasterChannel getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private BroadcasterChannel(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000001;
                countryCode_ = bs;
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                description_ = bs;
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  broadcasterInfos_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo>();
                  mutable_bitField0_ |= 0x00000004;
                }
                broadcasterInfos_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                languageCode_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            broadcasterInfos_ = java.util.Collections.unmodifiableList(broadcasterInfos_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterChannel_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterChannel_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder.class);
      }

      public static com.google.protobuf.Parser<BroadcasterChannel> PARSER =
          new com.google.protobuf.AbstractParser<BroadcasterChannel>() {
        public BroadcasterChannel parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new BroadcasterChannel(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<BroadcasterChannel> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int COUNTRY_CODE_FIELD_NUMBER = 1;
      private java.lang.Object countryCode_;
      /**
       * <code>optional string country_code = 1;</code>
       */
      public boolean hasCountryCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string country_code = 1;</code>
       */
      public java.lang.String getCountryCode() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            countryCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string country_code = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCountryCodeBytes() {
        java.lang.Object ref = countryCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          countryCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DESCRIPTION_FIELD_NUMBER = 2;
      private java.lang.Object description_;
      /**
       * <code>optional string description = 2;</code>
       */
      public boolean hasDescription() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            description_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string description = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BROADCASTER_INFOS_FIELD_NUMBER = 3;
      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo> broadcasterInfos_;
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo> getBroadcasterInfosList() {
        return broadcasterInfos_;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder> 
          getBroadcasterInfosOrBuilderList() {
        return broadcasterInfos_;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      public int getBroadcasterInfosCount() {
        return broadcasterInfos_.size();
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo getBroadcasterInfos(int index) {
        return broadcasterInfos_.get(index);
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder getBroadcasterInfosOrBuilder(
          int index) {
        return broadcasterInfos_.get(index);
      }

      public static final int LANGUAGE_CODE_FIELD_NUMBER = 4;
      private java.lang.Object languageCode_;
      /**
       * <code>optional string language_code = 4;</code>
       */
      public boolean hasLanguageCode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public java.lang.String getLanguageCode() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            languageCode_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string language_code = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLanguageCodeBytes() {
        java.lang.Object ref = languageCode_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          languageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        countryCode_ = "";
        description_ = "";
        broadcasterInfos_ = java.util.Collections.emptyList();
        languageCode_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getCountryCodeBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDescriptionBytes());
        }
        for (int i = 0; i < broadcasterInfos_.size(); i++) {
          output.writeMessage(3, broadcasterInfos_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(4, getLanguageCodeBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getCountryCodeBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDescriptionBytes());
        }
        for (int i = 0; i < broadcasterInfos_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, broadcasterInfos_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getLanguageCodeBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAMatch.BroadcasterChannel}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAMatch.BroadcasterChannel)
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterChannel_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterChannel_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder.class);
        }

        // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getBroadcasterInfosFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          countryCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          description_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          if (broadcasterInfosBuilder_ == null) {
            broadcasterInfos_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            broadcasterInfosBuilder_.clear();
          }
          languageCode_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_BroadcasterChannel_descriptor;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel getDefaultInstanceForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.getDefaultInstance();
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel build() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel buildPartial() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.countryCode_ = countryCode_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.description_ = description_;
          if (broadcasterInfosBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              broadcasterInfos_ = java.util.Collections.unmodifiableList(broadcasterInfos_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.broadcasterInfos_ = broadcasterInfos_;
          } else {
            result.broadcasterInfos_ = broadcasterInfosBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000004;
          }
          result.languageCode_ = languageCode_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel) {
            return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel other) {
          if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.getDefaultInstance()) return this;
          if (other.hasCountryCode()) {
            bitField0_ |= 0x00000001;
            countryCode_ = other.countryCode_;
            onChanged();
          }
          if (other.hasDescription()) {
            bitField0_ |= 0x00000002;
            description_ = other.description_;
            onChanged();
          }
          if (broadcasterInfosBuilder_ == null) {
            if (!other.broadcasterInfos_.isEmpty()) {
              if (broadcasterInfos_.isEmpty()) {
                broadcasterInfos_ = other.broadcasterInfos_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureBroadcasterInfosIsMutable();
                broadcasterInfos_.addAll(other.broadcasterInfos_);
              }
              onChanged();
            }
          } else {
            if (!other.broadcasterInfos_.isEmpty()) {
              if (broadcasterInfosBuilder_.isEmpty()) {
                broadcasterInfosBuilder_.dispose();
                broadcasterInfosBuilder_ = null;
                broadcasterInfos_ = other.broadcasterInfos_;
                bitField0_ = (bitField0_ & ~0x00000004);
                broadcasterInfosBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getBroadcasterInfosFieldBuilder() : null;
              } else {
                broadcasterInfosBuilder_.addAllMessages(other.broadcasterInfos_);
              }
            }
          }
          if (other.hasLanguageCode()) {
            bitField0_ |= 0x00000008;
            languageCode_ = other.languageCode_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.lang.Object countryCode_ = "";
        /**
         * <code>optional string country_code = 1;</code>
         */
        public boolean hasCountryCode() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string country_code = 1;</code>
         */
        public java.lang.String getCountryCode() {
          java.lang.Object ref = countryCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              countryCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string country_code = 1;</code>
         */
        public com.google.protobuf.ByteString
            getCountryCodeBytes() {
          java.lang.Object ref = countryCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            countryCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string country_code = 1;</code>
         */
        public Builder setCountryCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          countryCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 1;</code>
         */
        public Builder clearCountryCode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          countryCode_ = getDefaultInstance().getCountryCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string country_code = 1;</code>
         */
        public Builder setCountryCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          countryCode_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object description_ = "";
        /**
         * <code>optional string description = 2;</code>
         */
        public boolean hasDescription() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string description = 2;</code>
         */
        public java.lang.String getDescription() {
          java.lang.Object ref = description_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              description_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string description = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDescriptionBytes() {
          java.lang.Object ref = description_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            description_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string description = 2;</code>
         */
        public Builder setDescription(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 2;</code>
         */
        public Builder clearDescription() {
          bitField0_ = (bitField0_ & ~0x00000002);
          description_ = getDefaultInstance().getDescription();
          onChanged();
          return this;
        }
        /**
         * <code>optional string description = 2;</code>
         */
        public Builder setDescriptionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          description_ = value;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo> broadcasterInfos_ =
          java.util.Collections.emptyList();
        private void ensureBroadcasterInfosIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            broadcasterInfos_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo>(broadcasterInfos_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder> broadcasterInfosBuilder_;

        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo> getBroadcasterInfosList() {
          if (broadcasterInfosBuilder_ == null) {
            return java.util.Collections.unmodifiableList(broadcasterInfos_);
          } else {
            return broadcasterInfosBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public int getBroadcasterInfosCount() {
          if (broadcasterInfosBuilder_ == null) {
            return broadcasterInfos_.size();
          } else {
            return broadcasterInfosBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo getBroadcasterInfos(int index) {
          if (broadcasterInfosBuilder_ == null) {
            return broadcasterInfos_.get(index);
          } else {
            return broadcasterInfosBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder setBroadcasterInfos(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo value) {
          if (broadcasterInfosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.set(index, value);
            onChanged();
          } else {
            broadcasterInfosBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder setBroadcasterInfos(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder builderForValue) {
          if (broadcasterInfosBuilder_ == null) {
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.set(index, builderForValue.build());
            onChanged();
          } else {
            broadcasterInfosBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder addBroadcasterInfos(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo value) {
          if (broadcasterInfosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.add(value);
            onChanged();
          } else {
            broadcasterInfosBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder addBroadcasterInfos(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo value) {
          if (broadcasterInfosBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.add(index, value);
            onChanged();
          } else {
            broadcasterInfosBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder addBroadcasterInfos(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder builderForValue) {
          if (broadcasterInfosBuilder_ == null) {
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.add(builderForValue.build());
            onChanged();
          } else {
            broadcasterInfosBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder addBroadcasterInfos(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder builderForValue) {
          if (broadcasterInfosBuilder_ == null) {
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.add(index, builderForValue.build());
            onChanged();
          } else {
            broadcasterInfosBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder addAllBroadcasterInfos(
            java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo> values) {
          if (broadcasterInfosBuilder_ == null) {
            ensureBroadcasterInfosIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, broadcasterInfos_);
            onChanged();
          } else {
            broadcasterInfosBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder clearBroadcasterInfos() {
          if (broadcasterInfosBuilder_ == null) {
            broadcasterInfos_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            broadcasterInfosBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public Builder removeBroadcasterInfos(int index) {
          if (broadcasterInfosBuilder_ == null) {
            ensureBroadcasterInfosIsMutable();
            broadcasterInfos_.remove(index);
            onChanged();
          } else {
            broadcasterInfosBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder getBroadcasterInfosBuilder(
            int index) {
          return getBroadcasterInfosFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder getBroadcasterInfosOrBuilder(
            int index) {
          if (broadcasterInfosBuilder_ == null) {
            return broadcasterInfos_.get(index);  } else {
            return broadcasterInfosBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder> 
             getBroadcasterInfosOrBuilderList() {
          if (broadcasterInfosBuilder_ != null) {
            return broadcasterInfosBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(broadcasterInfos_);
          }
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder addBroadcasterInfosBuilder() {
          return getBroadcasterInfosFieldBuilder().addBuilder(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder addBroadcasterInfosBuilder(
            int index) {
          return getBroadcasterInfosFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.getDefaultInstance());
        }
        /**
         * <code>repeated .CMsgDOTAMatch.BroadcasterInfo broadcaster_infos = 3;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder> 
             getBroadcasterInfosBuilderList() {
          return getBroadcasterInfosFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder> 
            getBroadcasterInfosFieldBuilder() {
          if (broadcasterInfosBuilder_ == null) {
            broadcasterInfosBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfo.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterInfoOrBuilder>(
                    broadcasterInfos_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            broadcasterInfos_ = null;
          }
          return broadcasterInfosBuilder_;
        }

        private java.lang.Object languageCode_ = "";
        /**
         * <code>optional string language_code = 4;</code>
         */
        public boolean hasLanguageCode() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string language_code = 4;</code>
         */
        public java.lang.String getLanguageCode() {
          java.lang.Object ref = languageCode_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              languageCode_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string language_code = 4;</code>
         */
        public com.google.protobuf.ByteString
            getLanguageCodeBytes() {
          java.lang.Object ref = languageCode_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            languageCode_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string language_code = 4;</code>
         */
        public Builder setLanguageCode(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          languageCode_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string language_code = 4;</code>
         */
        public Builder clearLanguageCode() {
          bitField0_ = (bitField0_ & ~0x00000008);
          languageCode_ = getDefaultInstance().getLanguageCode();
          onChanged();
          return this;
        }
        /**
         * <code>optional string language_code = 4;</code>
         */
        public Builder setLanguageCodeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          languageCode_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAMatch.BroadcasterChannel)
      }

      static {
        defaultInstance = new BroadcasterChannel(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.BroadcasterChannel)
    }

    public interface CustomGameDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgDOTAMatch.CustomGameData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 custom_game_id = 1;</code>
       */
      boolean hasCustomGameId();
      /**
       * <code>optional uint64 custom_game_id = 1;</code>
       */
      long getCustomGameId();

      /**
       * <code>optional string map_name = 2;</code>
       */
      boolean hasMapName();
      /**
       * <code>optional string map_name = 2;</code>
       */
      java.lang.String getMapName();
      /**
       * <code>optional string map_name = 2;</code>
       */
      com.google.protobuf.ByteString
          getMapNameBytes();
    }
    /**
     * Protobuf type {@code CMsgDOTAMatch.CustomGameData}
     */
    public static final class CustomGameData extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgDOTAMatch.CustomGameData)
        CustomGameDataOrBuilder {
      // Use CustomGameData.newBuilder() to construct.
      private CustomGameData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CustomGameData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CustomGameData defaultInstance;
      public static CustomGameData getDefaultInstance() {
        return defaultInstance;
      }

      public CustomGameData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CustomGameData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                customGameId_ = input.readUInt64();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                mapName_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_CustomGameData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_CustomGameData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder.class);
      }

      public static com.google.protobuf.Parser<CustomGameData> PARSER =
          new com.google.protobuf.AbstractParser<CustomGameData>() {
        public CustomGameData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CustomGameData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CustomGameData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int CUSTOM_GAME_ID_FIELD_NUMBER = 1;
      private long customGameId_;
      /**
       * <code>optional uint64 custom_game_id = 1;</code>
       */
      public boolean hasCustomGameId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 custom_game_id = 1;</code>
       */
      public long getCustomGameId() {
        return customGameId_;
      }

      public static final int MAP_NAME_FIELD_NUMBER = 2;
      private java.lang.Object mapName_;
      /**
       * <code>optional string map_name = 2;</code>
       */
      public boolean hasMapName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string map_name = 2;</code>
       */
      public java.lang.String getMapName() {
        java.lang.Object ref = mapName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mapName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string map_name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMapNameBytes() {
        java.lang.Object ref = mapName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mapName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        customGameId_ = 0L;
        mapName_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, customGameId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getMapNameBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, customGameId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getMapNameBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgDOTAMatch.CustomGameData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgDOTAMatch.CustomGameData)
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_CustomGameData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_CustomGameData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder.class);
        }

        // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          customGameId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          mapName_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_CustomGameData_descriptor;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData getDefaultInstanceForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance();
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData build() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData buildPartial() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.customGameId_ = customGameId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.mapName_ = mapName_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData) {
            return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData other) {
          if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance()) return this;
          if (other.hasCustomGameId()) {
            setCustomGameId(other.getCustomGameId());
          }
          if (other.hasMapName()) {
            bitField0_ |= 0x00000002;
            mapName_ = other.mapName_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long customGameId_ ;
        /**
         * <code>optional uint64 custom_game_id = 1;</code>
         */
        public boolean hasCustomGameId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 custom_game_id = 1;</code>
         */
        public long getCustomGameId() {
          return customGameId_;
        }
        /**
         * <code>optional uint64 custom_game_id = 1;</code>
         */
        public Builder setCustomGameId(long value) {
          bitField0_ |= 0x00000001;
          customGameId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 custom_game_id = 1;</code>
         */
        public Builder clearCustomGameId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          customGameId_ = 0L;
          onChanged();
          return this;
        }

        private java.lang.Object mapName_ = "";
        /**
         * <code>optional string map_name = 2;</code>
         */
        public boolean hasMapName() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string map_name = 2;</code>
         */
        public java.lang.String getMapName() {
          java.lang.Object ref = mapName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mapName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string map_name = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMapNameBytes() {
          java.lang.Object ref = mapName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mapName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string map_name = 2;</code>
         */
        public Builder setMapName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          mapName_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string map_name = 2;</code>
         */
        public Builder clearMapName() {
          bitField0_ = (bitField0_ & ~0x00000002);
          mapName_ = getDefaultInstance().getMapName();
          onChanged();
          return this;
        }
        /**
         * <code>optional string map_name = 2;</code>
         */
        public Builder setMapNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          mapName_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgDOTAMatch.CustomGameData)
      }

      static {
        defaultInstance = new CustomGameData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgDOTAMatch.CustomGameData)
    }

    private int bitField0_;
    private int bitField1_;
    public static final int GOOD_GUYS_WIN_FIELD_NUMBER = 2;
    private boolean goodGuysWin_;
    /**
     * <code>optional bool good_guys_win = 2;</code>
     */
    public boolean hasGoodGuysWin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool good_guys_win = 2;</code>
     */
    public boolean getGoodGuysWin() {
      return goodGuysWin_;
    }

    public static final int DURATION_FIELD_NUMBER = 3;
    private int duration_;
    /**
     * <code>optional uint32 duration = 3;</code>
     */
    public boolean hasDuration() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 duration = 3;</code>
     */
    public int getDuration() {
      return duration_;
    }

    public static final int STARTTIME_FIELD_NUMBER = 4;
    private int startTime_;
    /**
     * <code>optional fixed32 startTime = 4;</code>
     */
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional fixed32 startTime = 4;</code>
     */
    public int getStartTime() {
      return startTime_;
    }

    public static final int PLAYERS_FIELD_NUMBER = 5;
    private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player> players_;
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    public static final int MATCH_ID_FIELD_NUMBER = 6;
    private long matchId_;
    /**
     * <code>optional uint64 match_id = 6;</code>
     */
    public boolean hasMatchId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint64 match_id = 6;</code>
     */
    public long getMatchId() {
      return matchId_;
    }

    public static final int TOWER_STATUS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> towerStatus_;
    /**
     * <code>repeated uint32 tower_status = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getTowerStatusList() {
      return towerStatus_;
    }
    /**
     * <code>repeated uint32 tower_status = 8;</code>
     */
    public int getTowerStatusCount() {
      return towerStatus_.size();
    }
    /**
     * <code>repeated uint32 tower_status = 8;</code>
     */
    public int getTowerStatus(int index) {
      return towerStatus_.get(index);
    }

    public static final int BARRACKS_STATUS_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> barracksStatus_;
    /**
     * <code>repeated uint32 barracks_status = 9;</code>
     */
    public java.util.List<java.lang.Integer>
        getBarracksStatusList() {
      return barracksStatus_;
    }
    /**
     * <code>repeated uint32 barracks_status = 9;</code>
     */
    public int getBarracksStatusCount() {
      return barracksStatus_.size();
    }
    /**
     * <code>repeated uint32 barracks_status = 9;</code>
     */
    public int getBarracksStatus(int index) {
      return barracksStatus_.get(index);
    }

    public static final int CLUSTER_FIELD_NUMBER = 10;
    private int cluster_;
    /**
     * <code>optional uint32 cluster = 10;</code>
     */
    public boolean hasCluster() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 cluster = 10;</code>
     */
    public int getCluster() {
      return cluster_;
    }

    public static final int FIRST_BLOOD_TIME_FIELD_NUMBER = 12;
    private int firstBloodTime_;
    /**
     * <code>optional uint32 first_blood_time = 12;</code>
     */
    public boolean hasFirstBloodTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 first_blood_time = 12;</code>
     */
    public int getFirstBloodTime() {
      return firstBloodTime_;
    }

    public static final int REPLAY_SALT_FIELD_NUMBER = 13;
    private int replaySalt_;
    /**
     * <code>optional fixed32 replay_salt = 13;</code>
     */
    public boolean hasReplaySalt() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional fixed32 replay_salt = 13;</code>
     */
    public int getReplaySalt() {
      return replaySalt_;
    }

    public static final int SERVER_IP_FIELD_NUMBER = 14;
    private int serverIp_;
    /**
     * <code>optional fixed32 server_ip = 14;</code>
     */
    public boolean hasServerIp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional fixed32 server_ip = 14;</code>
     */
    public int getServerIp() {
      return serverIp_;
    }

    public static final int SERVER_PORT_FIELD_NUMBER = 15;
    private int serverPort_;
    /**
     * <code>optional uint32 server_port = 15;</code>
     */
    public boolean hasServerPort() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 server_port = 15;</code>
     */
    public int getServerPort() {
      return serverPort_;
    }

    public static final int LOBBY_TYPE_FIELD_NUMBER = 16;
    private int lobbyType_;
    /**
     * <code>optional uint32 lobby_type = 16;</code>
     */
    public boolean hasLobbyType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 lobby_type = 16;</code>
     */
    public int getLobbyType() {
      return lobbyType_;
    }

    public static final int HUMAN_PLAYERS_FIELD_NUMBER = 17;
    private int humanPlayers_;
    /**
     * <code>optional uint32 human_players = 17;</code>
     */
    public boolean hasHumanPlayers() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 human_players = 17;</code>
     */
    public int getHumanPlayers() {
      return humanPlayers_;
    }

    public static final int AVERAGE_SKILL_FIELD_NUMBER = 18;
    private int averageSkill_;
    /**
     * <code>optional uint32 average_skill = 18;</code>
     */
    public boolean hasAverageSkill() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 average_skill = 18;</code>
     */
    public int getAverageSkill() {
      return averageSkill_;
    }

    public static final int GAME_BALANCE_FIELD_NUMBER = 19;
    private float gameBalance_;
    /**
     * <code>optional float game_balance = 19;</code>
     */
    public boolean hasGameBalance() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional float game_balance = 19;</code>
     */
    public float getGameBalance() {
      return gameBalance_;
    }

    public static final int RADIANT_TEAM_ID_FIELD_NUMBER = 20;
    private int radiantTeamId_;
    /**
     * <code>optional uint32 radiant_team_id = 20;</code>
     */
    public boolean hasRadiantTeamId() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 radiant_team_id = 20;</code>
     */
    public int getRadiantTeamId() {
      return radiantTeamId_;
    }

    public static final int DIRE_TEAM_ID_FIELD_NUMBER = 21;
    private int direTeamId_;
    /**
     * <code>optional uint32 dire_team_id = 21;</code>
     */
    public boolean hasDireTeamId() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 dire_team_id = 21;</code>
     */
    public int getDireTeamId() {
      return direTeamId_;
    }

    public static final int LEAGUEID_FIELD_NUMBER = 22;
    private int leagueid_;
    /**
     * <code>optional uint32 leagueid = 22;</code>
     */
    public boolean hasLeagueid() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 leagueid = 22;</code>
     */
    public int getLeagueid() {
      return leagueid_;
    }

    public static final int RADIANT_TEAM_NAME_FIELD_NUMBER = 23;
    private java.lang.Object radiantTeamName_;
    /**
     * <code>optional string radiant_team_name = 23;</code>
     */
    public boolean hasRadiantTeamName() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional string radiant_team_name = 23;</code>
     */
    public java.lang.String getRadiantTeamName() {
      java.lang.Object ref = radiantTeamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          radiantTeamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string radiant_team_name = 23;</code>
     */
    public com.google.protobuf.ByteString
        getRadiantTeamNameBytes() {
      java.lang.Object ref = radiantTeamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        radiantTeamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIRE_TEAM_NAME_FIELD_NUMBER = 24;
    private java.lang.Object direTeamName_;
    /**
     * <code>optional string dire_team_name = 24;</code>
     */
    public boolean hasDireTeamName() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string dire_team_name = 24;</code>
     */
    public java.lang.String getDireTeamName() {
      java.lang.Object ref = direTeamName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          direTeamName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dire_team_name = 24;</code>
     */
    public com.google.protobuf.ByteString
        getDireTeamNameBytes() {
      java.lang.Object ref = direTeamName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        direTeamName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RADIANT_TEAM_LOGO_FIELD_NUMBER = 25;
    private long radiantTeamLogo_;
    /**
     * <code>optional uint64 radiant_team_logo = 25;</code>
     */
    public boolean hasRadiantTeamLogo() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional uint64 radiant_team_logo = 25;</code>
     */
    public long getRadiantTeamLogo() {
      return radiantTeamLogo_;
    }

    public static final int DIRE_TEAM_LOGO_FIELD_NUMBER = 26;
    private long direTeamLogo_;
    /**
     * <code>optional uint64 dire_team_logo = 26;</code>
     */
    public boolean hasDireTeamLogo() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional uint64 dire_team_logo = 26;</code>
     */
    public long getDireTeamLogo() {
      return direTeamLogo_;
    }

    public static final int RADIANT_TEAM_COMPLETE_FIELD_NUMBER = 27;
    private int radiantTeamComplete_;
    /**
     * <code>optional uint32 radiant_team_complete = 27;</code>
     */
    public boolean hasRadiantTeamComplete() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 radiant_team_complete = 27;</code>
     */
    public int getRadiantTeamComplete() {
      return radiantTeamComplete_;
    }

    public static final int DIRE_TEAM_COMPLETE_FIELD_NUMBER = 28;
    private int direTeamComplete_;
    /**
     * <code>optional uint32 dire_team_complete = 28;</code>
     */
    public boolean hasDireTeamComplete() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional uint32 dire_team_complete = 28;</code>
     */
    public int getDireTeamComplete() {
      return direTeamComplete_;
    }

    public static final int POSITIVE_VOTES_FIELD_NUMBER = 29;
    private int positiveVotes_;
    /**
     * <code>optional uint32 positive_votes = 29;</code>
     */
    public boolean hasPositiveVotes() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 positive_votes = 29;</code>
     */
    public int getPositiveVotes() {
      return positiveVotes_;
    }

    public static final int NEGATIVE_VOTES_FIELD_NUMBER = 30;
    private int negativeVotes_;
    /**
     * <code>optional uint32 negative_votes = 30;</code>
     */
    public boolean hasNegativeVotes() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional uint32 negative_votes = 30;</code>
     */
    public int getNegativeVotes() {
      return negativeVotes_;
    }

    public static final int GAME_MODE_FIELD_NUMBER = 31;
    private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode gameMode_;
    /**
     * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
     */
    public boolean hasGameMode() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode getGameMode() {
      return gameMode_;
    }

    public static final int PICKS_BANS_FIELD_NUMBER = 32;
    private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent> picksBans_;
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent> getPicksBansList() {
      return picksBans_;
    }
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder> 
        getPicksBansOrBuilderList() {
      return picksBans_;
    }
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    public int getPicksBansCount() {
      return picksBans_.size();
    }
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent getPicksBans(int index) {
      return picksBans_.get(index);
    }
    /**
     * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder getPicksBansOrBuilder(
        int index) {
      return picksBans_.get(index);
    }

    public static final int MATCH_SEQ_NUM_FIELD_NUMBER = 33;
    private long matchSeqNum_;
    /**
     * <code>optional uint64 match_seq_num = 33;</code>
     */
    public boolean hasMatchSeqNum() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional uint64 match_seq_num = 33;</code>
     */
    public long getMatchSeqNum() {
      return matchSeqNum_;
    }

    public static final int REPLAY_STATE_FIELD_NUMBER = 34;
    private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState replayState_;
    /**
     * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
     */
    public boolean hasReplayState() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState getReplayState() {
      return replayState_;
    }

    public static final int RADIANT_GUILD_ID_FIELD_NUMBER = 35;
    private int radiantGuildId_;
    /**
     * <code>optional uint32 radiant_guild_id = 35;</code>
     */
    public boolean hasRadiantGuildId() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional uint32 radiant_guild_id = 35;</code>
     */
    public int getRadiantGuildId() {
      return radiantGuildId_;
    }

    public static final int DIRE_GUILD_ID_FIELD_NUMBER = 36;
    private int direGuildId_;
    /**
     * <code>optional uint32 dire_guild_id = 36;</code>
     */
    public boolean hasDireGuildId() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional uint32 dire_guild_id = 36;</code>
     */
    public int getDireGuildId() {
      return direGuildId_;
    }

    public static final int RADIANT_TEAM_TAG_FIELD_NUMBER = 37;
    private java.lang.Object radiantTeamTag_;
    /**
     * <code>optional string radiant_team_tag = 37;</code>
     */
    public boolean hasRadiantTeamTag() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional string radiant_team_tag = 37;</code>
     */
    public java.lang.String getRadiantTeamTag() {
      java.lang.Object ref = radiantTeamTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          radiantTeamTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string radiant_team_tag = 37;</code>
     */
    public com.google.protobuf.ByteString
        getRadiantTeamTagBytes() {
      java.lang.Object ref = radiantTeamTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        radiantTeamTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DIRE_TEAM_TAG_FIELD_NUMBER = 38;
    private java.lang.Object direTeamTag_;
    /**
     * <code>optional string dire_team_tag = 38;</code>
     */
    public boolean hasDireTeamTag() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional string dire_team_tag = 38;</code>
     */
    public java.lang.String getDireTeamTag() {
      java.lang.Object ref = direTeamTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          direTeamTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string dire_team_tag = 38;</code>
     */
    public com.google.protobuf.ByteString
        getDireTeamTagBytes() {
      java.lang.Object ref = direTeamTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        direTeamTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SERIES_ID_FIELD_NUMBER = 39;
    private int seriesId_;
    /**
     * <code>optional uint32 series_id = 39;</code>
     */
    public boolean hasSeriesId() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional uint32 series_id = 39;</code>
     */
    public int getSeriesId() {
      return seriesId_;
    }

    public static final int SERIES_TYPE_FIELD_NUMBER = 40;
    private int seriesType_;
    /**
     * <code>optional uint32 series_type = 40;</code>
     */
    public boolean hasSeriesType() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 series_type = 40;</code>
     */
    public int getSeriesType() {
      return seriesType_;
    }

    public static final int BROADCASTER_CHANNELS_FIELD_NUMBER = 43;
    private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel> broadcasterChannels_;
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel> getBroadcasterChannelsList() {
      return broadcasterChannels_;
    }
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder> 
        getBroadcasterChannelsOrBuilderList() {
      return broadcasterChannels_;
    }
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    public int getBroadcasterChannelsCount() {
      return broadcasterChannels_.size();
    }
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel getBroadcasterChannels(int index) {
      return broadcasterChannels_.get(index);
    }
    /**
     * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder getBroadcasterChannelsOrBuilder(
        int index) {
      return broadcasterChannels_.get(index);
    }

    public static final int ENGINE_FIELD_NUMBER = 44;
    private int engine_;
    /**
     * <code>optional uint32 engine = 44;</code>
     */
    public boolean hasEngine() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 engine = 44;</code>
     */
    public int getEngine() {
      return engine_;
    }

    public static final int CUSTOM_GAME_DATA_FIELD_NUMBER = 45;
    private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData customGameData_;
    /**
     * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
     */
    public boolean hasCustomGameData() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData getCustomGameData() {
      return customGameData_;
    }
    /**
     * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder getCustomGameDataOrBuilder() {
      return customGameData_;
    }

    public static final int MATCH_FLAGS_FIELD_NUMBER = 46;
    private int matchFlags_;
    /**
     * <code>optional uint32 match_flags = 46;</code>
     */
    public boolean hasMatchFlags() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 match_flags = 46;</code>
     */
    public int getMatchFlags() {
      return matchFlags_;
    }

    public static final int PRIVATE_METADATA_KEY_FIELD_NUMBER = 47;
    private int privateMetadataKey_;
    /**
     * <code>optional fixed32 private_metadata_key = 47;</code>
     */
    public boolean hasPrivateMetadataKey() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional fixed32 private_metadata_key = 47;</code>
     */
    public int getPrivateMetadataKey() {
      return privateMetadataKey_;
    }

    public static final int RADIANT_TEAM_SCORE_FIELD_NUMBER = 48;
    private int radiantTeamScore_;
    /**
     * <code>optional uint32 radiant_team_score = 48;</code>
     */
    public boolean hasRadiantTeamScore() {
      return ((bitField1_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 radiant_team_score = 48;</code>
     */
    public int getRadiantTeamScore() {
      return radiantTeamScore_;
    }

    public static final int DIRE_TEAM_SCORE_FIELD_NUMBER = 49;
    private int direTeamScore_;
    /**
     * <code>optional uint32 dire_team_score = 49;</code>
     */
    public boolean hasDireTeamScore() {
      return ((bitField1_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 dire_team_score = 49;</code>
     */
    public int getDireTeamScore() {
      return direTeamScore_;
    }

    public static final int MATCH_OUTCOME_FIELD_NUMBER = 50;
    private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome matchOutcome_;
    /**
     * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
     */
    public boolean hasMatchOutcome() {
      return ((bitField1_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome getMatchOutcome() {
      return matchOutcome_;
    }

    public static final int TOURNAMENT_ID_FIELD_NUMBER = 51;
    private int tournamentId_;
    /**
     * <code>optional uint32 tournament_id = 51;</code>
     */
    public boolean hasTournamentId() {
      return ((bitField1_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 tournament_id = 51;</code>
     */
    public int getTournamentId() {
      return tournamentId_;
    }

    public static final int TOURNAMENT_ROUND_FIELD_NUMBER = 52;
    private int tournamentRound_;
    /**
     * <code>optional uint32 tournament_round = 52;</code>
     */
    public boolean hasTournamentRound() {
      return ((bitField1_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 tournament_round = 52;</code>
     */
    public int getTournamentRound() {
      return tournamentRound_;
    }

    public static final int PRE_GAME_DURATION_FIELD_NUMBER = 53;
    private int preGameDuration_;
    /**
     * <code>optional uint32 pre_game_duration = 53;</code>
     */
    public boolean hasPreGameDuration() {
      return ((bitField1_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 pre_game_duration = 53;</code>
     */
    public int getPreGameDuration() {
      return preGameDuration_;
    }

    private void initFields() {
      goodGuysWin_ = false;
      duration_ = 0;
      startTime_ = 0;
      players_ = java.util.Collections.emptyList();
      matchId_ = 0L;
      towerStatus_ = java.util.Collections.emptyList();
      barracksStatus_ = java.util.Collections.emptyList();
      cluster_ = 0;
      firstBloodTime_ = 0;
      replaySalt_ = 0;
      serverIp_ = 0;
      serverPort_ = 0;
      lobbyType_ = 0;
      humanPlayers_ = 0;
      averageSkill_ = 0;
      gameBalance_ = 0F;
      radiantTeamId_ = 0;
      direTeamId_ = 0;
      leagueid_ = 0;
      radiantTeamName_ = "";
      direTeamName_ = "";
      radiantTeamLogo_ = 0L;
      direTeamLogo_ = 0L;
      radiantTeamComplete_ = 0;
      direTeamComplete_ = 0;
      positiveVotes_ = 0;
      negativeVotes_ = 0;
      gameMode_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode.DOTA_GAMEMODE_NONE;
      picksBans_ = java.util.Collections.emptyList();
      matchSeqNum_ = 0L;
      replayState_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState.REPLAY_AVAILABLE;
      radiantGuildId_ = 0;
      direGuildId_ = 0;
      radiantTeamTag_ = "";
      direTeamTag_ = "";
      seriesId_ = 0;
      seriesType_ = 0;
      broadcasterChannels_ = java.util.Collections.emptyList();
      engine_ = 0;
      customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance();
      matchFlags_ = 0;
      privateMetadataKey_ = 0;
      radiantTeamScore_ = 0;
      direTeamScore_ = 0;
      matchOutcome_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
      tournamentId_ = 0;
      tournamentRound_ = 0;
      preGameDuration_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(2, goodGuysWin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFixed32(4, startTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(5, players_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(6, matchId_);
      }
      for (int i = 0; i < towerStatus_.size(); i++) {
        output.writeUInt32(8, towerStatus_.get(i));
      }
      for (int i = 0; i < barracksStatus_.size(); i++) {
        output.writeUInt32(9, barracksStatus_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(10, cluster_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(12, firstBloodTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFixed32(13, replaySalt_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFixed32(14, serverIp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(15, serverPort_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(16, lobbyType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(17, humanPlayers_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(18, averageSkill_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeFloat(19, gameBalance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(20, radiantTeamId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(21, direTeamId_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(22, leagueid_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(23, getRadiantTeamNameBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(24, getDireTeamNameBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeUInt64(25, radiantTeamLogo_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeUInt64(26, direTeamLogo_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(27, radiantTeamComplete_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt32(28, direTeamComplete_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(29, positiveVotes_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeUInt32(30, negativeVotes_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeEnum(31, gameMode_.getNumber());
      }
      for (int i = 0; i < picksBans_.size(); i++) {
        output.writeMessage(32, picksBans_.get(i));
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeUInt64(33, matchSeqNum_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeEnum(34, replayState_.getNumber());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeUInt32(35, radiantGuildId_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeUInt32(36, direGuildId_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBytes(37, getRadiantTeamTagBytes());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeBytes(38, getDireTeamTagBytes());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeUInt32(39, seriesId_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(40, seriesType_);
      }
      for (int i = 0; i < broadcasterChannels_.size(); i++) {
        output.writeMessage(43, broadcasterChannels_.get(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(44, engine_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(45, customGameData_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(46, matchFlags_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeFixed32(47, privateMetadataKey_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(48, radiantTeamScore_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(49, direTeamScore_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(50, matchOutcome_.getNumber());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(51, tournamentId_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(52, tournamentRound_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(53, preGameDuration_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, goodGuysWin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, duration_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, startTime_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, players_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, matchId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < towerStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(towerStatus_.get(i));
        }
        size += dataSize;
        size += 1 * getTowerStatusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < barracksStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(barracksStatus_.get(i));
        }
        size += dataSize;
        size += 1 * getBarracksStatusList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, cluster_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, firstBloodTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(13, replaySalt_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(14, serverIp_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, serverPort_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, lobbyType_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, humanPlayers_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, averageSkill_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(19, gameBalance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, radiantTeamId_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, direTeamId_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, leagueid_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getRadiantTeamNameBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getDireTeamNameBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(25, radiantTeamLogo_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(26, direTeamLogo_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, radiantTeamComplete_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, direTeamComplete_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, positiveVotes_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, negativeVotes_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(31, gameMode_.getNumber());
      }
      for (int i = 0; i < picksBans_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, picksBans_.get(i));
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(33, matchSeqNum_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(34, replayState_.getNumber());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(35, radiantGuildId_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(36, direGuildId_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(37, getRadiantTeamTagBytes());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(38, getDireTeamTagBytes());
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(39, seriesId_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(40, seriesType_);
      }
      for (int i = 0; i < broadcasterChannels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(43, broadcasterChannels_.get(i));
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(44, engine_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(45, customGameData_);
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(46, matchFlags_);
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(47, privateMetadataKey_);
      }
      if (((bitField1_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(48, radiantTeamScore_);
      }
      if (((bitField1_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(49, direTeamScore_);
      }
      if (((bitField1_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(50, matchOutcome_.getNumber());
      }
      if (((bitField1_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(51, tournamentId_);
      }
      if (((bitField1_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(52, tournamentRound_);
      }
      if (((bitField1_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(53, preGameDuration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgDOTAMatch}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgDOTAMatch)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatchOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
          getPicksBansFieldBuilder();
          getBroadcasterChannelsFieldBuilder();
          getCustomGameDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        goodGuysWin_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        duration_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        startTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playersBuilder_.clear();
        }
        matchId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        towerStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        barracksStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        cluster_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        firstBloodTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        replaySalt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        serverIp_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        serverPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        lobbyType_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        humanPlayers_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        averageSkill_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        gameBalance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        radiantTeamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        direTeamId_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        leagueid_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        radiantTeamName_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        direTeamName_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        radiantTeamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        direTeamLogo_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        radiantTeamComplete_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        direTeamComplete_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        positiveVotes_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        negativeVotes_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        gameMode_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode.DOTA_GAMEMODE_NONE;
        bitField0_ = (bitField0_ & ~0x08000000);
        if (picksBansBuilder_ == null) {
          picksBans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
        } else {
          picksBansBuilder_.clear();
        }
        matchSeqNum_ = 0L;
        bitField0_ = (bitField0_ & ~0x20000000);
        replayState_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState.REPLAY_AVAILABLE;
        bitField0_ = (bitField0_ & ~0x40000000);
        radiantGuildId_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        direGuildId_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        radiantTeamTag_ = "";
        bitField1_ = (bitField1_ & ~0x00000002);
        direTeamTag_ = "";
        bitField1_ = (bitField1_ & ~0x00000004);
        seriesId_ = 0;
        bitField1_ = (bitField1_ & ~0x00000008);
        seriesType_ = 0;
        bitField1_ = (bitField1_ & ~0x00000010);
        if (broadcasterChannelsBuilder_ == null) {
          broadcasterChannels_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000020);
        } else {
          broadcasterChannelsBuilder_.clear();
        }
        engine_ = 0;
        bitField1_ = (bitField1_ & ~0x00000040);
        if (customGameDataBuilder_ == null) {
          customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance();
        } else {
          customGameDataBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        matchFlags_ = 0;
        bitField1_ = (bitField1_ & ~0x00000100);
        privateMetadataKey_ = 0;
        bitField1_ = (bitField1_ & ~0x00000200);
        radiantTeamScore_ = 0;
        bitField1_ = (bitField1_ & ~0x00000400);
        direTeamScore_ = 0;
        bitField1_ = (bitField1_ & ~0x00000800);
        matchOutcome_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
        bitField1_ = (bitField1_ & ~0x00001000);
        tournamentId_ = 0;
        bitField1_ = (bitField1_ & ~0x00002000);
        tournamentRound_ = 0;
        bitField1_ = (bitField1_ & ~0x00004000);
        preGameDuration_ = 0;
        bitField1_ = (bitField1_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgDOTAMatch_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.goodGuysWin_ = goodGuysWin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.duration_ = duration_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.startTime_ = startTime_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.matchId_ = matchId_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          towerStatus_ = java.util.Collections.unmodifiableList(towerStatus_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.towerStatus_ = towerStatus_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          barracksStatus_ = java.util.Collections.unmodifiableList(barracksStatus_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.barracksStatus_ = barracksStatus_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.cluster_ = cluster_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.firstBloodTime_ = firstBloodTime_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.replaySalt_ = replaySalt_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.serverIp_ = serverIp_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.serverPort_ = serverPort_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lobbyType_ = lobbyType_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.humanPlayers_ = humanPlayers_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.averageSkill_ = averageSkill_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.gameBalance_ = gameBalance_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.radiantTeamId_ = radiantTeamId_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.direTeamId_ = direTeamId_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.leagueid_ = leagueid_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.radiantTeamName_ = radiantTeamName_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.direTeamName_ = direTeamName_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.radiantTeamLogo_ = radiantTeamLogo_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.direTeamLogo_ = direTeamLogo_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.radiantTeamComplete_ = radiantTeamComplete_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.direTeamComplete_ = direTeamComplete_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.positiveVotes_ = positiveVotes_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.negativeVotes_ = negativeVotes_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.gameMode_ = gameMode_;
        if (picksBansBuilder_ == null) {
          if (((bitField0_ & 0x10000000) == 0x10000000)) {
            picksBans_ = java.util.Collections.unmodifiableList(picksBans_);
            bitField0_ = (bitField0_ & ~0x10000000);
          }
          result.picksBans_ = picksBans_;
        } else {
          result.picksBans_ = picksBansBuilder_.build();
        }
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.matchSeqNum_ = matchSeqNum_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.replayState_ = replayState_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.radiantGuildId_ = radiantGuildId_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x10000000;
        }
        result.direGuildId_ = direGuildId_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x20000000;
        }
        result.radiantTeamTag_ = radiantTeamTag_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x40000000;
        }
        result.direTeamTag_ = direTeamTag_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x80000000;
        }
        result.seriesId_ = seriesId_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000001;
        }
        result.seriesType_ = seriesType_;
        if (broadcasterChannelsBuilder_ == null) {
          if (((bitField1_ & 0x00000020) == 0x00000020)) {
            broadcasterChannels_ = java.util.Collections.unmodifiableList(broadcasterChannels_);
            bitField1_ = (bitField1_ & ~0x00000020);
          }
          result.broadcasterChannels_ = broadcasterChannels_;
        } else {
          result.broadcasterChannels_ = broadcasterChannelsBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000040) == 0x00000040)) {
          to_bitField1_ |= 0x00000002;
        }
        result.engine_ = engine_;
        if (((from_bitField1_ & 0x00000080) == 0x00000080)) {
          to_bitField1_ |= 0x00000004;
        }
        if (customGameDataBuilder_ == null) {
          result.customGameData_ = customGameData_;
        } else {
          result.customGameData_ = customGameDataBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000100) == 0x00000100)) {
          to_bitField1_ |= 0x00000008;
        }
        result.matchFlags_ = matchFlags_;
        if (((from_bitField1_ & 0x00000200) == 0x00000200)) {
          to_bitField1_ |= 0x00000010;
        }
        result.privateMetadataKey_ = privateMetadataKey_;
        if (((from_bitField1_ & 0x00000400) == 0x00000400)) {
          to_bitField1_ |= 0x00000020;
        }
        result.radiantTeamScore_ = radiantTeamScore_;
        if (((from_bitField1_ & 0x00000800) == 0x00000800)) {
          to_bitField1_ |= 0x00000040;
        }
        result.direTeamScore_ = direTeamScore_;
        if (((from_bitField1_ & 0x00001000) == 0x00001000)) {
          to_bitField1_ |= 0x00000080;
        }
        result.matchOutcome_ = matchOutcome_;
        if (((from_bitField1_ & 0x00002000) == 0x00002000)) {
          to_bitField1_ |= 0x00000100;
        }
        result.tournamentId_ = tournamentId_;
        if (((from_bitField1_ & 0x00004000) == 0x00004000)) {
          to_bitField1_ |= 0x00000200;
        }
        result.tournamentRound_ = tournamentRound_;
        if (((from_bitField1_ & 0x00008000) == 0x00008000)) {
          to_bitField1_ |= 0x00000400;
        }
        result.preGameDuration_ = preGameDuration_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.getDefaultInstance()) return this;
        if (other.hasGoodGuysWin()) {
          setGoodGuysWin(other.getGoodGuysWin());
        }
        if (other.hasDuration()) {
          setDuration(other.getDuration());
        }
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasMatchId()) {
          setMatchId(other.getMatchId());
        }
        if (!other.towerStatus_.isEmpty()) {
          if (towerStatus_.isEmpty()) {
            towerStatus_ = other.towerStatus_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTowerStatusIsMutable();
            towerStatus_.addAll(other.towerStatus_);
          }
          onChanged();
        }
        if (!other.barracksStatus_.isEmpty()) {
          if (barracksStatus_.isEmpty()) {
            barracksStatus_ = other.barracksStatus_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureBarracksStatusIsMutable();
            barracksStatus_.addAll(other.barracksStatus_);
          }
          onChanged();
        }
        if (other.hasCluster()) {
          setCluster(other.getCluster());
        }
        if (other.hasFirstBloodTime()) {
          setFirstBloodTime(other.getFirstBloodTime());
        }
        if (other.hasReplaySalt()) {
          setReplaySalt(other.getReplaySalt());
        }
        if (other.hasServerIp()) {
          setServerIp(other.getServerIp());
        }
        if (other.hasServerPort()) {
          setServerPort(other.getServerPort());
        }
        if (other.hasLobbyType()) {
          setLobbyType(other.getLobbyType());
        }
        if (other.hasHumanPlayers()) {
          setHumanPlayers(other.getHumanPlayers());
        }
        if (other.hasAverageSkill()) {
          setAverageSkill(other.getAverageSkill());
        }
        if (other.hasGameBalance()) {
          setGameBalance(other.getGameBalance());
        }
        if (other.hasRadiantTeamId()) {
          setRadiantTeamId(other.getRadiantTeamId());
        }
        if (other.hasDireTeamId()) {
          setDireTeamId(other.getDireTeamId());
        }
        if (other.hasLeagueid()) {
          setLeagueid(other.getLeagueid());
        }
        if (other.hasRadiantTeamName()) {
          bitField0_ |= 0x00080000;
          radiantTeamName_ = other.radiantTeamName_;
          onChanged();
        }
        if (other.hasDireTeamName()) {
          bitField0_ |= 0x00100000;
          direTeamName_ = other.direTeamName_;
          onChanged();
        }
        if (other.hasRadiantTeamLogo()) {
          setRadiantTeamLogo(other.getRadiantTeamLogo());
        }
        if (other.hasDireTeamLogo()) {
          setDireTeamLogo(other.getDireTeamLogo());
        }
        if (other.hasRadiantTeamComplete()) {
          setRadiantTeamComplete(other.getRadiantTeamComplete());
        }
        if (other.hasDireTeamComplete()) {
          setDireTeamComplete(other.getDireTeamComplete());
        }
        if (other.hasPositiveVotes()) {
          setPositiveVotes(other.getPositiveVotes());
        }
        if (other.hasNegativeVotes()) {
          setNegativeVotes(other.getNegativeVotes());
        }
        if (other.hasGameMode()) {
          setGameMode(other.getGameMode());
        }
        if (picksBansBuilder_ == null) {
          if (!other.picksBans_.isEmpty()) {
            if (picksBans_.isEmpty()) {
              picksBans_ = other.picksBans_;
              bitField0_ = (bitField0_ & ~0x10000000);
            } else {
              ensurePicksBansIsMutable();
              picksBans_.addAll(other.picksBans_);
            }
            onChanged();
          }
        } else {
          if (!other.picksBans_.isEmpty()) {
            if (picksBansBuilder_.isEmpty()) {
              picksBansBuilder_.dispose();
              picksBansBuilder_ = null;
              picksBans_ = other.picksBans_;
              bitField0_ = (bitField0_ & ~0x10000000);
              picksBansBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPicksBansFieldBuilder() : null;
            } else {
              picksBansBuilder_.addAllMessages(other.picksBans_);
            }
          }
        }
        if (other.hasMatchSeqNum()) {
          setMatchSeqNum(other.getMatchSeqNum());
        }
        if (other.hasReplayState()) {
          setReplayState(other.getReplayState());
        }
        if (other.hasRadiantGuildId()) {
          setRadiantGuildId(other.getRadiantGuildId());
        }
        if (other.hasDireGuildId()) {
          setDireGuildId(other.getDireGuildId());
        }
        if (other.hasRadiantTeamTag()) {
          bitField1_ |= 0x00000002;
          radiantTeamTag_ = other.radiantTeamTag_;
          onChanged();
        }
        if (other.hasDireTeamTag()) {
          bitField1_ |= 0x00000004;
          direTeamTag_ = other.direTeamTag_;
          onChanged();
        }
        if (other.hasSeriesId()) {
          setSeriesId(other.getSeriesId());
        }
        if (other.hasSeriesType()) {
          setSeriesType(other.getSeriesType());
        }
        if (broadcasterChannelsBuilder_ == null) {
          if (!other.broadcasterChannels_.isEmpty()) {
            if (broadcasterChannels_.isEmpty()) {
              broadcasterChannels_ = other.broadcasterChannels_;
              bitField1_ = (bitField1_ & ~0x00000020);
            } else {
              ensureBroadcasterChannelsIsMutable();
              broadcasterChannels_.addAll(other.broadcasterChannels_);
            }
            onChanged();
          }
        } else {
          if (!other.broadcasterChannels_.isEmpty()) {
            if (broadcasterChannelsBuilder_.isEmpty()) {
              broadcasterChannelsBuilder_.dispose();
              broadcasterChannelsBuilder_ = null;
              broadcasterChannels_ = other.broadcasterChannels_;
              bitField1_ = (bitField1_ & ~0x00000020);
              broadcasterChannelsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBroadcasterChannelsFieldBuilder() : null;
            } else {
              broadcasterChannelsBuilder_.addAllMessages(other.broadcasterChannels_);
            }
          }
        }
        if (other.hasEngine()) {
          setEngine(other.getEngine());
        }
        if (other.hasCustomGameData()) {
          mergeCustomGameData(other.getCustomGameData());
        }
        if (other.hasMatchFlags()) {
          setMatchFlags(other.getMatchFlags());
        }
        if (other.hasPrivateMetadataKey()) {
          setPrivateMetadataKey(other.getPrivateMetadataKey());
        }
        if (other.hasRadiantTeamScore()) {
          setRadiantTeamScore(other.getRadiantTeamScore());
        }
        if (other.hasDireTeamScore()) {
          setDireTeamScore(other.getDireTeamScore());
        }
        if (other.hasMatchOutcome()) {
          setMatchOutcome(other.getMatchOutcome());
        }
        if (other.hasTournamentId()) {
          setTournamentId(other.getTournamentId());
        }
        if (other.hasTournamentRound()) {
          setTournamentRound(other.getTournamentRound());
        }
        if (other.hasPreGameDuration()) {
          setPreGameDuration(other.getPreGameDuration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private boolean goodGuysWin_ ;
      /**
       * <code>optional bool good_guys_win = 2;</code>
       */
      public boolean hasGoodGuysWin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool good_guys_win = 2;</code>
       */
      public boolean getGoodGuysWin() {
        return goodGuysWin_;
      }
      /**
       * <code>optional bool good_guys_win = 2;</code>
       */
      public Builder setGoodGuysWin(boolean value) {
        bitField0_ |= 0x00000001;
        goodGuysWin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool good_guys_win = 2;</code>
       */
      public Builder clearGoodGuysWin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        goodGuysWin_ = false;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>optional uint32 duration = 3;</code>
       */
      public boolean hasDuration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 duration = 3;</code>
       */
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>optional uint32 duration = 3;</code>
       */
      public Builder setDuration(int value) {
        bitField0_ |= 0x00000002;
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 duration = 3;</code>
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>optional fixed32 startTime = 4;</code>
       */
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional fixed32 startTime = 4;</code>
       */
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>optional fixed32 startTime = 4;</code>
       */
      public Builder setStartTime(int value) {
        bitField0_ |= 0x00000004;
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 startTime = 4;</code>
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player>(players_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder> playersBuilder_;

      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder setPlayers(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder addPlayers(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder addPlayers(
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder addPlayers(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAMatch.Player players = 5;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.Player.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.PlayerOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      private long matchId_ ;
      /**
       * <code>optional uint64 match_id = 6;</code>
       */
      public boolean hasMatchId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint64 match_id = 6;</code>
       */
      public long getMatchId() {
        return matchId_;
      }
      /**
       * <code>optional uint64 match_id = 6;</code>
       */
      public Builder setMatchId(long value) {
        bitField0_ |= 0x00000010;
        matchId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_id = 6;</code>
       */
      public Builder clearMatchId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        matchId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> towerStatus_ = java.util.Collections.emptyList();
      private void ensureTowerStatusIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          towerStatus_ = new java.util.ArrayList<java.lang.Integer>(towerStatus_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getTowerStatusList() {
        return java.util.Collections.unmodifiableList(towerStatus_);
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public int getTowerStatusCount() {
        return towerStatus_.size();
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public int getTowerStatus(int index) {
        return towerStatus_.get(index);
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public Builder setTowerStatus(
          int index, int value) {
        ensureTowerStatusIsMutable();
        towerStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public Builder addTowerStatus(int value) {
        ensureTowerStatusIsMutable();
        towerStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public Builder addAllTowerStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTowerStatusIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, towerStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tower_status = 8;</code>
       */
      public Builder clearTowerStatus() {
        towerStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> barracksStatus_ = java.util.Collections.emptyList();
      private void ensureBarracksStatusIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          barracksStatus_ = new java.util.ArrayList<java.lang.Integer>(barracksStatus_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public java.util.List<java.lang.Integer>
          getBarracksStatusList() {
        return java.util.Collections.unmodifiableList(barracksStatus_);
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public int getBarracksStatusCount() {
        return barracksStatus_.size();
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public int getBarracksStatus(int index) {
        return barracksStatus_.get(index);
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public Builder setBarracksStatus(
          int index, int value) {
        ensureBarracksStatusIsMutable();
        barracksStatus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public Builder addBarracksStatus(int value) {
        ensureBarracksStatusIsMutable();
        barracksStatus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public Builder addAllBarracksStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBarracksStatusIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, barracksStatus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 barracks_status = 9;</code>
       */
      public Builder clearBarracksStatus() {
        barracksStatus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private int cluster_ ;
      /**
       * <code>optional uint32 cluster = 10;</code>
       */
      public boolean hasCluster() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 cluster = 10;</code>
       */
      public int getCluster() {
        return cluster_;
      }
      /**
       * <code>optional uint32 cluster = 10;</code>
       */
      public Builder setCluster(int value) {
        bitField0_ |= 0x00000080;
        cluster_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cluster = 10;</code>
       */
      public Builder clearCluster() {
        bitField0_ = (bitField0_ & ~0x00000080);
        cluster_ = 0;
        onChanged();
        return this;
      }

      private int firstBloodTime_ ;
      /**
       * <code>optional uint32 first_blood_time = 12;</code>
       */
      public boolean hasFirstBloodTime() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 first_blood_time = 12;</code>
       */
      public int getFirstBloodTime() {
        return firstBloodTime_;
      }
      /**
       * <code>optional uint32 first_blood_time = 12;</code>
       */
      public Builder setFirstBloodTime(int value) {
        bitField0_ |= 0x00000100;
        firstBloodTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 first_blood_time = 12;</code>
       */
      public Builder clearFirstBloodTime() {
        bitField0_ = (bitField0_ & ~0x00000100);
        firstBloodTime_ = 0;
        onChanged();
        return this;
      }

      private int replaySalt_ ;
      /**
       * <code>optional fixed32 replay_salt = 13;</code>
       */
      public boolean hasReplaySalt() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed32 replay_salt = 13;</code>
       */
      public int getReplaySalt() {
        return replaySalt_;
      }
      /**
       * <code>optional fixed32 replay_salt = 13;</code>
       */
      public Builder setReplaySalt(int value) {
        bitField0_ |= 0x00000200;
        replaySalt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 replay_salt = 13;</code>
       */
      public Builder clearReplaySalt() {
        bitField0_ = (bitField0_ & ~0x00000200);
        replaySalt_ = 0;
        onChanged();
        return this;
      }

      private int serverIp_ ;
      /**
       * <code>optional fixed32 server_ip = 14;</code>
       */
      public boolean hasServerIp() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional fixed32 server_ip = 14;</code>
       */
      public int getServerIp() {
        return serverIp_;
      }
      /**
       * <code>optional fixed32 server_ip = 14;</code>
       */
      public Builder setServerIp(int value) {
        bitField0_ |= 0x00000400;
        serverIp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 server_ip = 14;</code>
       */
      public Builder clearServerIp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        serverIp_ = 0;
        onChanged();
        return this;
      }

      private int serverPort_ ;
      /**
       * <code>optional uint32 server_port = 15;</code>
       */
      public boolean hasServerPort() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 server_port = 15;</code>
       */
      public int getServerPort() {
        return serverPort_;
      }
      /**
       * <code>optional uint32 server_port = 15;</code>
       */
      public Builder setServerPort(int value) {
        bitField0_ |= 0x00000800;
        serverPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 server_port = 15;</code>
       */
      public Builder clearServerPort() {
        bitField0_ = (bitField0_ & ~0x00000800);
        serverPort_ = 0;
        onChanged();
        return this;
      }

      private int lobbyType_ ;
      /**
       * <code>optional uint32 lobby_type = 16;</code>
       */
      public boolean hasLobbyType() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 lobby_type = 16;</code>
       */
      public int getLobbyType() {
        return lobbyType_;
      }
      /**
       * <code>optional uint32 lobby_type = 16;</code>
       */
      public Builder setLobbyType(int value) {
        bitField0_ |= 0x00001000;
        lobbyType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lobby_type = 16;</code>
       */
      public Builder clearLobbyType() {
        bitField0_ = (bitField0_ & ~0x00001000);
        lobbyType_ = 0;
        onChanged();
        return this;
      }

      private int humanPlayers_ ;
      /**
       * <code>optional uint32 human_players = 17;</code>
       */
      public boolean hasHumanPlayers() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 human_players = 17;</code>
       */
      public int getHumanPlayers() {
        return humanPlayers_;
      }
      /**
       * <code>optional uint32 human_players = 17;</code>
       */
      public Builder setHumanPlayers(int value) {
        bitField0_ |= 0x00002000;
        humanPlayers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 human_players = 17;</code>
       */
      public Builder clearHumanPlayers() {
        bitField0_ = (bitField0_ & ~0x00002000);
        humanPlayers_ = 0;
        onChanged();
        return this;
      }

      private int averageSkill_ ;
      /**
       * <code>optional uint32 average_skill = 18;</code>
       */
      public boolean hasAverageSkill() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 average_skill = 18;</code>
       */
      public int getAverageSkill() {
        return averageSkill_;
      }
      /**
       * <code>optional uint32 average_skill = 18;</code>
       */
      public Builder setAverageSkill(int value) {
        bitField0_ |= 0x00004000;
        averageSkill_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 average_skill = 18;</code>
       */
      public Builder clearAverageSkill() {
        bitField0_ = (bitField0_ & ~0x00004000);
        averageSkill_ = 0;
        onChanged();
        return this;
      }

      private float gameBalance_ ;
      /**
       * <code>optional float game_balance = 19;</code>
       */
      public boolean hasGameBalance() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float game_balance = 19;</code>
       */
      public float getGameBalance() {
        return gameBalance_;
      }
      /**
       * <code>optional float game_balance = 19;</code>
       */
      public Builder setGameBalance(float value) {
        bitField0_ |= 0x00008000;
        gameBalance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float game_balance = 19;</code>
       */
      public Builder clearGameBalance() {
        bitField0_ = (bitField0_ & ~0x00008000);
        gameBalance_ = 0F;
        onChanged();
        return this;
      }

      private int radiantTeamId_ ;
      /**
       * <code>optional uint32 radiant_team_id = 20;</code>
       */
      public boolean hasRadiantTeamId() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 radiant_team_id = 20;</code>
       */
      public int getRadiantTeamId() {
        return radiantTeamId_;
      }
      /**
       * <code>optional uint32 radiant_team_id = 20;</code>
       */
      public Builder setRadiantTeamId(int value) {
        bitField0_ |= 0x00010000;
        radiantTeamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 radiant_team_id = 20;</code>
       */
      public Builder clearRadiantTeamId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        radiantTeamId_ = 0;
        onChanged();
        return this;
      }

      private int direTeamId_ ;
      /**
       * <code>optional uint32 dire_team_id = 21;</code>
       */
      public boolean hasDireTeamId() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 dire_team_id = 21;</code>
       */
      public int getDireTeamId() {
        return direTeamId_;
      }
      /**
       * <code>optional uint32 dire_team_id = 21;</code>
       */
      public Builder setDireTeamId(int value) {
        bitField0_ |= 0x00020000;
        direTeamId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dire_team_id = 21;</code>
       */
      public Builder clearDireTeamId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        direTeamId_ = 0;
        onChanged();
        return this;
      }

      private int leagueid_ ;
      /**
       * <code>optional uint32 leagueid = 22;</code>
       */
      public boolean hasLeagueid() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 leagueid = 22;</code>
       */
      public int getLeagueid() {
        return leagueid_;
      }
      /**
       * <code>optional uint32 leagueid = 22;</code>
       */
      public Builder setLeagueid(int value) {
        bitField0_ |= 0x00040000;
        leagueid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 leagueid = 22;</code>
       */
      public Builder clearLeagueid() {
        bitField0_ = (bitField0_ & ~0x00040000);
        leagueid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object radiantTeamName_ = "";
      /**
       * <code>optional string radiant_team_name = 23;</code>
       */
      public boolean hasRadiantTeamName() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional string radiant_team_name = 23;</code>
       */
      public java.lang.String getRadiantTeamName() {
        java.lang.Object ref = radiantTeamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            radiantTeamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string radiant_team_name = 23;</code>
       */
      public com.google.protobuf.ByteString
          getRadiantTeamNameBytes() {
        java.lang.Object ref = radiantTeamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          radiantTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string radiant_team_name = 23;</code>
       */
      public Builder setRadiantTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        radiantTeamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string radiant_team_name = 23;</code>
       */
      public Builder clearRadiantTeamName() {
        bitField0_ = (bitField0_ & ~0x00080000);
        radiantTeamName_ = getDefaultInstance().getRadiantTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string radiant_team_name = 23;</code>
       */
      public Builder setRadiantTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        radiantTeamName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object direTeamName_ = "";
      /**
       * <code>optional string dire_team_name = 24;</code>
       */
      public boolean hasDireTeamName() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string dire_team_name = 24;</code>
       */
      public java.lang.String getDireTeamName() {
        java.lang.Object ref = direTeamName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            direTeamName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dire_team_name = 24;</code>
       */
      public com.google.protobuf.ByteString
          getDireTeamNameBytes() {
        java.lang.Object ref = direTeamName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          direTeamName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dire_team_name = 24;</code>
       */
      public Builder setDireTeamName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        direTeamName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dire_team_name = 24;</code>
       */
      public Builder clearDireTeamName() {
        bitField0_ = (bitField0_ & ~0x00100000);
        direTeamName_ = getDefaultInstance().getDireTeamName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dire_team_name = 24;</code>
       */
      public Builder setDireTeamNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        direTeamName_ = value;
        onChanged();
        return this;
      }

      private long radiantTeamLogo_ ;
      /**
       * <code>optional uint64 radiant_team_logo = 25;</code>
       */
      public boolean hasRadiantTeamLogo() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint64 radiant_team_logo = 25;</code>
       */
      public long getRadiantTeamLogo() {
        return radiantTeamLogo_;
      }
      /**
       * <code>optional uint64 radiant_team_logo = 25;</code>
       */
      public Builder setRadiantTeamLogo(long value) {
        bitField0_ |= 0x00200000;
        radiantTeamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 radiant_team_logo = 25;</code>
       */
      public Builder clearRadiantTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00200000);
        radiantTeamLogo_ = 0L;
        onChanged();
        return this;
      }

      private long direTeamLogo_ ;
      /**
       * <code>optional uint64 dire_team_logo = 26;</code>
       */
      public boolean hasDireTeamLogo() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional uint64 dire_team_logo = 26;</code>
       */
      public long getDireTeamLogo() {
        return direTeamLogo_;
      }
      /**
       * <code>optional uint64 dire_team_logo = 26;</code>
       */
      public Builder setDireTeamLogo(long value) {
        bitField0_ |= 0x00400000;
        direTeamLogo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 dire_team_logo = 26;</code>
       */
      public Builder clearDireTeamLogo() {
        bitField0_ = (bitField0_ & ~0x00400000);
        direTeamLogo_ = 0L;
        onChanged();
        return this;
      }

      private int radiantTeamComplete_ ;
      /**
       * <code>optional uint32 radiant_team_complete = 27;</code>
       */
      public boolean hasRadiantTeamComplete() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 radiant_team_complete = 27;</code>
       */
      public int getRadiantTeamComplete() {
        return radiantTeamComplete_;
      }
      /**
       * <code>optional uint32 radiant_team_complete = 27;</code>
       */
      public Builder setRadiantTeamComplete(int value) {
        bitField0_ |= 0x00800000;
        radiantTeamComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 radiant_team_complete = 27;</code>
       */
      public Builder clearRadiantTeamComplete() {
        bitField0_ = (bitField0_ & ~0x00800000);
        radiantTeamComplete_ = 0;
        onChanged();
        return this;
      }

      private int direTeamComplete_ ;
      /**
       * <code>optional uint32 dire_team_complete = 28;</code>
       */
      public boolean hasDireTeamComplete() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional uint32 dire_team_complete = 28;</code>
       */
      public int getDireTeamComplete() {
        return direTeamComplete_;
      }
      /**
       * <code>optional uint32 dire_team_complete = 28;</code>
       */
      public Builder setDireTeamComplete(int value) {
        bitField0_ |= 0x01000000;
        direTeamComplete_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dire_team_complete = 28;</code>
       */
      public Builder clearDireTeamComplete() {
        bitField0_ = (bitField0_ & ~0x01000000);
        direTeamComplete_ = 0;
        onChanged();
        return this;
      }

      private int positiveVotes_ ;
      /**
       * <code>optional uint32 positive_votes = 29;</code>
       */
      public boolean hasPositiveVotes() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional uint32 positive_votes = 29;</code>
       */
      public int getPositiveVotes() {
        return positiveVotes_;
      }
      /**
       * <code>optional uint32 positive_votes = 29;</code>
       */
      public Builder setPositiveVotes(int value) {
        bitField0_ |= 0x02000000;
        positiveVotes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 positive_votes = 29;</code>
       */
      public Builder clearPositiveVotes() {
        bitField0_ = (bitField0_ & ~0x02000000);
        positiveVotes_ = 0;
        onChanged();
        return this;
      }

      private int negativeVotes_ ;
      /**
       * <code>optional uint32 negative_votes = 30;</code>
       */
      public boolean hasNegativeVotes() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional uint32 negative_votes = 30;</code>
       */
      public int getNegativeVotes() {
        return negativeVotes_;
      }
      /**
       * <code>optional uint32 negative_votes = 30;</code>
       */
      public Builder setNegativeVotes(int value) {
        bitField0_ |= 0x04000000;
        negativeVotes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 negative_votes = 30;</code>
       */
      public Builder clearNegativeVotes() {
        bitField0_ = (bitField0_ & ~0x04000000);
        negativeVotes_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode gameMode_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode.DOTA_GAMEMODE_NONE;
      /**
       * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
       */
      public boolean hasGameMode() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode getGameMode() {
        return gameMode_;
      }
      /**
       * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
       */
      public Builder setGameMode(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x08000000;
        gameMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .DOTA_GameMode game_mode = 31 [default = DOTA_GAMEMODE_NONE];</code>
       */
      public Builder clearGameMode() {
        bitField0_ = (bitField0_ & ~0x08000000);
        gameMode_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.DOTA_GameMode.DOTA_GAMEMODE_NONE;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent> picksBans_ =
        java.util.Collections.emptyList();
      private void ensurePicksBansIsMutable() {
        if (!((bitField0_ & 0x10000000) == 0x10000000)) {
          picksBans_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent>(picksBans_);
          bitField0_ |= 0x10000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder> picksBansBuilder_;

      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent> getPicksBansList() {
        if (picksBansBuilder_ == null) {
          return java.util.Collections.unmodifiableList(picksBans_);
        } else {
          return picksBansBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public int getPicksBansCount() {
        if (picksBansBuilder_ == null) {
          return picksBans_.size();
        } else {
          return picksBansBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent getPicksBans(int index) {
        if (picksBansBuilder_ == null) {
          return picksBans_.get(index);
        } else {
          return picksBansBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder setPicksBans(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent value) {
        if (picksBansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePicksBansIsMutable();
          picksBans_.set(index, value);
          onChanged();
        } else {
          picksBansBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder setPicksBans(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder builderForValue) {
        if (picksBansBuilder_ == null) {
          ensurePicksBansIsMutable();
          picksBans_.set(index, builderForValue.build());
          onChanged();
        } else {
          picksBansBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder addPicksBans(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent value) {
        if (picksBansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePicksBansIsMutable();
          picksBans_.add(value);
          onChanged();
        } else {
          picksBansBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder addPicksBans(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent value) {
        if (picksBansBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePicksBansIsMutable();
          picksBans_.add(index, value);
          onChanged();
        } else {
          picksBansBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder addPicksBans(
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder builderForValue) {
        if (picksBansBuilder_ == null) {
          ensurePicksBansIsMutable();
          picksBans_.add(builderForValue.build());
          onChanged();
        } else {
          picksBansBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder addPicksBans(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder builderForValue) {
        if (picksBansBuilder_ == null) {
          ensurePicksBansIsMutable();
          picksBans_.add(index, builderForValue.build());
          onChanged();
        } else {
          picksBansBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder addAllPicksBans(
          java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent> values) {
        if (picksBansBuilder_ == null) {
          ensurePicksBansIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, picksBans_);
          onChanged();
        } else {
          picksBansBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder clearPicksBans() {
        if (picksBansBuilder_ == null) {
          picksBans_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x10000000);
          onChanged();
        } else {
          picksBansBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public Builder removePicksBans(int index) {
        if (picksBansBuilder_ == null) {
          ensurePicksBansIsMutable();
          picksBans_.remove(index);
          onChanged();
        } else {
          picksBansBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder getPicksBansBuilder(
          int index) {
        return getPicksBansFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder getPicksBansOrBuilder(
          int index) {
        if (picksBansBuilder_ == null) {
          return picksBans_.get(index);  } else {
          return picksBansBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder> 
           getPicksBansOrBuilderList() {
        if (picksBansBuilder_ != null) {
          return picksBansBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(picksBans_);
        }
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder addPicksBansBuilder() {
        return getPicksBansFieldBuilder().addBuilder(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder addPicksBansBuilder(
          int index) {
        return getPicksBansFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .CMatchHeroSelectEvent picks_bans = 32;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder> 
           getPicksBansBuilderList() {
        return getPicksBansFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder> 
          getPicksBansFieldBuilder() {
        if (picksBansBuilder_ == null) {
          picksBansBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEvent.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMatchHeroSelectEventOrBuilder>(
                  picksBans_,
                  ((bitField0_ & 0x10000000) == 0x10000000),
                  getParentForChildren(),
                  isClean());
          picksBans_ = null;
        }
        return picksBansBuilder_;
      }

      private long matchSeqNum_ ;
      /**
       * <code>optional uint64 match_seq_num = 33;</code>
       */
      public boolean hasMatchSeqNum() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional uint64 match_seq_num = 33;</code>
       */
      public long getMatchSeqNum() {
        return matchSeqNum_;
      }
      /**
       * <code>optional uint64 match_seq_num = 33;</code>
       */
      public Builder setMatchSeqNum(long value) {
        bitField0_ |= 0x20000000;
        matchSeqNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 match_seq_num = 33;</code>
       */
      public Builder clearMatchSeqNum() {
        bitField0_ = (bitField0_ & ~0x20000000);
        matchSeqNum_ = 0L;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState replayState_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState.REPLAY_AVAILABLE;
      /**
       * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
       */
      public boolean hasReplayState() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState getReplayState() {
        return replayState_;
      }
      /**
       * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
       */
      public Builder setReplayState(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x40000000;
        replayState_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .CMsgDOTAMatch.ReplayState replay_state = 34 [default = REPLAY_AVAILABLE];</code>
       */
      public Builder clearReplayState() {
        bitField0_ = (bitField0_ & ~0x40000000);
        replayState_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.ReplayState.REPLAY_AVAILABLE;
        onChanged();
        return this;
      }

      private int radiantGuildId_ ;
      /**
       * <code>optional uint32 radiant_guild_id = 35;</code>
       */
      public boolean hasRadiantGuildId() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional uint32 radiant_guild_id = 35;</code>
       */
      public int getRadiantGuildId() {
        return radiantGuildId_;
      }
      /**
       * <code>optional uint32 radiant_guild_id = 35;</code>
       */
      public Builder setRadiantGuildId(int value) {
        bitField0_ |= 0x80000000;
        radiantGuildId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 radiant_guild_id = 35;</code>
       */
      public Builder clearRadiantGuildId() {
        bitField0_ = (bitField0_ & ~0x80000000);
        radiantGuildId_ = 0;
        onChanged();
        return this;
      }

      private int direGuildId_ ;
      /**
       * <code>optional uint32 dire_guild_id = 36;</code>
       */
      public boolean hasDireGuildId() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 dire_guild_id = 36;</code>
       */
      public int getDireGuildId() {
        return direGuildId_;
      }
      /**
       * <code>optional uint32 dire_guild_id = 36;</code>
       */
      public Builder setDireGuildId(int value) {
        bitField1_ |= 0x00000001;
        direGuildId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dire_guild_id = 36;</code>
       */
      public Builder clearDireGuildId() {
        bitField1_ = (bitField1_ & ~0x00000001);
        direGuildId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object radiantTeamTag_ = "";
      /**
       * <code>optional string radiant_team_tag = 37;</code>
       */
      public boolean hasRadiantTeamTag() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string radiant_team_tag = 37;</code>
       */
      public java.lang.String getRadiantTeamTag() {
        java.lang.Object ref = radiantTeamTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            radiantTeamTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string radiant_team_tag = 37;</code>
       */
      public com.google.protobuf.ByteString
          getRadiantTeamTagBytes() {
        java.lang.Object ref = radiantTeamTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          radiantTeamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string radiant_team_tag = 37;</code>
       */
      public Builder setRadiantTeamTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
        radiantTeamTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string radiant_team_tag = 37;</code>
       */
      public Builder clearRadiantTeamTag() {
        bitField1_ = (bitField1_ & ~0x00000002);
        radiantTeamTag_ = getDefaultInstance().getRadiantTeamTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string radiant_team_tag = 37;</code>
       */
      public Builder setRadiantTeamTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
        radiantTeamTag_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object direTeamTag_ = "";
      /**
       * <code>optional string dire_team_tag = 38;</code>
       */
      public boolean hasDireTeamTag() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string dire_team_tag = 38;</code>
       */
      public java.lang.String getDireTeamTag() {
        java.lang.Object ref = direTeamTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            direTeamTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dire_team_tag = 38;</code>
       */
      public com.google.protobuf.ByteString
          getDireTeamTagBytes() {
        java.lang.Object ref = direTeamTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          direTeamTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dire_team_tag = 38;</code>
       */
      public Builder setDireTeamTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
        direTeamTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dire_team_tag = 38;</code>
       */
      public Builder clearDireTeamTag() {
        bitField1_ = (bitField1_ & ~0x00000004);
        direTeamTag_ = getDefaultInstance().getDireTeamTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dire_team_tag = 38;</code>
       */
      public Builder setDireTeamTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
        direTeamTag_ = value;
        onChanged();
        return this;
      }

      private int seriesId_ ;
      /**
       * <code>optional uint32 series_id = 39;</code>
       */
      public boolean hasSeriesId() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 series_id = 39;</code>
       */
      public int getSeriesId() {
        return seriesId_;
      }
      /**
       * <code>optional uint32 series_id = 39;</code>
       */
      public Builder setSeriesId(int value) {
        bitField1_ |= 0x00000008;
        seriesId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 series_id = 39;</code>
       */
      public Builder clearSeriesId() {
        bitField1_ = (bitField1_ & ~0x00000008);
        seriesId_ = 0;
        onChanged();
        return this;
      }

      private int seriesType_ ;
      /**
       * <code>optional uint32 series_type = 40;</code>
       */
      public boolean hasSeriesType() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 series_type = 40;</code>
       */
      public int getSeriesType() {
        return seriesType_;
      }
      /**
       * <code>optional uint32 series_type = 40;</code>
       */
      public Builder setSeriesType(int value) {
        bitField1_ |= 0x00000010;
        seriesType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 series_type = 40;</code>
       */
      public Builder clearSeriesType() {
        bitField1_ = (bitField1_ & ~0x00000010);
        seriesType_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel> broadcasterChannels_ =
        java.util.Collections.emptyList();
      private void ensureBroadcasterChannelsIsMutable() {
        if (!((bitField1_ & 0x00000020) == 0x00000020)) {
          broadcasterChannels_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel>(broadcasterChannels_);
          bitField1_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder> broadcasterChannelsBuilder_;

      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel> getBroadcasterChannelsList() {
        if (broadcasterChannelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(broadcasterChannels_);
        } else {
          return broadcasterChannelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public int getBroadcasterChannelsCount() {
        if (broadcasterChannelsBuilder_ == null) {
          return broadcasterChannels_.size();
        } else {
          return broadcasterChannelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel getBroadcasterChannels(int index) {
        if (broadcasterChannelsBuilder_ == null) {
          return broadcasterChannels_.get(index);
        } else {
          return broadcasterChannelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder setBroadcasterChannels(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel value) {
        if (broadcasterChannelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.set(index, value);
          onChanged();
        } else {
          broadcasterChannelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder setBroadcasterChannels(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder builderForValue) {
        if (broadcasterChannelsBuilder_ == null) {
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.set(index, builderForValue.build());
          onChanged();
        } else {
          broadcasterChannelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder addBroadcasterChannels(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel value) {
        if (broadcasterChannelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.add(value);
          onChanged();
        } else {
          broadcasterChannelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder addBroadcasterChannels(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel value) {
        if (broadcasterChannelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.add(index, value);
          onChanged();
        } else {
          broadcasterChannelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder addBroadcasterChannels(
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder builderForValue) {
        if (broadcasterChannelsBuilder_ == null) {
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.add(builderForValue.build());
          onChanged();
        } else {
          broadcasterChannelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder addBroadcasterChannels(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder builderForValue) {
        if (broadcasterChannelsBuilder_ == null) {
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.add(index, builderForValue.build());
          onChanged();
        } else {
          broadcasterChannelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder addAllBroadcasterChannels(
          java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel> values) {
        if (broadcasterChannelsBuilder_ == null) {
          ensureBroadcasterChannelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, broadcasterChannels_);
          onChanged();
        } else {
          broadcasterChannelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder clearBroadcasterChannels() {
        if (broadcasterChannelsBuilder_ == null) {
          broadcasterChannels_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000020);
          onChanged();
        } else {
          broadcasterChannelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public Builder removeBroadcasterChannels(int index) {
        if (broadcasterChannelsBuilder_ == null) {
          ensureBroadcasterChannelsIsMutable();
          broadcasterChannels_.remove(index);
          onChanged();
        } else {
          broadcasterChannelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder getBroadcasterChannelsBuilder(
          int index) {
        return getBroadcasterChannelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder getBroadcasterChannelsOrBuilder(
          int index) {
        if (broadcasterChannelsBuilder_ == null) {
          return broadcasterChannels_.get(index);  } else {
          return broadcasterChannelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder> 
           getBroadcasterChannelsOrBuilderList() {
        if (broadcasterChannelsBuilder_ != null) {
          return broadcasterChannelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(broadcasterChannels_);
        }
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder addBroadcasterChannelsBuilder() {
        return getBroadcasterChannelsFieldBuilder().addBuilder(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder addBroadcasterChannelsBuilder(
          int index) {
        return getBroadcasterChannelsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgDOTAMatch.BroadcasterChannel broadcaster_channels = 43;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder> 
           getBroadcasterChannelsBuilderList() {
        return getBroadcasterChannelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder> 
          getBroadcasterChannelsFieldBuilder() {
        if (broadcasterChannelsBuilder_ == null) {
          broadcasterChannelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannel.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.BroadcasterChannelOrBuilder>(
                  broadcasterChannels_,
                  ((bitField1_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          broadcasterChannels_ = null;
        }
        return broadcasterChannelsBuilder_;
      }

      private int engine_ ;
      /**
       * <code>optional uint32 engine = 44;</code>
       */
      public boolean hasEngine() {
        return ((bitField1_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 engine = 44;</code>
       */
      public int getEngine() {
        return engine_;
      }
      /**
       * <code>optional uint32 engine = 44;</code>
       */
      public Builder setEngine(int value) {
        bitField1_ |= 0x00000040;
        engine_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 engine = 44;</code>
       */
      public Builder clearEngine() {
        bitField1_ = (bitField1_ & ~0x00000040);
        engine_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder> customGameDataBuilder_;
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public boolean hasCustomGameData() {
        return ((bitField1_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData getCustomGameData() {
        if (customGameDataBuilder_ == null) {
          return customGameData_;
        } else {
          return customGameDataBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public Builder setCustomGameData(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData value) {
        if (customGameDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          customGameData_ = value;
          onChanged();
        } else {
          customGameDataBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public Builder setCustomGameData(
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder builderForValue) {
        if (customGameDataBuilder_ == null) {
          customGameData_ = builderForValue.build();
          onChanged();
        } else {
          customGameDataBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public Builder mergeCustomGameData(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData value) {
        if (customGameDataBuilder_ == null) {
          if (((bitField1_ & 0x00000080) == 0x00000080) &&
              customGameData_ != skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance()) {
            customGameData_ =
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.newBuilder(customGameData_).mergeFrom(value).buildPartial();
          } else {
            customGameData_ = value;
          }
          onChanged();
        } else {
          customGameDataBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public Builder clearCustomGameData() {
        if (customGameDataBuilder_ == null) {
          customGameData_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.getDefaultInstance();
          onChanged();
        } else {
          customGameDataBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder getCustomGameDataBuilder() {
        bitField1_ |= 0x00000080;
        onChanged();
        return getCustomGameDataFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder getCustomGameDataOrBuilder() {
        if (customGameDataBuilder_ != null) {
          return customGameDataBuilder_.getMessageOrBuilder();
        } else {
          return customGameData_;
        }
      }
      /**
       * <code>optional .CMsgDOTAMatch.CustomGameData custom_game_data = 45;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder> 
          getCustomGameDataFieldBuilder() {
        if (customGameDataBuilder_ == null) {
          customGameDataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameData.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgDOTAMatch.CustomGameDataOrBuilder>(
                  getCustomGameData(),
                  getParentForChildren(),
                  isClean());
          customGameData_ = null;
        }
        return customGameDataBuilder_;
      }

      private int matchFlags_ ;
      /**
       * <code>optional uint32 match_flags = 46;</code>
       */
      public boolean hasMatchFlags() {
        return ((bitField1_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 match_flags = 46;</code>
       */
      public int getMatchFlags() {
        return matchFlags_;
      }
      /**
       * <code>optional uint32 match_flags = 46;</code>
       */
      public Builder setMatchFlags(int value) {
        bitField1_ |= 0x00000100;
        matchFlags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 match_flags = 46;</code>
       */
      public Builder clearMatchFlags() {
        bitField1_ = (bitField1_ & ~0x00000100);
        matchFlags_ = 0;
        onChanged();
        return this;
      }

      private int privateMetadataKey_ ;
      /**
       * <code>optional fixed32 private_metadata_key = 47;</code>
       */
      public boolean hasPrivateMetadataKey() {
        return ((bitField1_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional fixed32 private_metadata_key = 47;</code>
       */
      public int getPrivateMetadataKey() {
        return privateMetadataKey_;
      }
      /**
       * <code>optional fixed32 private_metadata_key = 47;</code>
       */
      public Builder setPrivateMetadataKey(int value) {
        bitField1_ |= 0x00000200;
        privateMetadataKey_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional fixed32 private_metadata_key = 47;</code>
       */
      public Builder clearPrivateMetadataKey() {
        bitField1_ = (bitField1_ & ~0x00000200);
        privateMetadataKey_ = 0;
        onChanged();
        return this;
      }

      private int radiantTeamScore_ ;
      /**
       * <code>optional uint32 radiant_team_score = 48;</code>
       */
      public boolean hasRadiantTeamScore() {
        return ((bitField1_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 radiant_team_score = 48;</code>
       */
      public int getRadiantTeamScore() {
        return radiantTeamScore_;
      }
      /**
       * <code>optional uint32 radiant_team_score = 48;</code>
       */
      public Builder setRadiantTeamScore(int value) {
        bitField1_ |= 0x00000400;
        radiantTeamScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 radiant_team_score = 48;</code>
       */
      public Builder clearRadiantTeamScore() {
        bitField1_ = (bitField1_ & ~0x00000400);
        radiantTeamScore_ = 0;
        onChanged();
        return this;
      }

      private int direTeamScore_ ;
      /**
       * <code>optional uint32 dire_team_score = 49;</code>
       */
      public boolean hasDireTeamScore() {
        return ((bitField1_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 dire_team_score = 49;</code>
       */
      public int getDireTeamScore() {
        return direTeamScore_;
      }
      /**
       * <code>optional uint32 dire_team_score = 49;</code>
       */
      public Builder setDireTeamScore(int value) {
        bitField1_ |= 0x00000800;
        direTeamScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 dire_team_score = 49;</code>
       */
      public Builder clearDireTeamScore() {
        bitField1_ = (bitField1_ & ~0x00000800);
        direTeamScore_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome matchOutcome_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
      /**
       * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
       */
      public boolean hasMatchOutcome() {
        return ((bitField1_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome getMatchOutcome() {
        return matchOutcome_;
      }
      /**
       * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
       */
      public Builder setMatchOutcome(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField1_ |= 0x00001000;
        matchOutcome_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EMatchOutcome match_outcome = 50 [default = k_EMatchOutcome_Unknown];</code>
       */
      public Builder clearMatchOutcome() {
        bitField1_ = (bitField1_ & ~0x00001000);
        matchOutcome_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EMatchOutcome.k_EMatchOutcome_Unknown;
        onChanged();
        return this;
      }

      private int tournamentId_ ;
      /**
       * <code>optional uint32 tournament_id = 51;</code>
       */
      public boolean hasTournamentId() {
        return ((bitField1_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 tournament_id = 51;</code>
       */
      public int getTournamentId() {
        return tournamentId_;
      }
      /**
       * <code>optional uint32 tournament_id = 51;</code>
       */
      public Builder setTournamentId(int value) {
        bitField1_ |= 0x00002000;
        tournamentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_id = 51;</code>
       */
      public Builder clearTournamentId() {
        bitField1_ = (bitField1_ & ~0x00002000);
        tournamentId_ = 0;
        onChanged();
        return this;
      }

      private int tournamentRound_ ;
      /**
       * <code>optional uint32 tournament_round = 52;</code>
       */
      public boolean hasTournamentRound() {
        return ((bitField1_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 tournament_round = 52;</code>
       */
      public int getTournamentRound() {
        return tournamentRound_;
      }
      /**
       * <code>optional uint32 tournament_round = 52;</code>
       */
      public Builder setTournamentRound(int value) {
        bitField1_ |= 0x00004000;
        tournamentRound_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tournament_round = 52;</code>
       */
      public Builder clearTournamentRound() {
        bitField1_ = (bitField1_ & ~0x00004000);
        tournamentRound_ = 0;
        onChanged();
        return this;
      }

      private int preGameDuration_ ;
      /**
       * <code>optional uint32 pre_game_duration = 53;</code>
       */
      public boolean hasPreGameDuration() {
        return ((bitField1_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 pre_game_duration = 53;</code>
       */
      public int getPreGameDuration() {
        return preGameDuration_;
      }
      /**
       * <code>optional uint32 pre_game_duration = 53;</code>
       */
      public Builder setPreGameDuration(int value) {
        bitField1_ |= 0x00008000;
        preGameDuration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pre_game_duration = 53;</code>
       */
      public Builder clearPreGameDuration() {
        bitField1_ = (bitField1_ & ~0x00008000);
        preGameDuration_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgDOTAMatch)
    }

    static {
      defaultInstance = new CMsgDOTAMatch(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgDOTAMatch)
  }

  public interface CMsgMatchTipsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgMatchTips)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     */
    boolean hasEventId();
    /**
     * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent getEventId();

    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip> 
        getTipsList();
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip getTips(int index);
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    int getTipsCount();
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder> 
        getTipsOrBuilderList();
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder getTipsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMsgMatchTips}
   */
  public static final class CMsgMatchTips extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgMatchTips)
      CMsgMatchTipsOrBuilder {
    // Use CMsgMatchTips.newBuilder() to construct.
    private CMsgMatchTips(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgMatchTips(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgMatchTips defaultInstance;
    public static CMsgMatchTips getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgMatchTips getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgMatchTips(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent value = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                eventId_ = value;
              }
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tips_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip>();
                mutable_bitField0_ |= 0x00000002;
              }
              tips_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tips_ = java.util.Collections.unmodifiableList(tips_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgMatchTips> PARSER =
        new com.google.protobuf.AbstractParser<CMsgMatchTips>() {
      public CMsgMatchTips parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgMatchTips(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgMatchTips> getParserForType() {
      return PARSER;
    }

    public interface SingleTipOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgMatchTips.SingleTip)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 source_account_id = 1;</code>
       */
      boolean hasSourceAccountId();
      /**
       * <code>optional uint32 source_account_id = 1;</code>
       */
      int getSourceAccountId();

      /**
       * <code>optional uint32 target_account_id = 2;</code>
       */
      boolean hasTargetAccountId();
      /**
       * <code>optional uint32 target_account_id = 2;</code>
       */
      int getTargetAccountId();

      /**
       * <code>optional uint32 tip_amount = 3;</code>
       */
      boolean hasTipAmount();
      /**
       * <code>optional uint32 tip_amount = 3;</code>
       */
      int getTipAmount();
    }
    /**
     * Protobuf type {@code CMsgMatchTips.SingleTip}
     */
    public static final class SingleTip extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgMatchTips.SingleTip)
        SingleTipOrBuilder {
      // Use SingleTip.newBuilder() to construct.
      private SingleTip(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private SingleTip(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final SingleTip defaultInstance;
      public static SingleTip getDefaultInstance() {
        return defaultInstance;
      }

      public SingleTip getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private SingleTip(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                sourceAccountId_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                targetAccountId_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                tipAmount_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_SingleTip_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_SingleTip_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder.class);
      }

      public static com.google.protobuf.Parser<SingleTip> PARSER =
          new com.google.protobuf.AbstractParser<SingleTip>() {
        public SingleTip parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SingleTip(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<SingleTip> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SOURCE_ACCOUNT_ID_FIELD_NUMBER = 1;
      private int sourceAccountId_;
      /**
       * <code>optional uint32 source_account_id = 1;</code>
       */
      public boolean hasSourceAccountId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 source_account_id = 1;</code>
       */
      public int getSourceAccountId() {
        return sourceAccountId_;
      }

      public static final int TARGET_ACCOUNT_ID_FIELD_NUMBER = 2;
      private int targetAccountId_;
      /**
       * <code>optional uint32 target_account_id = 2;</code>
       */
      public boolean hasTargetAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 target_account_id = 2;</code>
       */
      public int getTargetAccountId() {
        return targetAccountId_;
      }

      public static final int TIP_AMOUNT_FIELD_NUMBER = 3;
      private int tipAmount_;
      /**
       * <code>optional uint32 tip_amount = 3;</code>
       */
      public boolean hasTipAmount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 tip_amount = 3;</code>
       */
      public int getTipAmount() {
        return tipAmount_;
      }

      private void initFields() {
        sourceAccountId_ = 0;
        targetAccountId_ = 0;
        tipAmount_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, sourceAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, targetAccountId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, tipAmount_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, sourceAccountId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, targetAccountId_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, tipAmount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgMatchTips.SingleTip}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgMatchTips.SingleTip)
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_SingleTip_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_SingleTip_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder.class);
        }

        // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sourceAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          targetAccountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          tipAmount_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_SingleTip_descriptor;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip getDefaultInstanceForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.getDefaultInstance();
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip build() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip buildPartial() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sourceAccountId_ = sourceAccountId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.targetAccountId_ = targetAccountId_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.tipAmount_ = tipAmount_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip) {
            return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip other) {
          if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.getDefaultInstance()) return this;
          if (other.hasSourceAccountId()) {
            setSourceAccountId(other.getSourceAccountId());
          }
          if (other.hasTargetAccountId()) {
            setTargetAccountId(other.getTargetAccountId());
          }
          if (other.hasTipAmount()) {
            setTipAmount(other.getTipAmount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int sourceAccountId_ ;
        /**
         * <code>optional uint32 source_account_id = 1;</code>
         */
        public boolean hasSourceAccountId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 source_account_id = 1;</code>
         */
        public int getSourceAccountId() {
          return sourceAccountId_;
        }
        /**
         * <code>optional uint32 source_account_id = 1;</code>
         */
        public Builder setSourceAccountId(int value) {
          bitField0_ |= 0x00000001;
          sourceAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 source_account_id = 1;</code>
         */
        public Builder clearSourceAccountId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sourceAccountId_ = 0;
          onChanged();
          return this;
        }

        private int targetAccountId_ ;
        /**
         * <code>optional uint32 target_account_id = 2;</code>
         */
        public boolean hasTargetAccountId() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 target_account_id = 2;</code>
         */
        public int getTargetAccountId() {
          return targetAccountId_;
        }
        /**
         * <code>optional uint32 target_account_id = 2;</code>
         */
        public Builder setTargetAccountId(int value) {
          bitField0_ |= 0x00000002;
          targetAccountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 target_account_id = 2;</code>
         */
        public Builder clearTargetAccountId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          targetAccountId_ = 0;
          onChanged();
          return this;
        }

        private int tipAmount_ ;
        /**
         * <code>optional uint32 tip_amount = 3;</code>
         */
        public boolean hasTipAmount() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 tip_amount = 3;</code>
         */
        public int getTipAmount() {
          return tipAmount_;
        }
        /**
         * <code>optional uint32 tip_amount = 3;</code>
         */
        public Builder setTipAmount(int value) {
          bitField0_ |= 0x00000004;
          tipAmount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 tip_amount = 3;</code>
         */
        public Builder clearTipAmount() {
          bitField0_ = (bitField0_ & ~0x00000004);
          tipAmount_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgMatchTips.SingleTip)
      }

      static {
        defaultInstance = new SingleTip(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgMatchTips.SingleTip)
    }

    private int bitField0_;
    public static final int EVENT_ID_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent eventId_;
    /**
     * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     */
    public boolean hasEventId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent getEventId() {
      return eventId_;
    }

    public static final int TIPS_FIELD_NUMBER = 2;
    private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip> tips_;
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip> getTipsList() {
      return tips_;
    }
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder> 
        getTipsOrBuilderList() {
      return tips_;
    }
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    public int getTipsCount() {
      return tips_.size();
    }
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip getTips(int index) {
      return tips_.get(index);
    }
    /**
     * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder getTipsOrBuilder(
        int index) {
      return tips_.get(index);
    }

    private void initFields() {
      eventId_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent.EVENT_ID_NONE;
      tips_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, eventId_.getNumber());
      }
      for (int i = 0; i < tips_.size(); i++) {
        output.writeMessage(2, tips_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventId_.getNumber());
      }
      for (int i = 0; i < tips_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, tips_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgMatchTips}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgMatchTips)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTipsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTipsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        eventId_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent.EVENT_ID_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tipsBuilder_ == null) {
          tips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          tipsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.internal_static_CMsgMatchTips_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventId_ = eventId_;
        if (tipsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            tips_ = java.util.Collections.unmodifiableList(tips_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.tips_ = tips_;
        } else {
          result.tips_ = tipsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.getDefaultInstance()) return this;
        if (other.hasEventId()) {
          setEventId(other.getEventId());
        }
        if (tipsBuilder_ == null) {
          if (!other.tips_.isEmpty()) {
            if (tips_.isEmpty()) {
              tips_ = other.tips_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTipsIsMutable();
              tips_.addAll(other.tips_);
            }
            onChanged();
          }
        } else {
          if (!other.tips_.isEmpty()) {
            if (tipsBuilder_.isEmpty()) {
              tipsBuilder_.dispose();
              tipsBuilder_ = null;
              tips_ = other.tips_;
              bitField0_ = (bitField0_ & ~0x00000002);
              tipsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTipsFieldBuilder() : null;
            } else {
              tipsBuilder_.addAllMessages(other.tips_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent eventId_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent.EVENT_ID_NONE;
      /**
       * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       */
      public boolean hasEventId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent getEventId() {
        return eventId_;
      }
      /**
       * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       */
      public Builder setEventId(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EEvent event_id = 1 [default = EVENT_ID_NONE];</code>
       */
      public Builder clearEventId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventId_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.EEvent.EVENT_ID_NONE;
        onChanged();
        return this;
      }

      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip> tips_ =
        java.util.Collections.emptyList();
      private void ensureTipsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tips_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip>(tips_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder> tipsBuilder_;

      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip> getTipsList() {
        if (tipsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tips_);
        } else {
          return tipsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public int getTipsCount() {
        if (tipsBuilder_ == null) {
          return tips_.size();
        } else {
          return tipsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip getTips(int index) {
        if (tipsBuilder_ == null) {
          return tips_.get(index);
        } else {
          return tipsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder setTips(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip value) {
        if (tipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTipsIsMutable();
          tips_.set(index, value);
          onChanged();
        } else {
          tipsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder setTips(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder builderForValue) {
        if (tipsBuilder_ == null) {
          ensureTipsIsMutable();
          tips_.set(index, builderForValue.build());
          onChanged();
        } else {
          tipsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder addTips(skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip value) {
        if (tipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTipsIsMutable();
          tips_.add(value);
          onChanged();
        } else {
          tipsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder addTips(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip value) {
        if (tipsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTipsIsMutable();
          tips_.add(index, value);
          onChanged();
        } else {
          tipsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder addTips(
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder builderForValue) {
        if (tipsBuilder_ == null) {
          ensureTipsIsMutable();
          tips_.add(builderForValue.build());
          onChanged();
        } else {
          tipsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder addTips(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder builderForValue) {
        if (tipsBuilder_ == null) {
          ensureTipsIsMutable();
          tips_.add(index, builderForValue.build());
          onChanged();
        } else {
          tipsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder addAllTips(
          java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip> values) {
        if (tipsBuilder_ == null) {
          ensureTipsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tips_);
          onChanged();
        } else {
          tipsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder clearTips() {
        if (tipsBuilder_ == null) {
          tips_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          tipsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public Builder removeTips(int index) {
        if (tipsBuilder_ == null) {
          ensureTipsIsMutable();
          tips_.remove(index);
          onChanged();
        } else {
          tipsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder getTipsBuilder(
          int index) {
        return getTipsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder getTipsOrBuilder(
          int index) {
        if (tipsBuilder_ == null) {
          return tips_.get(index);  } else {
          return tipsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder> 
           getTipsOrBuilderList() {
        if (tipsBuilder_ != null) {
          return tipsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tips_);
        }
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder addTipsBuilder() {
        return getTipsFieldBuilder().addBuilder(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder addTipsBuilder(
          int index) {
        return getTipsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgMatchTips.SingleTip tips = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder> 
           getTipsBuilderList() {
        return getTipsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder> 
          getTipsFieldBuilder() {
        if (tipsBuilder_ == null) {
          tipsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTip.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcCommon.CMsgMatchTips.SingleTipOrBuilder>(
                  tips_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          tips_ = null;
        }
        return tipsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMsgMatchTips)
    }

    static {
      defaultInstance = new CMsgMatchTips(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgMatchTips)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchPlayerAbilityUpgrade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchAdditionalUnitInventory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchPlayerPermanentBuff_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchPlayerPermanentBuff_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMatchHeroSelectEvent_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMatchHeroSelectEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAMatch_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAMatch_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAMatch_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAMatch_Player_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAMatch_Player_CustomGameData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAMatch_Player_CustomGameData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAMatch_BroadcasterInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAMatch_BroadcasterInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAMatch_BroadcasterChannel_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAMatch_BroadcasterChannel_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgDOTAMatch_CustomGameData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgDOTAMatch_CustomGameData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgMatchTips_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgMatchTips_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgMatchTips_SingleTip_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgMatchTips_SingleTip_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037s2_dota_gcmessages_common.proto\";\n\032CMa" +
      "tchPlayerAbilityUpgrade\022\017\n\007ability\030\001 \001(\r" +
      "\022\014\n\004time\030\002 \001(\r\"A\n\035CMatchAdditionalUnitIn" +
      "ventory\022\021\n\tunit_name\030\001 \001(\t\022\r\n\005items\030\002 \003(" +
      "\005\"H\n\031CMatchPlayerPermanentBuff\022\026\n\016perman" +
      "ent_buff\030\001 \001(\r\022\023\n\013stack_count\030\002 \001(\r\"G\n\025C" +
      "MatchHeroSelectEvent\022\017\n\007is_pick\030\001 \001(\010\022\014\n" +
      "\004team\030\002 \001(\r\022\017\n\007hero_id\030\003 \001(\r\"\335\031\n\rCMsgDOT" +
      "AMatch\022\025\n\rgood_guys_win\030\002 \001(\010\022\020\n\010duratio" +
      "n\030\003 \001(\r\022\021\n\tstartTime\030\004 \001(\007\022&\n\007players\030\005 ",
      "\003(\0132\025.CMsgDOTAMatch.Player\022\020\n\010match_id\030\006" +
      " \001(\004\022\024\n\014tower_status\030\010 \003(\r\022\027\n\017barracks_s" +
      "tatus\030\t \003(\r\022\017\n\007cluster\030\n \001(\r\022\030\n\020first_bl" +
      "ood_time\030\014 \001(\r\022\023\n\013replay_salt\030\r \001(\007\022\021\n\ts" +
      "erver_ip\030\016 \001(\007\022\023\n\013server_port\030\017 \001(\r\022\022\n\nl" +
      "obby_type\030\020 \001(\r\022\025\n\rhuman_players\030\021 \001(\r\022\025" +
      "\n\raverage_skill\030\022 \001(\r\022\024\n\014game_balance\030\023 " +
      "\001(\002\022\027\n\017radiant_team_id\030\024 \001(\r\022\024\n\014dire_tea" +
      "m_id\030\025 \001(\r\022\020\n\010leagueid\030\026 \001(\r\022\031\n\021radiant_" +
      "team_name\030\027 \001(\t\022\026\n\016dire_team_name\030\030 \001(\t\022",
      "\031\n\021radiant_team_logo\030\031 \001(\004\022\026\n\016dire_team_" +
      "logo\030\032 \001(\004\022\035\n\025radiant_team_complete\030\033 \001(" +
      "\r\022\032\n\022dire_team_complete\030\034 \001(\r\022\026\n\016positiv" +
      "e_votes\030\035 \001(\r\022\026\n\016negative_votes\030\036 \001(\r\0225\n" +
      "\tgame_mode\030\037 \001(\0162\016.DOTA_GameMode:\022DOTA_G" +
      "AMEMODE_NONE\022*\n\npicks_bans\030  \003(\0132\026.CMatc" +
      "hHeroSelectEvent\022\025\n\rmatch_seq_num\030! \001(\004\022" +
      "B\n\014replay_state\030\" \001(\0162\032.CMsgDOTAMatch.Re" +
      "playState:\020REPLAY_AVAILABLE\022\030\n\020radiant_g" +
      "uild_id\030# \001(\r\022\025\n\rdire_guild_id\030$ \001(\r\022\030\n\020",
      "radiant_team_tag\030% \001(\t\022\025\n\rdire_team_tag\030" +
      "& \001(\t\022\021\n\tseries_id\030\' \001(\r\022\023\n\013series_type\030" +
      "( \001(\r\022?\n\024broadcaster_channels\030+ \003(\0132!.CM" +
      "sgDOTAMatch.BroadcasterChannel\022\016\n\006engine" +
      "\030, \001(\r\0227\n\020custom_game_data\030- \001(\0132\035.CMsgD" +
      "OTAMatch.CustomGameData\022\023\n\013match_flags\030." +
      " \001(\r\022\034\n\024private_metadata_key\030/ \001(\007\022\032\n\022ra" +
      "diant_team_score\0300 \001(\r\022\027\n\017dire_team_scor" +
      "e\0301 \001(\r\022>\n\rmatch_outcome\0302 \001(\0162\016.EMatchO" +
      "utcome:\027k_EMatchOutcome_Unknown\022\025\n\rtourn",
      "ament_id\0303 \001(\r\022\030\n\020tournament_round\0304 \001(\r" +
      "\022\031\n\021pre_game_duration\0305 \001(\r\032\267\014\n\006Player\022\022" +
      "\n\naccount_id\030\001 \001(\r\022\023\n\013player_slot\030\002 \001(\r\022" +
      "\017\n\007hero_id\030\003 \001(\r\022\016\n\006item_0\030\004 \001(\005\022\016\n\006item" +
      "_1\030\005 \001(\005\022\016\n\006item_2\030\006 \001(\005\022\016\n\006item_3\030\007 \001(\005" +
      "\022\016\n\006item_4\030\010 \001(\005\022\016\n\006item_5\030\t \001(\005\022\016\n\006item" +
      "_6\030; \001(\005\022\016\n\006item_7\030< \001(\005\022\016\n\006item_8\030= \001(\005" +
      "\022\"\n\032expected_team_contribution\030\n \001(\002\022\025\n\r" +
      "scaled_metric\030\013 \001(\002\022\025\n\rprevious_rank\030\014 \001" +
      "(\r\022\023\n\013rank_change\030\r \001(\021\022\021\n\tsolo_rank\0301 \001",
      "(\010\022\025\n\rseasonal_rank\0305 \001(\010\022\031\n\021rank_tier_u" +
      "pdated\030B \001(\010\022\r\n\005kills\030\016 \001(\r\022\016\n\006deaths\030\017 " +
      "\001(\r\022\017\n\007assists\030\020 \001(\r\022\025\n\rleaver_status\030\021 " +
      "\001(\r\022\014\n\004gold\030\022 \001(\r\022\021\n\tlast_hits\030\023 \001(\r\022\016\n\006" +
      "denies\030\024 \001(\r\022\024\n\014gold_per_min\030\025 \001(\r\022\022\n\nXP" +
      "_per_min\030\026 \001(\r\022\022\n\ngold_spent\030\027 \001(\r\022\023\n\013he" +
      "ro_damage\030\030 \001(\r\022\024\n\014tower_damage\030\031 \001(\r\022\024\n" +
      "\014hero_healing\030\032 \001(\r\022\r\n\005level\030\033 \001(\r\022\026\n\016ti" +
      "me_last_seen\030\034 \001(\r\022\023\n\013player_name\030\035 \001(\t\022" +
      "\035\n\025support_ability_value\030\036 \001(\r\022\030\n\020feedin",
      "g_detected\030  \001(\010\022\023\n\013search_rank\030\" \001(\r\022\037\n" +
      "\027search_rank_uncertainty\030# \001(\r\022\037\n\027rank_u" +
      "ncertainty_change\030$ \001(\005\022\027\n\017hero_play_cou" +
      "nt\030% \001(\r\022\020\n\010party_id\030& \001(\006\022\032\n\022scaled_her" +
      "o_damage\0306 \001(\r\022\033\n\023scaled_tower_damage\0307 " +
      "\001(\r\022\033\n\023scaled_hero_healing\0308 \001(\r\022\024\n\014scal" +
      "ed_kills\030\' \001(\002\022\025\n\rscaled_deaths\030( \001(\002\022\026\n" +
      "\016scaled_assists\030) \001(\002\022\031\n\021claimed_farm_go" +
      "ld\030* \001(\r\022\024\n\014support_gold\030+ \001(\r\022\026\n\016claime" +
      "d_denies\030, \001(\r\022\026\n\016claimed_misses\030- \001(\r\022\016",
      "\n\006misses\030. \001(\r\0225\n\020ability_upgrades\030/ \003(\013" +
      "2\033.CMatchPlayerAbilityUpgrade\022B\n\032additio" +
      "nal_units_inventory\0300 \003(\0132\036.CMatchAdditi" +
      "onalUnitInventory\0223\n\017permanent_buffs\0309 \003" +
      "(\0132\032.CMatchPlayerPermanentBuff\022>\n\020custom" +
      "_game_data\0302 \001(\0132$.CMsgDOTAMatch.Player." +
      "CustomGameData\022!\n\031active_prime_subscript" +
      "ion\0303 \001(\010\022\021\n\tnet_worth\0304 \001(\r\022\026\n\016bot_diff" +
      "iculty\030: \001(\r\022\027\n\017hero_pick_order\030? \001(\r\022\031\n" +
      "\021hero_was_randomed\030@ \001(\010\022\026\n\016hero_was_bon",
      "us\030A \001(\010\0323\n\016CustomGameData\022\021\n\tdota_team\030" +
      "\001 \001(\r\022\016\n\006winner\030\002 \001(\010\0323\n\017BroadcasterInfo" +
      "\022\022\n\naccount_id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\032\221\001\n\022B" +
      "roadcasterChannel\022\024\n\014country_code\030\001 \001(\t\022" +
      "\023\n\013description\030\002 \001(\t\0229\n\021broadcaster_info" +
      "s\030\003 \003(\0132\036.CMsgDOTAMatch.BroadcasterInfo\022" +
      "\025\n\rlanguage_code\030\004 \001(\t\032:\n\016CustomGameData" +
      "\022\026\n\016custom_game_id\030\001 \001(\004\022\020\n\010map_name\030\002 \001" +
      "(\t\"P\n\013ReplayState\022\024\n\020REPLAY_AVAILABLE\020\000\022" +
      "\027\n\023REPLAY_NOT_RECORDED\020\001\022\022\n\016REPLAY_EXPIR",
      "ED\020\002\"\270\001\n\rCMsgMatchTips\022(\n\010event_id\030\001 \001(\016" +
      "2\007.EEvent:\rEVENT_ID_NONE\022&\n\004tips\030\002 \003(\0132\030" +
      ".CMsgMatchTips.SingleTip\032U\n\tSingleTip\022\031\n" +
      "\021source_account_id\030\001 \001(\r\022\031\n\021target_accou" +
      "nt_id\030\002 \001(\r\022\022\n\ntip_amount\030\003 \001(\r*\232\005\n\rDOTA" +
      "_GameMode\022\026\n\022DOTA_GAMEMODE_NONE\020\000\022\024\n\020DOT" +
      "A_GAMEMODE_AP\020\001\022\024\n\020DOTA_GAMEMODE_CM\020\002\022\024\n" +
      "\020DOTA_GAMEMODE_RD\020\003\022\024\n\020DOTA_GAMEMODE_SD\020" +
      "\004\022\024\n\020DOTA_GAMEMODE_AR\020\005\022\027\n\023DOTA_GAMEMODE" +
      "_INTRO\020\006\022\024\n\020DOTA_GAMEMODE_HW\020\007\022\034\n\030DOTA_G",
      "AMEMODE_REVERSE_CM\020\010\022\026\n\022DOTA_GAMEMODE_XM" +
      "AS\020\t\022\032\n\026DOTA_GAMEMODE_TUTORIAL\020\n\022\024\n\020DOTA" +
      "_GAMEMODE_MO\020\013\022\024\n\020DOTA_GAMEMODE_LP\020\014\022\027\n\023" +
      "DOTA_GAMEMODE_POOL1\020\r\022\024\n\020DOTA_GAMEMODE_F" +
      "H\020\016\022\030\n\024DOTA_GAMEMODE_CUSTOM\020\017\022\024\n\020DOTA_GA" +
      "MEMODE_CD\020\020\022\024\n\020DOTA_GAMEMODE_BD\020\021\022\037\n\033DOT" +
      "A_GAMEMODE_ABILITY_DRAFT\020\022\022\027\n\023DOTA_GAMEM" +
      "ODE_EVENT\020\023\022\026\n\022DOTA_GAMEMODE_ARDM\020\024\022\030\n\024D" +
      "OTA_GAMEMODE_1V1MID\020\025\022\033\n\027DOTA_GAMEMODE_A" +
      "LL_DRAFT\020\026\022\027\n\023DOTA_GAMEMODE_TURBO\020\027\022\032\n\026D",
      "OTA_GAMEMODE_MUTATION\020\030\022#\n\037DOTA_GAMEMODE" +
      "_COACHES_CHALLENGE\020\031*\251\003\n\014DOTA_GC_TEAM\022\032\n" +
      "\026DOTA_GC_TEAM_GOOD_GUYS\020\000\022\031\n\025DOTA_GC_TEA" +
      "M_BAD_GUYS\020\001\022\034\n\030DOTA_GC_TEAM_BROADCASTER" +
      "\020\002\022\032\n\026DOTA_GC_TEAM_SPECTATOR\020\003\022\034\n\030DOTA_G" +
      "C_TEAM_PLAYER_POOL\020\004\022\027\n\023DOTA_GC_TEAM_NOT" +
      "EAM\020\005\022\031\n\025DOTA_GC_TEAM_CUSTOM_1\020\006\022\031\n\025DOTA" +
      "_GC_TEAM_CUSTOM_2\020\007\022\031\n\025DOTA_GC_TEAM_CUST" +
      "OM_3\020\010\022\031\n\025DOTA_GC_TEAM_CUSTOM_4\020\t\022\031\n\025DOT" +
      "A_GC_TEAM_CUSTOM_5\020\n\022\031\n\025DOTA_GC_TEAM_CUS",
      "TOM_6\020\013\022\031\n\025DOTA_GC_TEAM_CUSTOM_7\020\014\022\031\n\025DO" +
      "TA_GC_TEAM_CUSTOM_8\020\r\022\031\n\025DOTA_GC_TEAM_NE" +
      "UTRALS\020\016*\327\n\n\006EEvent\022\021\n\rEVENT_ID_NONE\020\000\022\025" +
      "\n\021EVENT_ID_DIRETIDE\020\001\022\034\n\030EVENT_ID_SPRING" +
      "_FESTIVAL\020\002\022\033\n\027EVENT_ID_FROSTIVUS_2013\020\003" +
      "\022\034\n\030EVENT_ID_COMPENDIUM_2014\020\004\022\032\n\026EVENT_" +
      "ID_NEXON_PC_BANG\020\005\022\032\n\026EVENT_ID_PWRD_DAC_" +
      "2015\020\006\022\033\n\027EVENT_ID_NEW_BLOOM_2015\020\007\022\037\n\033E" +
      "VENT_ID_INTERNATIONAL_2015\020\010\022\034\n\030EVENT_ID" +
      "_FALL_MAJOR_2015\020\t\022\026\n\022EVENT_ID_ORACLE_PA",
      "\020\n\022$\n EVENT_ID_NEW_BLOOM_2015_PREBEAST\020\013" +
      "\022\026\n\022EVENT_ID_FROSTIVUS\020\014\022\036\n\032EVENT_ID_WIN" +
      "TER_MAJOR_2016\020\r\022\037\n\033EVENT_ID_INTERNATION" +
      "AL_2016\020\016\022\034\n\030EVENT_ID_FALL_MAJOR_2016\020\017\022" +
      "\036\n\032EVENT_ID_WINTER_MAJOR_2017\020\020\022\033\n\027EVENT" +
      "_ID_NEW_BLOOM_2017\020\021\022\037\n\033EVENT_ID_INTERNA" +
      "TIONAL_2017\020\022\022\036\n\032EVENT_ID_PLUS_SUBSCRIPT" +
      "ION\020\023\022\035\n\031EVENT_ID_SINGLES_DAY_2017\020\024\022\033\n\027" +
      "EVENT_ID_FROSTIVUS_2017\020\025\022\037\n\033EVENT_ID_IN" +
      "TERNATIONAL_2018\020\026\022\033\n\027EVENT_ID_FROSTIVUS",
      "_2018\020\027\022\033\n\027EVENT_ID_NEW_BLOOM_2019\020\030\022\037\n\033" +
      "EVENT_ID_INTERNATIONAL_2019\020\031\022\"\n\036EVENT_I" +
      "D_NEW_PLAYER_EXPERIENCE\020\032\022\033\n\027EVENT_ID_FR" +
      "OSTIVUS_2019\020\033\022\033\n\027EVENT_ID_NEW_BLOOM_202" +
      "0\020\034\022\037\n\033EVENT_ID_INTERNATIONAL_2020\020\035\022\030\n\024" +
      "EVENT_ID_TEAM_FANDOM\020\036\022\032\n\026EVENT_ID_DIRET" +
      "IDE_2020\020\037\022\030\n\024EVENT_ID_SPRING_2021\020 \022\026\n\022" +
      "EVENT_ID_FALL_2021\020!\022\"\n\036EVENT_ID_TEAM_FA" +
      "NDOM_FALL_2021\020\"\022!\n\035EVENT_ID_TEAM_2021_2" +
      "022_TOUR2\020#\022\037\n\033EVENT_ID_INTERNATIONAL_20",
      "22\020$\022!\n\035EVENT_ID_TEAM_2021_2022_TOUR3\020%\022" +
      "$\n EVENT_ID_TEAM_INTERNATIONAL_2022\020&\022\035\n" +
      "\031EVENT_ID_PERMANENT_GRANTS\020\'\022&\n\"EVENT_ID" +
      "_MUERTA_RELEASE_SPRING2023\020(\022\034\n\030EVENT_ID" +
      "_TEAM_2023_TOUR1\020)\022\034\n\030EVENT_ID_TEAM_2023" +
      "_TOUR2\020*\022\034\n\030EVENT_ID_TEAM_2023_TOUR3\020+\022\022" +
      "\n\016EVENT_ID_COUNT\020,*\327\005\n\rEMatchOutcome\022\033\n\027" +
      "k_EMatchOutcome_Unknown\020\000\022\036\n\032k_EMatchOut" +
      "come_RadVictory\020\002\022\037\n\033k_EMatchOutcome_Dir" +
      "eVictory\020\003\022\"\n\036k_EMatchOutcome_NeutralVic",
      "tory\020\004\022 \n\034k_EMatchOutcome_NoTeamWinner\020\005" +
      "\022\"\n\036k_EMatchOutcome_Custom1Victory\020\006\022\"\n\036" +
      "k_EMatchOutcome_Custom2Victory\020\007\022\"\n\036k_EM" +
      "atchOutcome_Custom3Victory\020\010\022\"\n\036k_EMatch" +
      "Outcome_Custom4Victory\020\t\022\"\n\036k_EMatchOutc" +
      "ome_Custom5Victory\020\n\022\"\n\036k_EMatchOutcome_" +
      "Custom6Victory\020\013\022\"\n\036k_EMatchOutcome_Cust" +
      "om7Victory\020\014\022\"\n\036k_EMatchOutcome_Custom8V" +
      "ictory\020\r\0223\n/k_EMatchOutcome_NotScored_Po" +
      "orNetworkConditions\020@\022$\n k_EMatchOutcome",
      "_NotScored_Leaver\020A\022)\n%k_EMatchOutcome_N" +
      "otScored_ServerCrash\020B\022*\n&k_EMatchOutcom" +
      "e_NotScored_NeverStarted\020C\022&\n\"k_EMatchOu" +
      "tcome_NotScored_Canceled\020D\022(\n$k_EMatchOu" +
      "tcome_NotScored_Suspicious\020E*\321\003\n\022EDOTAPl" +
      "ayerMMRType\022 \n\034k_EDOTAPlayerMMRType_Inva" +
      "lid\020\000\022&\n\"k_EDOTAPlayerMMRType_GeneralHid" +
      "den\020\001\022/\n+k_EDOTAPlayerMMRType_GeneralCom" +
      "petitive2019\020\003\022,\n(k_EDOTAPlayerMMRType_S" +
      "oloCompetitive2019\020\004\022.\n*k_EDOTAPlayerMMR",
      "Type_1v1Competitive_UNUSED\020\005\022.\n*k_EDOTAP" +
      "layerMMRType_GeneralSeasonalRanked\020\006\022+\n\'" +
      "k_EDOTAPlayerMMRType_SoloSeasonalRanked\020" +
      "\007\022)\n%k_EDOTAPlayerMMRType_Competitive_Co" +
      "re\020\010\022,\n(k_EDOTAPlayerMMRType_Competitive" +
      "_Support\020\t\022,\n(k_EDOTAPlayerMMRType_Compe" +
      "titive_Classic\020\n*s\n\021EDOTAMMRBoostType\022\034\n" +
      "\030k_EDOTAMMRBoostType_None\020\000\022\036\n\032k_EDOTAMM" +
      "RBoostType_Leader\020\001\022 \n\034k_EDOTAMMRBoostTy" +
      "pe_Follower\020\002B<\n%skadistats.clarity.wire",
      ".dota.s2.protoB\016S2DotaGcCommonH\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_CMatchPlayerAbilityUpgrade_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMatchPlayerAbilityUpgrade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMatchPlayerAbilityUpgrade_descriptor,
        new java.lang.String[] { "Ability", "Time", });
    internal_static_CMatchAdditionalUnitInventory_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMatchAdditionalUnitInventory_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMatchAdditionalUnitInventory_descriptor,
        new java.lang.String[] { "UnitName", "Items", });
    internal_static_CMatchPlayerPermanentBuff_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMatchPlayerPermanentBuff_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMatchPlayerPermanentBuff_descriptor,
        new java.lang.String[] { "PermanentBuff", "StackCount", });
    internal_static_CMatchHeroSelectEvent_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CMatchHeroSelectEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMatchHeroSelectEvent_descriptor,
        new java.lang.String[] { "IsPick", "Team", "HeroId", });
    internal_static_CMsgDOTAMatch_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CMsgDOTAMatch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAMatch_descriptor,
        new java.lang.String[] { "GoodGuysWin", "Duration", "StartTime", "Players", "MatchId", "TowerStatus", "BarracksStatus", "Cluster", "FirstBloodTime", "ReplaySalt", "ServerIp", "ServerPort", "LobbyType", "HumanPlayers", "AverageSkill", "GameBalance", "RadiantTeamId", "DireTeamId", "Leagueid", "RadiantTeamName", "DireTeamName", "RadiantTeamLogo", "DireTeamLogo", "RadiantTeamComplete", "DireTeamComplete", "PositiveVotes", "NegativeVotes", "GameMode", "PicksBans", "MatchSeqNum", "ReplayState", "RadiantGuildId", "DireGuildId", "RadiantTeamTag", "DireTeamTag", "SeriesId", "SeriesType", "BroadcasterChannels", "Engine", "CustomGameData", "MatchFlags", "PrivateMetadataKey", "RadiantTeamScore", "DireTeamScore", "MatchOutcome", "TournamentId", "TournamentRound", "PreGameDuration", });
    internal_static_CMsgDOTAMatch_Player_descriptor =
      internal_static_CMsgDOTAMatch_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAMatch_Player_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAMatch_Player_descriptor,
        new java.lang.String[] { "AccountId", "PlayerSlot", "HeroId", "Item0", "Item1", "Item2", "Item3", "Item4", "Item5", "Item6", "Item7", "Item8", "ExpectedTeamContribution", "ScaledMetric", "PreviousRank", "RankChange", "SoloRank", "SeasonalRank", "RankTierUpdated", "Kills", "Deaths", "Assists", "LeaverStatus", "Gold", "LastHits", "Denies", "GoldPerMin", "XPPerMin", "GoldSpent", "HeroDamage", "TowerDamage", "HeroHealing", "Level", "TimeLastSeen", "PlayerName", "SupportAbilityValue", "FeedingDetected", "SearchRank", "SearchRankUncertainty", "RankUncertaintyChange", "HeroPlayCount", "PartyId", "ScaledHeroDamage", "ScaledTowerDamage", "ScaledHeroHealing", "ScaledKills", "ScaledDeaths", "ScaledAssists", "ClaimedFarmGold", "SupportGold", "ClaimedDenies", "ClaimedMisses", "Misses", "AbilityUpgrades", "AdditionalUnitsInventory", "PermanentBuffs", "CustomGameData", "ActivePrimeSubscription", "NetWorth", "BotDifficulty", "HeroPickOrder", "HeroWasRandomed", "HeroWasBonus", });
    internal_static_CMsgDOTAMatch_Player_CustomGameData_descriptor =
      internal_static_CMsgDOTAMatch_Player_descriptor.getNestedTypes().get(0);
    internal_static_CMsgDOTAMatch_Player_CustomGameData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAMatch_Player_CustomGameData_descriptor,
        new java.lang.String[] { "DotaTeam", "Winner", });
    internal_static_CMsgDOTAMatch_BroadcasterInfo_descriptor =
      internal_static_CMsgDOTAMatch_descriptor.getNestedTypes().get(1);
    internal_static_CMsgDOTAMatch_BroadcasterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAMatch_BroadcasterInfo_descriptor,
        new java.lang.String[] { "AccountId", "Name", });
    internal_static_CMsgDOTAMatch_BroadcasterChannel_descriptor =
      internal_static_CMsgDOTAMatch_descriptor.getNestedTypes().get(2);
    internal_static_CMsgDOTAMatch_BroadcasterChannel_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAMatch_BroadcasterChannel_descriptor,
        new java.lang.String[] { "CountryCode", "Description", "BroadcasterInfos", "LanguageCode", });
    internal_static_CMsgDOTAMatch_CustomGameData_descriptor =
      internal_static_CMsgDOTAMatch_descriptor.getNestedTypes().get(3);
    internal_static_CMsgDOTAMatch_CustomGameData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgDOTAMatch_CustomGameData_descriptor,
        new java.lang.String[] { "CustomGameId", "MapName", });
    internal_static_CMsgMatchTips_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CMsgMatchTips_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgMatchTips_descriptor,
        new java.lang.String[] { "EventId", "Tips", });
    internal_static_CMsgMatchTips_SingleTip_descriptor =
      internal_static_CMsgMatchTips_descriptor.getNestedTypes().get(0);
    internal_static_CMsgMatchTips_SingleTip_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgMatchTips_SingleTip_descriptor,
        new java.lang.String[] { "SourceAccountId", "TargetAccountId", "TipAmount", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
