// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_id.proto

package skadistats.clarity.wire.csgo.s1.proto;

public final class CSGOS1MessageId {
  private CSGOS1MessageId() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code NET_Messages}
   */
  public enum NET_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>net_NOP = 0;</code>
     */
    net_NOP(0, 0),
    /**
     * <code>net_Disconnect = 1;</code>
     */
    net_Disconnect(1, 1),
    /**
     * <code>net_File = 2;</code>
     */
    net_File(2, 2),
    /**
     * <code>net_SplitScreenUser = 3;</code>
     */
    net_SplitScreenUser(3, 3),
    /**
     * <code>net_Tick = 4;</code>
     */
    net_Tick(4, 4),
    /**
     * <code>net_StringCmd = 5;</code>
     */
    net_StringCmd(5, 5),
    /**
     * <code>net_SetConVar = 6;</code>
     */
    net_SetConVar(6, 6),
    /**
     * <code>net_SignonState = 7;</code>
     */
    net_SignonState(7, 7),
    /**
     * <code>net_PlayerAvatarData = 100;</code>
     */
    net_PlayerAvatarData(8, 100),
    ;

    /**
     * <code>net_NOP = 0;</code>
     */
    public static final int net_NOP_VALUE = 0;
    /**
     * <code>net_Disconnect = 1;</code>
     */
    public static final int net_Disconnect_VALUE = 1;
    /**
     * <code>net_File = 2;</code>
     */
    public static final int net_File_VALUE = 2;
    /**
     * <code>net_SplitScreenUser = 3;</code>
     */
    public static final int net_SplitScreenUser_VALUE = 3;
    /**
     * <code>net_Tick = 4;</code>
     */
    public static final int net_Tick_VALUE = 4;
    /**
     * <code>net_StringCmd = 5;</code>
     */
    public static final int net_StringCmd_VALUE = 5;
    /**
     * <code>net_SetConVar = 6;</code>
     */
    public static final int net_SetConVar_VALUE = 6;
    /**
     * <code>net_SignonState = 7;</code>
     */
    public static final int net_SignonState_VALUE = 7;
    /**
     * <code>net_PlayerAvatarData = 100;</code>
     */
    public static final int net_PlayerAvatarData_VALUE = 100;


    public final int getNumber() { return value; }

    public static NET_Messages valueOf(int value) {
      switch (value) {
        case 0: return net_NOP;
        case 1: return net_Disconnect;
        case 2: return net_File;
        case 3: return net_SplitScreenUser;
        case 4: return net_Tick;
        case 5: return net_StringCmd;
        case 6: return net_SetConVar;
        case 7: return net_SignonState;
        case 100: return net_PlayerAvatarData;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NET_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NET_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NET_Messages>() {
            public NET_Messages findValueByNumber(int number) {
              return NET_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s1.proto.CSGOS1MessageId.getDescriptor().getEnumTypes().get(0);
    }

    private static final NET_Messages[] VALUES = values();

    public static NET_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NET_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NET_Messages)
  }

  /**
   * Protobuf enum {@code CLC_Messages}
   */
  public enum CLC_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>clc_ClientInfo = 8;</code>
     */
    clc_ClientInfo(0, 8),
    /**
     * <code>clc_Move = 9;</code>
     */
    clc_Move(1, 9),
    /**
     * <code>clc_VoiceData = 10;</code>
     */
    clc_VoiceData(2, 10),
    /**
     * <code>clc_BaselineAck = 11;</code>
     */
    clc_BaselineAck(3, 11),
    /**
     * <code>clc_ListenEvents = 12;</code>
     */
    clc_ListenEvents(4, 12),
    /**
     * <code>clc_RespondCvarValue = 13;</code>
     */
    clc_RespondCvarValue(5, 13),
    /**
     * <code>clc_FileCRCCheck = 14;</code>
     */
    clc_FileCRCCheck(6, 14),
    /**
     * <code>clc_LoadingProgress = 15;</code>
     */
    clc_LoadingProgress(7, 15),
    /**
     * <code>clc_SplitPlayerConnect = 16;</code>
     */
    clc_SplitPlayerConnect(8, 16),
    /**
     * <code>clc_ClientMessage = 17;</code>
     */
    clc_ClientMessage(9, 17),
    /**
     * <code>clc_CmdKeyValues = 18;</code>
     */
    clc_CmdKeyValues(10, 18),
    /**
     * <code>clc_HltvReplay = 20;</code>
     */
    clc_HltvReplay(11, 20),
    ;

    /**
     * <code>clc_ClientInfo = 8;</code>
     */
    public static final int clc_ClientInfo_VALUE = 8;
    /**
     * <code>clc_Move = 9;</code>
     */
    public static final int clc_Move_VALUE = 9;
    /**
     * <code>clc_VoiceData = 10;</code>
     */
    public static final int clc_VoiceData_VALUE = 10;
    /**
     * <code>clc_BaselineAck = 11;</code>
     */
    public static final int clc_BaselineAck_VALUE = 11;
    /**
     * <code>clc_ListenEvents = 12;</code>
     */
    public static final int clc_ListenEvents_VALUE = 12;
    /**
     * <code>clc_RespondCvarValue = 13;</code>
     */
    public static final int clc_RespondCvarValue_VALUE = 13;
    /**
     * <code>clc_FileCRCCheck = 14;</code>
     */
    public static final int clc_FileCRCCheck_VALUE = 14;
    /**
     * <code>clc_LoadingProgress = 15;</code>
     */
    public static final int clc_LoadingProgress_VALUE = 15;
    /**
     * <code>clc_SplitPlayerConnect = 16;</code>
     */
    public static final int clc_SplitPlayerConnect_VALUE = 16;
    /**
     * <code>clc_ClientMessage = 17;</code>
     */
    public static final int clc_ClientMessage_VALUE = 17;
    /**
     * <code>clc_CmdKeyValues = 18;</code>
     */
    public static final int clc_CmdKeyValues_VALUE = 18;
    /**
     * <code>clc_HltvReplay = 20;</code>
     */
    public static final int clc_HltvReplay_VALUE = 20;


    public final int getNumber() { return value; }

    public static CLC_Messages valueOf(int value) {
      switch (value) {
        case 8: return clc_ClientInfo;
        case 9: return clc_Move;
        case 10: return clc_VoiceData;
        case 11: return clc_BaselineAck;
        case 12: return clc_ListenEvents;
        case 13: return clc_RespondCvarValue;
        case 14: return clc_FileCRCCheck;
        case 15: return clc_LoadingProgress;
        case 16: return clc_SplitPlayerConnect;
        case 17: return clc_ClientMessage;
        case 18: return clc_CmdKeyValues;
        case 20: return clc_HltvReplay;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CLC_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CLC_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CLC_Messages>() {
            public CLC_Messages findValueByNumber(int number) {
              return CLC_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s1.proto.CSGOS1MessageId.getDescriptor().getEnumTypes().get(1);
    }

    private static final CLC_Messages[] VALUES = values();

    public static CLC_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CLC_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CLC_Messages)
  }

  /**
   * Protobuf enum {@code SVC_Messages}
   */
  public enum SVC_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>svc_ServerInfo = 8;</code>
     */
    svc_ServerInfo(0, 8),
    /**
     * <code>svc_SendTable = 9;</code>
     */
    svc_SendTable(1, 9),
    /**
     * <code>svc_ClassInfo = 10;</code>
     */
    svc_ClassInfo(2, 10),
    /**
     * <code>svc_SetPause = 11;</code>
     */
    svc_SetPause(3, 11),
    /**
     * <code>svc_CreateStringTable = 12;</code>
     */
    svc_CreateStringTable(4, 12),
    /**
     * <code>svc_UpdateStringTable = 13;</code>
     */
    svc_UpdateStringTable(5, 13),
    /**
     * <code>svc_VoiceInit = 14;</code>
     */
    svc_VoiceInit(6, 14),
    /**
     * <code>svc_VoiceData = 15;</code>
     */
    svc_VoiceData(7, 15),
    /**
     * <code>svc_Print = 16;</code>
     */
    svc_Print(8, 16),
    /**
     * <code>svc_Sounds = 17;</code>
     */
    svc_Sounds(9, 17),
    /**
     * <code>svc_SetView = 18;</code>
     */
    svc_SetView(10, 18),
    /**
     * <code>svc_FixAngle = 19;</code>
     */
    svc_FixAngle(11, 19),
    /**
     * <code>svc_CrosshairAngle = 20;</code>
     */
    svc_CrosshairAngle(12, 20),
    /**
     * <code>svc_BSPDecal = 21;</code>
     */
    svc_BSPDecal(13, 21),
    /**
     * <code>svc_SplitScreen = 22;</code>
     */
    svc_SplitScreen(14, 22),
    /**
     * <code>svc_UserMessage = 23;</code>
     */
    svc_UserMessage(15, 23),
    /**
     * <code>svc_EntityMessage = 24;</code>
     */
    svc_EntityMessage(16, 24),
    /**
     * <code>svc_GameEvent = 25;</code>
     */
    svc_GameEvent(17, 25),
    /**
     * <code>svc_PacketEntities = 26;</code>
     */
    svc_PacketEntities(18, 26),
    /**
     * <code>svc_TempEntities = 27;</code>
     */
    svc_TempEntities(19, 27),
    /**
     * <code>svc_Prefetch = 28;</code>
     */
    svc_Prefetch(20, 28),
    /**
     * <code>svc_Menu = 29;</code>
     */
    svc_Menu(21, 29),
    /**
     * <code>svc_GameEventList = 30;</code>
     */
    svc_GameEventList(22, 30),
    /**
     * <code>svc_GetCvarValue = 31;</code>
     */
    svc_GetCvarValue(23, 31),
    /**
     * <code>svc_PaintmapData = 33;</code>
     */
    svc_PaintmapData(24, 33),
    /**
     * <code>svc_CmdKeyValues = 34;</code>
     */
    svc_CmdKeyValues(25, 34),
    /**
     * <code>svc_EncryptedData = 35;</code>
     */
    svc_EncryptedData(26, 35),
    /**
     * <code>svc_HltvReplay = 36;</code>
     */
    svc_HltvReplay(27, 36),
    /**
     * <code>svc_Broadcast_Command = 38;</code>
     */
    svc_Broadcast_Command(28, 38),
    ;

    /**
     * <code>svc_ServerInfo = 8;</code>
     */
    public static final int svc_ServerInfo_VALUE = 8;
    /**
     * <code>svc_SendTable = 9;</code>
     */
    public static final int svc_SendTable_VALUE = 9;
    /**
     * <code>svc_ClassInfo = 10;</code>
     */
    public static final int svc_ClassInfo_VALUE = 10;
    /**
     * <code>svc_SetPause = 11;</code>
     */
    public static final int svc_SetPause_VALUE = 11;
    /**
     * <code>svc_CreateStringTable = 12;</code>
     */
    public static final int svc_CreateStringTable_VALUE = 12;
    /**
     * <code>svc_UpdateStringTable = 13;</code>
     */
    public static final int svc_UpdateStringTable_VALUE = 13;
    /**
     * <code>svc_VoiceInit = 14;</code>
     */
    public static final int svc_VoiceInit_VALUE = 14;
    /**
     * <code>svc_VoiceData = 15;</code>
     */
    public static final int svc_VoiceData_VALUE = 15;
    /**
     * <code>svc_Print = 16;</code>
     */
    public static final int svc_Print_VALUE = 16;
    /**
     * <code>svc_Sounds = 17;</code>
     */
    public static final int svc_Sounds_VALUE = 17;
    /**
     * <code>svc_SetView = 18;</code>
     */
    public static final int svc_SetView_VALUE = 18;
    /**
     * <code>svc_FixAngle = 19;</code>
     */
    public static final int svc_FixAngle_VALUE = 19;
    /**
     * <code>svc_CrosshairAngle = 20;</code>
     */
    public static final int svc_CrosshairAngle_VALUE = 20;
    /**
     * <code>svc_BSPDecal = 21;</code>
     */
    public static final int svc_BSPDecal_VALUE = 21;
    /**
     * <code>svc_SplitScreen = 22;</code>
     */
    public static final int svc_SplitScreen_VALUE = 22;
    /**
     * <code>svc_UserMessage = 23;</code>
     */
    public static final int svc_UserMessage_VALUE = 23;
    /**
     * <code>svc_EntityMessage = 24;</code>
     */
    public static final int svc_EntityMessage_VALUE = 24;
    /**
     * <code>svc_GameEvent = 25;</code>
     */
    public static final int svc_GameEvent_VALUE = 25;
    /**
     * <code>svc_PacketEntities = 26;</code>
     */
    public static final int svc_PacketEntities_VALUE = 26;
    /**
     * <code>svc_TempEntities = 27;</code>
     */
    public static final int svc_TempEntities_VALUE = 27;
    /**
     * <code>svc_Prefetch = 28;</code>
     */
    public static final int svc_Prefetch_VALUE = 28;
    /**
     * <code>svc_Menu = 29;</code>
     */
    public static final int svc_Menu_VALUE = 29;
    /**
     * <code>svc_GameEventList = 30;</code>
     */
    public static final int svc_GameEventList_VALUE = 30;
    /**
     * <code>svc_GetCvarValue = 31;</code>
     */
    public static final int svc_GetCvarValue_VALUE = 31;
    /**
     * <code>svc_PaintmapData = 33;</code>
     */
    public static final int svc_PaintmapData_VALUE = 33;
    /**
     * <code>svc_CmdKeyValues = 34;</code>
     */
    public static final int svc_CmdKeyValues_VALUE = 34;
    /**
     * <code>svc_EncryptedData = 35;</code>
     */
    public static final int svc_EncryptedData_VALUE = 35;
    /**
     * <code>svc_HltvReplay = 36;</code>
     */
    public static final int svc_HltvReplay_VALUE = 36;
    /**
     * <code>svc_Broadcast_Command = 38;</code>
     */
    public static final int svc_Broadcast_Command_VALUE = 38;


    public final int getNumber() { return value; }

    public static SVC_Messages valueOf(int value) {
      switch (value) {
        case 8: return svc_ServerInfo;
        case 9: return svc_SendTable;
        case 10: return svc_ClassInfo;
        case 11: return svc_SetPause;
        case 12: return svc_CreateStringTable;
        case 13: return svc_UpdateStringTable;
        case 14: return svc_VoiceInit;
        case 15: return svc_VoiceData;
        case 16: return svc_Print;
        case 17: return svc_Sounds;
        case 18: return svc_SetView;
        case 19: return svc_FixAngle;
        case 20: return svc_CrosshairAngle;
        case 21: return svc_BSPDecal;
        case 22: return svc_SplitScreen;
        case 23: return svc_UserMessage;
        case 24: return svc_EntityMessage;
        case 25: return svc_GameEvent;
        case 26: return svc_PacketEntities;
        case 27: return svc_TempEntities;
        case 28: return svc_Prefetch;
        case 29: return svc_Menu;
        case 30: return svc_GameEventList;
        case 31: return svc_GetCvarValue;
        case 33: return svc_PaintmapData;
        case 34: return svc_CmdKeyValues;
        case 35: return svc_EncryptedData;
        case 36: return svc_HltvReplay;
        case 38: return svc_Broadcast_Command;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>() {
            public SVC_Messages findValueByNumber(int number) {
              return SVC_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s1.proto.CSGOS1MessageId.getDescriptor().getEnumTypes().get(2);
    }

    private static final SVC_Messages[] VALUES = values();

    public static SVC_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SVC_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SVC_Messages)
  }

  /**
   * Protobuf enum {@code ECstrike15UserMessages}
   */
  public enum ECstrike15UserMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CS_UM_VGUIMenu = 1;</code>
     */
    CS_UM_VGUIMenu(0, 1),
    /**
     * <code>CS_UM_Geiger = 2;</code>
     */
    CS_UM_Geiger(1, 2),
    /**
     * <code>CS_UM_Train = 3;</code>
     */
    CS_UM_Train(2, 3),
    /**
     * <code>CS_UM_HudText = 4;</code>
     */
    CS_UM_HudText(3, 4),
    /**
     * <code>CS_UM_SayText = 5;</code>
     */
    CS_UM_SayText(4, 5),
    /**
     * <code>CS_UM_SayText2 = 6;</code>
     */
    CS_UM_SayText2(5, 6),
    /**
     * <code>CS_UM_TextMsg = 7;</code>
     */
    CS_UM_TextMsg(6, 7),
    /**
     * <code>CS_UM_HudMsg = 8;</code>
     */
    CS_UM_HudMsg(7, 8),
    /**
     * <code>CS_UM_ResetHud = 9;</code>
     */
    CS_UM_ResetHud(8, 9),
    /**
     * <code>CS_UM_GameTitle = 10;</code>
     */
    CS_UM_GameTitle(9, 10),
    /**
     * <code>CS_UM_Shake = 12;</code>
     */
    CS_UM_Shake(10, 12),
    /**
     * <code>CS_UM_Fade = 13;</code>
     */
    CS_UM_Fade(11, 13),
    /**
     * <code>CS_UM_Rumble = 14;</code>
     */
    CS_UM_Rumble(12, 14),
    /**
     * <code>CS_UM_CloseCaption = 15;</code>
     */
    CS_UM_CloseCaption(13, 15),
    /**
     * <code>CS_UM_CloseCaptionDirect = 16;</code>
     */
    CS_UM_CloseCaptionDirect(14, 16),
    /**
     * <code>CS_UM_SendAudio = 17;</code>
     */
    CS_UM_SendAudio(15, 17),
    /**
     * <code>CS_UM_RawAudio = 18;</code>
     */
    CS_UM_RawAudio(16, 18),
    /**
     * <code>CS_UM_VoiceMask = 19;</code>
     */
    CS_UM_VoiceMask(17, 19),
    /**
     * <code>CS_UM_RequestState = 20;</code>
     */
    CS_UM_RequestState(18, 20),
    /**
     * <code>CS_UM_Damage = 21;</code>
     */
    CS_UM_Damage(19, 21),
    /**
     * <code>CS_UM_RadioText = 22;</code>
     */
    CS_UM_RadioText(20, 22),
    /**
     * <code>CS_UM_HintText = 23;</code>
     */
    CS_UM_HintText(21, 23),
    /**
     * <code>CS_UM_KeyHintText = 24;</code>
     */
    CS_UM_KeyHintText(22, 24),
    /**
     * <code>CS_UM_ProcessSpottedEntityUpdate = 25;</code>
     */
    CS_UM_ProcessSpottedEntityUpdate(23, 25),
    /**
     * <code>CS_UM_ReloadEffect = 26;</code>
     */
    CS_UM_ReloadEffect(24, 26),
    /**
     * <code>CS_UM_AdjustMoney = 27;</code>
     */
    CS_UM_AdjustMoney(25, 27),
    /**
     * <code>CS_UM_UpdateTeamMoney = 28;</code>
     */
    CS_UM_UpdateTeamMoney(26, 28),
    /**
     * <code>CS_UM_StopSpectatorMode = 29;</code>
     */
    CS_UM_StopSpectatorMode(27, 29),
    /**
     * <code>CS_UM_KillCam = 30;</code>
     */
    CS_UM_KillCam(28, 30),
    /**
     * <code>CS_UM_DesiredTimescale = 31;</code>
     */
    CS_UM_DesiredTimescale(29, 31),
    /**
     * <code>CS_UM_CurrentTimescale = 32;</code>
     */
    CS_UM_CurrentTimescale(30, 32),
    /**
     * <code>CS_UM_AchievementEvent = 33;</code>
     */
    CS_UM_AchievementEvent(31, 33),
    /**
     * <code>CS_UM_MatchEndConditions = 34;</code>
     */
    CS_UM_MatchEndConditions(32, 34),
    /**
     * <code>CS_UM_DisconnectToLobby = 35;</code>
     */
    CS_UM_DisconnectToLobby(33, 35),
    /**
     * <code>CS_UM_PlayerStatsUpdate = 36;</code>
     */
    CS_UM_PlayerStatsUpdate(34, 36),
    /**
     * <code>CS_UM_DisplayInventory = 37;</code>
     */
    CS_UM_DisplayInventory(35, 37),
    /**
     * <code>CS_UM_WarmupHasEnded = 38;</code>
     */
    CS_UM_WarmupHasEnded(36, 38),
    /**
     * <code>CS_UM_ClientInfo = 39;</code>
     */
    CS_UM_ClientInfo(37, 39),
    /**
     * <code>CS_UM_XRankGet = 40;</code>
     */
    CS_UM_XRankGet(38, 40),
    /**
     * <code>CS_UM_XRankUpd = 41;</code>
     */
    CS_UM_XRankUpd(39, 41),
    /**
     * <code>CS_UM_CallVoteFailed = 45;</code>
     */
    CS_UM_CallVoteFailed(40, 45),
    /**
     * <code>CS_UM_VoteStart = 46;</code>
     */
    CS_UM_VoteStart(41, 46),
    /**
     * <code>CS_UM_VotePass = 47;</code>
     */
    CS_UM_VotePass(42, 47),
    /**
     * <code>CS_UM_VoteFailed = 48;</code>
     */
    CS_UM_VoteFailed(43, 48),
    /**
     * <code>CS_UM_VoteSetup = 49;</code>
     */
    CS_UM_VoteSetup(44, 49),
    /**
     * <code>CS_UM_ServerRankRevealAll = 50;</code>
     */
    CS_UM_ServerRankRevealAll(45, 50),
    /**
     * <code>CS_UM_SendLastKillerDamageToClient = 51;</code>
     */
    CS_UM_SendLastKillerDamageToClient(46, 51),
    /**
     * <code>CS_UM_ServerRankUpdate = 52;</code>
     */
    CS_UM_ServerRankUpdate(47, 52),
    /**
     * <code>CS_UM_ItemPickup = 53;</code>
     */
    CS_UM_ItemPickup(48, 53),
    /**
     * <code>CS_UM_ShowMenu = 54;</code>
     */
    CS_UM_ShowMenu(49, 54),
    /**
     * <code>CS_UM_BarTime = 55;</code>
     */
    CS_UM_BarTime(50, 55),
    /**
     * <code>CS_UM_AmmoDenied = 56;</code>
     */
    CS_UM_AmmoDenied(51, 56),
    /**
     * <code>CS_UM_MarkAchievement = 57;</code>
     */
    CS_UM_MarkAchievement(52, 57),
    /**
     * <code>CS_UM_MatchStatsUpdate = 58;</code>
     */
    CS_UM_MatchStatsUpdate(53, 58),
    /**
     * <code>CS_UM_ItemDrop = 59;</code>
     */
    CS_UM_ItemDrop(54, 59),
    /**
     * <code>CS_UM_GlowPropTurnOff = 60;</code>
     */
    CS_UM_GlowPropTurnOff(55, 60),
    /**
     * <code>CS_UM_SendPlayerItemDrops = 61;</code>
     */
    CS_UM_SendPlayerItemDrops(56, 61),
    /**
     * <code>CS_UM_RoundBackupFilenames = 62;</code>
     */
    CS_UM_RoundBackupFilenames(57, 62),
    /**
     * <code>CS_UM_SendPlayerItemFound = 63;</code>
     */
    CS_UM_SendPlayerItemFound(58, 63),
    /**
     * <code>CS_UM_ReportHit = 64;</code>
     */
    CS_UM_ReportHit(59, 64),
    /**
     * <code>CS_UM_XpUpdate = 65;</code>
     */
    CS_UM_XpUpdate(60, 65),
    /**
     * <code>CS_UM_QuestProgress = 66;</code>
     */
    CS_UM_QuestProgress(61, 66),
    /**
     * <code>CS_UM_ScoreLeaderboardData = 67;</code>
     */
    CS_UM_ScoreLeaderboardData(62, 67),
    /**
     * <code>CS_UM_PlayerDecalDigitalSignature = 68;</code>
     */
    CS_UM_PlayerDecalDigitalSignature(63, 68),
    /**
     * <code>CS_UM_WeaponSound = 69;</code>
     */
    CS_UM_WeaponSound(64, 69),
    /**
     * <code>CS_UM_UpdateScreenHealthBar = 70;</code>
     */
    CS_UM_UpdateScreenHealthBar(65, 70),
    /**
     * <code>CS_UM_EntityOutlineHighlight = 71;</code>
     */
    CS_UM_EntityOutlineHighlight(66, 71),
    /**
     * <code>CS_UM_SSUI = 72;</code>
     */
    CS_UM_SSUI(67, 72),
    /**
     * <code>CS_UM_SurvivalStats = 73;</code>
     */
    CS_UM_SurvivalStats(68, 73),
    /**
     * <code>CS_UM_DisconnectToLobby2 = 74;</code>
     */
    CS_UM_DisconnectToLobby2(69, 74),
    /**
     * <code>CS_UM_EndOfMatchAllPlayersData = 75;</code>
     */
    CS_UM_EndOfMatchAllPlayersData(70, 75),
    /**
     * <code>CS_UM_RoundImpactScoreData = 79;</code>
     */
    CS_UM_RoundImpactScoreData(71, 79),
    /**
     * <code>CS_UM_CurrentRoundOdds = 80;</code>
     */
    CS_UM_CurrentRoundOdds(72, 80),
    /**
     * <code>CS_UM_DeepStats = 81;</code>
     */
    CS_UM_DeepStats(73, 81),
    /**
     * <code>CS_UM_UtilMsg = 82;</code>
     */
    CS_UM_UtilMsg(74, 82),
    /**
     * <code>CS_UM_UtilMsg_Response = 83;</code>
     */
    CS_UM_UtilMsg_Response(75, 83),
    ;

    /**
     * <code>CS_UM_VGUIMenu = 1;</code>
     */
    public static final int CS_UM_VGUIMenu_VALUE = 1;
    /**
     * <code>CS_UM_Geiger = 2;</code>
     */
    public static final int CS_UM_Geiger_VALUE = 2;
    /**
     * <code>CS_UM_Train = 3;</code>
     */
    public static final int CS_UM_Train_VALUE = 3;
    /**
     * <code>CS_UM_HudText = 4;</code>
     */
    public static final int CS_UM_HudText_VALUE = 4;
    /**
     * <code>CS_UM_SayText = 5;</code>
     */
    public static final int CS_UM_SayText_VALUE = 5;
    /**
     * <code>CS_UM_SayText2 = 6;</code>
     */
    public static final int CS_UM_SayText2_VALUE = 6;
    /**
     * <code>CS_UM_TextMsg = 7;</code>
     */
    public static final int CS_UM_TextMsg_VALUE = 7;
    /**
     * <code>CS_UM_HudMsg = 8;</code>
     */
    public static final int CS_UM_HudMsg_VALUE = 8;
    /**
     * <code>CS_UM_ResetHud = 9;</code>
     */
    public static final int CS_UM_ResetHud_VALUE = 9;
    /**
     * <code>CS_UM_GameTitle = 10;</code>
     */
    public static final int CS_UM_GameTitle_VALUE = 10;
    /**
     * <code>CS_UM_Shake = 12;</code>
     */
    public static final int CS_UM_Shake_VALUE = 12;
    /**
     * <code>CS_UM_Fade = 13;</code>
     */
    public static final int CS_UM_Fade_VALUE = 13;
    /**
     * <code>CS_UM_Rumble = 14;</code>
     */
    public static final int CS_UM_Rumble_VALUE = 14;
    /**
     * <code>CS_UM_CloseCaption = 15;</code>
     */
    public static final int CS_UM_CloseCaption_VALUE = 15;
    /**
     * <code>CS_UM_CloseCaptionDirect = 16;</code>
     */
    public static final int CS_UM_CloseCaptionDirect_VALUE = 16;
    /**
     * <code>CS_UM_SendAudio = 17;</code>
     */
    public static final int CS_UM_SendAudio_VALUE = 17;
    /**
     * <code>CS_UM_RawAudio = 18;</code>
     */
    public static final int CS_UM_RawAudio_VALUE = 18;
    /**
     * <code>CS_UM_VoiceMask = 19;</code>
     */
    public static final int CS_UM_VoiceMask_VALUE = 19;
    /**
     * <code>CS_UM_RequestState = 20;</code>
     */
    public static final int CS_UM_RequestState_VALUE = 20;
    /**
     * <code>CS_UM_Damage = 21;</code>
     */
    public static final int CS_UM_Damage_VALUE = 21;
    /**
     * <code>CS_UM_RadioText = 22;</code>
     */
    public static final int CS_UM_RadioText_VALUE = 22;
    /**
     * <code>CS_UM_HintText = 23;</code>
     */
    public static final int CS_UM_HintText_VALUE = 23;
    /**
     * <code>CS_UM_KeyHintText = 24;</code>
     */
    public static final int CS_UM_KeyHintText_VALUE = 24;
    /**
     * <code>CS_UM_ProcessSpottedEntityUpdate = 25;</code>
     */
    public static final int CS_UM_ProcessSpottedEntityUpdate_VALUE = 25;
    /**
     * <code>CS_UM_ReloadEffect = 26;</code>
     */
    public static final int CS_UM_ReloadEffect_VALUE = 26;
    /**
     * <code>CS_UM_AdjustMoney = 27;</code>
     */
    public static final int CS_UM_AdjustMoney_VALUE = 27;
    /**
     * <code>CS_UM_UpdateTeamMoney = 28;</code>
     */
    public static final int CS_UM_UpdateTeamMoney_VALUE = 28;
    /**
     * <code>CS_UM_StopSpectatorMode = 29;</code>
     */
    public static final int CS_UM_StopSpectatorMode_VALUE = 29;
    /**
     * <code>CS_UM_KillCam = 30;</code>
     */
    public static final int CS_UM_KillCam_VALUE = 30;
    /**
     * <code>CS_UM_DesiredTimescale = 31;</code>
     */
    public static final int CS_UM_DesiredTimescale_VALUE = 31;
    /**
     * <code>CS_UM_CurrentTimescale = 32;</code>
     */
    public static final int CS_UM_CurrentTimescale_VALUE = 32;
    /**
     * <code>CS_UM_AchievementEvent = 33;</code>
     */
    public static final int CS_UM_AchievementEvent_VALUE = 33;
    /**
     * <code>CS_UM_MatchEndConditions = 34;</code>
     */
    public static final int CS_UM_MatchEndConditions_VALUE = 34;
    /**
     * <code>CS_UM_DisconnectToLobby = 35;</code>
     */
    public static final int CS_UM_DisconnectToLobby_VALUE = 35;
    /**
     * <code>CS_UM_PlayerStatsUpdate = 36;</code>
     */
    public static final int CS_UM_PlayerStatsUpdate_VALUE = 36;
    /**
     * <code>CS_UM_DisplayInventory = 37;</code>
     */
    public static final int CS_UM_DisplayInventory_VALUE = 37;
    /**
     * <code>CS_UM_WarmupHasEnded = 38;</code>
     */
    public static final int CS_UM_WarmupHasEnded_VALUE = 38;
    /**
     * <code>CS_UM_ClientInfo = 39;</code>
     */
    public static final int CS_UM_ClientInfo_VALUE = 39;
    /**
     * <code>CS_UM_XRankGet = 40;</code>
     */
    public static final int CS_UM_XRankGet_VALUE = 40;
    /**
     * <code>CS_UM_XRankUpd = 41;</code>
     */
    public static final int CS_UM_XRankUpd_VALUE = 41;
    /**
     * <code>CS_UM_CallVoteFailed = 45;</code>
     */
    public static final int CS_UM_CallVoteFailed_VALUE = 45;
    /**
     * <code>CS_UM_VoteStart = 46;</code>
     */
    public static final int CS_UM_VoteStart_VALUE = 46;
    /**
     * <code>CS_UM_VotePass = 47;</code>
     */
    public static final int CS_UM_VotePass_VALUE = 47;
    /**
     * <code>CS_UM_VoteFailed = 48;</code>
     */
    public static final int CS_UM_VoteFailed_VALUE = 48;
    /**
     * <code>CS_UM_VoteSetup = 49;</code>
     */
    public static final int CS_UM_VoteSetup_VALUE = 49;
    /**
     * <code>CS_UM_ServerRankRevealAll = 50;</code>
     */
    public static final int CS_UM_ServerRankRevealAll_VALUE = 50;
    /**
     * <code>CS_UM_SendLastKillerDamageToClient = 51;</code>
     */
    public static final int CS_UM_SendLastKillerDamageToClient_VALUE = 51;
    /**
     * <code>CS_UM_ServerRankUpdate = 52;</code>
     */
    public static final int CS_UM_ServerRankUpdate_VALUE = 52;
    /**
     * <code>CS_UM_ItemPickup = 53;</code>
     */
    public static final int CS_UM_ItemPickup_VALUE = 53;
    /**
     * <code>CS_UM_ShowMenu = 54;</code>
     */
    public static final int CS_UM_ShowMenu_VALUE = 54;
    /**
     * <code>CS_UM_BarTime = 55;</code>
     */
    public static final int CS_UM_BarTime_VALUE = 55;
    /**
     * <code>CS_UM_AmmoDenied = 56;</code>
     */
    public static final int CS_UM_AmmoDenied_VALUE = 56;
    /**
     * <code>CS_UM_MarkAchievement = 57;</code>
     */
    public static final int CS_UM_MarkAchievement_VALUE = 57;
    /**
     * <code>CS_UM_MatchStatsUpdate = 58;</code>
     */
    public static final int CS_UM_MatchStatsUpdate_VALUE = 58;
    /**
     * <code>CS_UM_ItemDrop = 59;</code>
     */
    public static final int CS_UM_ItemDrop_VALUE = 59;
    /**
     * <code>CS_UM_GlowPropTurnOff = 60;</code>
     */
    public static final int CS_UM_GlowPropTurnOff_VALUE = 60;
    /**
     * <code>CS_UM_SendPlayerItemDrops = 61;</code>
     */
    public static final int CS_UM_SendPlayerItemDrops_VALUE = 61;
    /**
     * <code>CS_UM_RoundBackupFilenames = 62;</code>
     */
    public static final int CS_UM_RoundBackupFilenames_VALUE = 62;
    /**
     * <code>CS_UM_SendPlayerItemFound = 63;</code>
     */
    public static final int CS_UM_SendPlayerItemFound_VALUE = 63;
    /**
     * <code>CS_UM_ReportHit = 64;</code>
     */
    public static final int CS_UM_ReportHit_VALUE = 64;
    /**
     * <code>CS_UM_XpUpdate = 65;</code>
     */
    public static final int CS_UM_XpUpdate_VALUE = 65;
    /**
     * <code>CS_UM_QuestProgress = 66;</code>
     */
    public static final int CS_UM_QuestProgress_VALUE = 66;
    /**
     * <code>CS_UM_ScoreLeaderboardData = 67;</code>
     */
    public static final int CS_UM_ScoreLeaderboardData_VALUE = 67;
    /**
     * <code>CS_UM_PlayerDecalDigitalSignature = 68;</code>
     */
    public static final int CS_UM_PlayerDecalDigitalSignature_VALUE = 68;
    /**
     * <code>CS_UM_WeaponSound = 69;</code>
     */
    public static final int CS_UM_WeaponSound_VALUE = 69;
    /**
     * <code>CS_UM_UpdateScreenHealthBar = 70;</code>
     */
    public static final int CS_UM_UpdateScreenHealthBar_VALUE = 70;
    /**
     * <code>CS_UM_EntityOutlineHighlight = 71;</code>
     */
    public static final int CS_UM_EntityOutlineHighlight_VALUE = 71;
    /**
     * <code>CS_UM_SSUI = 72;</code>
     */
    public static final int CS_UM_SSUI_VALUE = 72;
    /**
     * <code>CS_UM_SurvivalStats = 73;</code>
     */
    public static final int CS_UM_SurvivalStats_VALUE = 73;
    /**
     * <code>CS_UM_DisconnectToLobby2 = 74;</code>
     */
    public static final int CS_UM_DisconnectToLobby2_VALUE = 74;
    /**
     * <code>CS_UM_EndOfMatchAllPlayersData = 75;</code>
     */
    public static final int CS_UM_EndOfMatchAllPlayersData_VALUE = 75;
    /**
     * <code>CS_UM_RoundImpactScoreData = 79;</code>
     */
    public static final int CS_UM_RoundImpactScoreData_VALUE = 79;
    /**
     * <code>CS_UM_CurrentRoundOdds = 80;</code>
     */
    public static final int CS_UM_CurrentRoundOdds_VALUE = 80;
    /**
     * <code>CS_UM_DeepStats = 81;</code>
     */
    public static final int CS_UM_DeepStats_VALUE = 81;
    /**
     * <code>CS_UM_UtilMsg = 82;</code>
     */
    public static final int CS_UM_UtilMsg_VALUE = 82;
    /**
     * <code>CS_UM_UtilMsg_Response = 83;</code>
     */
    public static final int CS_UM_UtilMsg_Response_VALUE = 83;


    public final int getNumber() { return value; }

    public static ECstrike15UserMessages valueOf(int value) {
      switch (value) {
        case 1: return CS_UM_VGUIMenu;
        case 2: return CS_UM_Geiger;
        case 3: return CS_UM_Train;
        case 4: return CS_UM_HudText;
        case 5: return CS_UM_SayText;
        case 6: return CS_UM_SayText2;
        case 7: return CS_UM_TextMsg;
        case 8: return CS_UM_HudMsg;
        case 9: return CS_UM_ResetHud;
        case 10: return CS_UM_GameTitle;
        case 12: return CS_UM_Shake;
        case 13: return CS_UM_Fade;
        case 14: return CS_UM_Rumble;
        case 15: return CS_UM_CloseCaption;
        case 16: return CS_UM_CloseCaptionDirect;
        case 17: return CS_UM_SendAudio;
        case 18: return CS_UM_RawAudio;
        case 19: return CS_UM_VoiceMask;
        case 20: return CS_UM_RequestState;
        case 21: return CS_UM_Damage;
        case 22: return CS_UM_RadioText;
        case 23: return CS_UM_HintText;
        case 24: return CS_UM_KeyHintText;
        case 25: return CS_UM_ProcessSpottedEntityUpdate;
        case 26: return CS_UM_ReloadEffect;
        case 27: return CS_UM_AdjustMoney;
        case 28: return CS_UM_UpdateTeamMoney;
        case 29: return CS_UM_StopSpectatorMode;
        case 30: return CS_UM_KillCam;
        case 31: return CS_UM_DesiredTimescale;
        case 32: return CS_UM_CurrentTimescale;
        case 33: return CS_UM_AchievementEvent;
        case 34: return CS_UM_MatchEndConditions;
        case 35: return CS_UM_DisconnectToLobby;
        case 36: return CS_UM_PlayerStatsUpdate;
        case 37: return CS_UM_DisplayInventory;
        case 38: return CS_UM_WarmupHasEnded;
        case 39: return CS_UM_ClientInfo;
        case 40: return CS_UM_XRankGet;
        case 41: return CS_UM_XRankUpd;
        case 45: return CS_UM_CallVoteFailed;
        case 46: return CS_UM_VoteStart;
        case 47: return CS_UM_VotePass;
        case 48: return CS_UM_VoteFailed;
        case 49: return CS_UM_VoteSetup;
        case 50: return CS_UM_ServerRankRevealAll;
        case 51: return CS_UM_SendLastKillerDamageToClient;
        case 52: return CS_UM_ServerRankUpdate;
        case 53: return CS_UM_ItemPickup;
        case 54: return CS_UM_ShowMenu;
        case 55: return CS_UM_BarTime;
        case 56: return CS_UM_AmmoDenied;
        case 57: return CS_UM_MarkAchievement;
        case 58: return CS_UM_MatchStatsUpdate;
        case 59: return CS_UM_ItemDrop;
        case 60: return CS_UM_GlowPropTurnOff;
        case 61: return CS_UM_SendPlayerItemDrops;
        case 62: return CS_UM_RoundBackupFilenames;
        case 63: return CS_UM_SendPlayerItemFound;
        case 64: return CS_UM_ReportHit;
        case 65: return CS_UM_XpUpdate;
        case 66: return CS_UM_QuestProgress;
        case 67: return CS_UM_ScoreLeaderboardData;
        case 68: return CS_UM_PlayerDecalDigitalSignature;
        case 69: return CS_UM_WeaponSound;
        case 70: return CS_UM_UpdateScreenHealthBar;
        case 71: return CS_UM_EntityOutlineHighlight;
        case 72: return CS_UM_SSUI;
        case 73: return CS_UM_SurvivalStats;
        case 74: return CS_UM_DisconnectToLobby2;
        case 75: return CS_UM_EndOfMatchAllPlayersData;
        case 79: return CS_UM_RoundImpactScoreData;
        case 80: return CS_UM_CurrentRoundOdds;
        case 81: return CS_UM_DeepStats;
        case 82: return CS_UM_UtilMsg;
        case 83: return CS_UM_UtilMsg_Response;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ECstrike15UserMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ECstrike15UserMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ECstrike15UserMessages>() {
            public ECstrike15UserMessages findValueByNumber(int number) {
              return ECstrike15UserMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.csgo.s1.proto.CSGOS1MessageId.getDescriptor().getEnumTypes().get(3);
    }

    private static final ECstrike15UserMessages[] VALUES = values();

    public static ECstrike15UserMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ECstrike15UserMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ECstrike15UserMessages)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020message_id.proto*\271\001\n\014NET_Messages\022\013\n\007n" +
      "et_NOP\020\000\022\022\n\016net_Disconnect\020\001\022\014\n\010net_File" +
      "\020\002\022\027\n\023net_SplitScreenUser\020\003\022\014\n\010net_Tick\020" +
      "\004\022\021\n\rnet_StringCmd\020\005\022\021\n\rnet_SetConVar\020\006\022" +
      "\023\n\017net_SignonState\020\007\022\030\n\024net_PlayerAvatar" +
      "Data\020d*\224\002\n\014CLC_Messages\022\022\n\016clc_ClientInf" +
      "o\020\010\022\014\n\010clc_Move\020\t\022\021\n\rclc_VoiceData\020\n\022\023\n\017" +
      "clc_BaselineAck\020\013\022\024\n\020clc_ListenEvents\020\014\022" +
      "\030\n\024clc_RespondCvarValue\020\r\022\024\n\020clc_FileCRC" +
      "Check\020\016\022\027\n\023clc_LoadingProgress\020\017\022\032\n\026clc_",
      "SplitPlayerConnect\020\020\022\025\n\021clc_ClientMessag" +
      "e\020\021\022\024\n\020clc_CmdKeyValues\020\022\022\022\n\016clc_HltvRep" +
      "lay\020\024*\343\004\n\014SVC_Messages\022\022\n\016svc_ServerInfo" +
      "\020\010\022\021\n\rsvc_SendTable\020\t\022\021\n\rsvc_ClassInfo\020\n" +
      "\022\020\n\014svc_SetPause\020\013\022\031\n\025svc_CreateStringTa" +
      "ble\020\014\022\031\n\025svc_UpdateStringTable\020\r\022\021\n\rsvc_" +
      "VoiceInit\020\016\022\021\n\rsvc_VoiceData\020\017\022\r\n\tsvc_Pr" +
      "int\020\020\022\016\n\nsvc_Sounds\020\021\022\017\n\013svc_SetView\020\022\022\020" +
      "\n\014svc_FixAngle\020\023\022\026\n\022svc_CrosshairAngle\020\024" +
      "\022\020\n\014svc_BSPDecal\020\025\022\023\n\017svc_SplitScreen\020\026\022",
      "\023\n\017svc_UserMessage\020\027\022\025\n\021svc_EntityMessag" +
      "e\020\030\022\021\n\rsvc_GameEvent\020\031\022\026\n\022svc_PacketEnti" +
      "ties\020\032\022\024\n\020svc_TempEntities\020\033\022\020\n\014svc_Pref" +
      "etch\020\034\022\014\n\010svc_Menu\020\035\022\025\n\021svc_GameEventLis" +
      "t\020\036\022\024\n\020svc_GetCvarValue\020\037\022\024\n\020svc_Paintma" +
      "pData\020!\022\024\n\020svc_CmdKeyValues\020\"\022\025\n\021svc_Enc" +
      "ryptedData\020#\022\022\n\016svc_HltvReplay\020$\022\031\n\025svc_" +
      "Broadcast_Command\020&*\336\016\n\026ECstrike15UserMe" +
      "ssages\022\022\n\016CS_UM_VGUIMenu\020\001\022\020\n\014CS_UM_Geig" +
      "er\020\002\022\017\n\013CS_UM_Train\020\003\022\021\n\rCS_UM_HudText\020\004",
      "\022\021\n\rCS_UM_SayText\020\005\022\022\n\016CS_UM_SayText2\020\006\022" +
      "\021\n\rCS_UM_TextMsg\020\007\022\020\n\014CS_UM_HudMsg\020\010\022\022\n\016" +
      "CS_UM_ResetHud\020\t\022\023\n\017CS_UM_GameTitle\020\n\022\017\n" +
      "\013CS_UM_Shake\020\014\022\016\n\nCS_UM_Fade\020\r\022\020\n\014CS_UM_" +
      "Rumble\020\016\022\026\n\022CS_UM_CloseCaption\020\017\022\034\n\030CS_U" +
      "M_CloseCaptionDirect\020\020\022\023\n\017CS_UM_SendAudi" +
      "o\020\021\022\022\n\016CS_UM_RawAudio\020\022\022\023\n\017CS_UM_VoiceMa" +
      "sk\020\023\022\026\n\022CS_UM_RequestState\020\024\022\020\n\014CS_UM_Da" +
      "mage\020\025\022\023\n\017CS_UM_RadioText\020\026\022\022\n\016CS_UM_Hin" +
      "tText\020\027\022\025\n\021CS_UM_KeyHintText\020\030\022$\n CS_UM_",
      "ProcessSpottedEntityUpdate\020\031\022\026\n\022CS_UM_Re" +
      "loadEffect\020\032\022\025\n\021CS_UM_AdjustMoney\020\033\022\031\n\025C" +
      "S_UM_UpdateTeamMoney\020\034\022\033\n\027CS_UM_StopSpec" +
      "tatorMode\020\035\022\021\n\rCS_UM_KillCam\020\036\022\032\n\026CS_UM_" +
      "DesiredTimescale\020\037\022\032\n\026CS_UM_CurrentTimes" +
      "cale\020 \022\032\n\026CS_UM_AchievementEvent\020!\022\034\n\030CS" +
      "_UM_MatchEndConditions\020\"\022\033\n\027CS_UM_Discon" +
      "nectToLobby\020#\022\033\n\027CS_UM_PlayerStatsUpdate" +
      "\020$\022\032\n\026CS_UM_DisplayInventory\020%\022\030\n\024CS_UM_" +
      "WarmupHasEnded\020&\022\024\n\020CS_UM_ClientInfo\020\'\022\022",
      "\n\016CS_UM_XRankGet\020(\022\022\n\016CS_UM_XRankUpd\020)\022\030" +
      "\n\024CS_UM_CallVoteFailed\020-\022\023\n\017CS_UM_VoteSt" +
      "art\020.\022\022\n\016CS_UM_VotePass\020/\022\024\n\020CS_UM_VoteF" +
      "ailed\0200\022\023\n\017CS_UM_VoteSetup\0201\022\035\n\031CS_UM_Se" +
      "rverRankRevealAll\0202\022&\n\"CS_UM_SendLastKil" +
      "lerDamageToClient\0203\022\032\n\026CS_UM_ServerRankU" +
      "pdate\0204\022\024\n\020CS_UM_ItemPickup\0205\022\022\n\016CS_UM_S" +
      "howMenu\0206\022\021\n\rCS_UM_BarTime\0207\022\024\n\020CS_UM_Am" +
      "moDenied\0208\022\031\n\025CS_UM_MarkAchievement\0209\022\032\n" +
      "\026CS_UM_MatchStatsUpdate\020:\022\022\n\016CS_UM_ItemD",
      "rop\020;\022\031\n\025CS_UM_GlowPropTurnOff\020<\022\035\n\031CS_U" +
      "M_SendPlayerItemDrops\020=\022\036\n\032CS_UM_RoundBa" +
      "ckupFilenames\020>\022\035\n\031CS_UM_SendPlayerItemF" +
      "ound\020?\022\023\n\017CS_UM_ReportHit\020@\022\022\n\016CS_UM_XpU" +
      "pdate\020A\022\027\n\023CS_UM_QuestProgress\020B\022\036\n\032CS_U" +
      "M_ScoreLeaderboardData\020C\022%\n!CS_UM_Player" +
      "DecalDigitalSignature\020D\022\025\n\021CS_UM_WeaponS" +
      "ound\020E\022\037\n\033CS_UM_UpdateScreenHealthBar\020F\022" +
      " \n\034CS_UM_EntityOutlineHighlight\020G\022\016\n\nCS_" +
      "UM_SSUI\020H\022\027\n\023CS_UM_SurvivalStats\020I\022\034\n\030CS",
      "_UM_DisconnectToLobby2\020J\022\"\n\036CS_UM_EndOfM" +
      "atchAllPlayersData\020K\022\036\n\032CS_UM_RoundImpac" +
      "tScoreData\020O\022\032\n\026CS_UM_CurrentRoundOdds\020P" +
      "\022\023\n\017CS_UM_DeepStats\020Q\022\021\n\rCS_UM_UtilMsg\020R" +
      "\022\032\n\026CS_UM_UtilMsg_Response\020SB8\n%skadista" +
      "ts.clarity.wire.csgo.s1.protoB\017CSGOS1Mes" +
      "sageId"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
