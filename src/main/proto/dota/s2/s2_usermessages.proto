option java_package = "skadistats.clarity.wire.dota.s2.proto";
option java_outer_classname = "S2UserMessages";

import "networkbasetypes.proto";

enum EHapticPulseType {
  VR_HAND_HAPTIC_PULSE_LIGHT = 0;
  VR_HAND_HAPTIC_PULSE_MEDIUM = 1;
  VR_HAND_HAPTIC_PULSE_STRONG = 2;
}

message CUserMessageFade {
  optional uint32 duration = 1;
  optional uint32 hold_time = 2;
  optional uint32 flags = 3;
  optional fixed32 color = 4;
}

message CUserMessageSayText2 {
  optional int32 entityindex = 1;
  optional bool chat = 2;
  optional string messagename = 3;
  optional string param1 = 4;
  optional string param2 = 5;
  optional string param3 = 6;
  optional string param4 = 7;
}

message CUserMessageTextMsg {
  optional uint32 dest = 1;
  repeated string param = 2;
}

message CUserMessageResetHUD {
}

message CUserMessageSendAudio {
  optional string soundname = 1;
  optional bool stop = 2;
}

message CUserMessageAudioParameter {
  optional uint32 parameter_type = 1;
  optional uint32 name_hash_code = 2;
  optional float value = 3;
  optional uint32 int_value = 4;
}

message CUserMessageVoiceMask {
  repeated uint32 gamerules_masks = 1;
  repeated uint32 ban_masks = 2;
  optional bool mod_enable = 3;
}

message CUserMessageRequestState {
}

message CEntityMessagePlayJingle {
  optional .CEntityMsg entity_msg = 1;
}

message CUserMessageHapticPulse {
  optional int32 hand_id = 1;
  optional .EHapticPulseType pulse_type = 2 [default = VR_HAND_HAPTIC_PULSE_LIGHT];
}

message CEntityMessageScreenOverlay {
  optional bool start_effect = 1;
  optional .CEntityMsg entity_msg = 2;
}

message CEntityMessageRemoveAllDecals {
  optional bool remove_decals = 1;
  optional .CEntityMsg entity_msg = 2;
}

message CEntityMessagePropagateForce {
  optional CMsgVector impulse = 1;
  optional .CEntityMsg entity_msg = 2;
}

message CEntityMessageDoSpark {
  optional CMsgVector origin = 1;
  optional int32 entityindex = 2;
  optional float radius = 3;
  optional fixed32 color = 4;
  optional uint32 beams = 5;
  optional float thick = 6;
  optional float duration = 7;
  optional .CEntityMsg entity_msg = 8;
}

message CEntityMessageFixAngle {
  optional bool relative = 1;
  optional CMsgQAngle angle = 2;
  optional .CEntityMsg entity_msg = 3;
}

message CUserMsg_HudError {
  optional int32 order_id = 1;
}

message CUserMessageServerFrameTime {
  optional float frame_time = 1;
}

message CUserMsg_CustomGameEvent_ClientToServer {
  optional string event_name = 1;
  optional bytes data = 2;
}

message CUserMsg_CustomGameEvent_ServerToClient {
  optional string event_name = 1;
  optional bytes data = 2;
}

message CUserMsg_TrackedControllerInput_ClientToServer {
  optional bytes data = 1;
}

