// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: s2_dota_gcmessages_common_match_management.proto

package skadistats.clarity.wire.dota.s2.proto;

public final class S2DotaGcMM {
  private S2DotaGcMM() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code EMatchBehaviorScoreVariance}
   */
  public enum EMatchBehaviorScoreVariance
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchBehaviorScoreVariance_Invalid = 0;</code>
     */
    k_EMatchBehaviorScoreVariance_Invalid(0, 0),
    /**
     * <code>k_EMatchBehaviorScoreVariance_Low = 1;</code>
     */
    k_EMatchBehaviorScoreVariance_Low(1, 1),
    /**
     * <code>k_EMatchBehaviorScoreVariance_Medium = 2;</code>
     */
    k_EMatchBehaviorScoreVariance_Medium(2, 2),
    /**
     * <code>k_EMatchBehaviorScoreVariance_High = 3;</code>
     */
    k_EMatchBehaviorScoreVariance_High(3, 3),
    ;

    /**
     * <code>k_EMatchBehaviorScoreVariance_Invalid = 0;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_Invalid_VALUE = 0;
    /**
     * <code>k_EMatchBehaviorScoreVariance_Low = 1;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_Low_VALUE = 1;
    /**
     * <code>k_EMatchBehaviorScoreVariance_Medium = 2;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_Medium_VALUE = 2;
    /**
     * <code>k_EMatchBehaviorScoreVariance_High = 3;</code>
     */
    public static final int k_EMatchBehaviorScoreVariance_High_VALUE = 3;


    public final int getNumber() { return value; }

    public static EMatchBehaviorScoreVariance valueOf(int value) {
      switch (value) {
        case 0: return k_EMatchBehaviorScoreVariance_Invalid;
        case 1: return k_EMatchBehaviorScoreVariance_Low;
        case 2: return k_EMatchBehaviorScoreVariance_Medium;
        case 3: return k_EMatchBehaviorScoreVariance_High;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchBehaviorScoreVariance>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EMatchBehaviorScoreVariance>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchBehaviorScoreVariance>() {
            public EMatchBehaviorScoreVariance findValueByNumber(int number) {
              return EMatchBehaviorScoreVariance.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.getDescriptor().getEnumTypes().get(0);
    }

    private static final EMatchBehaviorScoreVariance[] VALUES = values();

    public static EMatchBehaviorScoreVariance valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EMatchBehaviorScoreVariance(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMatchBehaviorScoreVariance)
  }

  public interface CLobbyTimedRewardDetailsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CLobbyTimedRewardDetails)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    boolean hasItemDefIndex();
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    int getItemDefIndex();

    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean hasIsSupplyCrate();
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    boolean getIsSupplyCrate();

    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean hasIsTimedDrop();
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    boolean getIsTimedDrop();

    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    boolean hasAccountId();
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    int getAccountId();

    /**
     * <code>optional uint32 origin = 6;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    int getOrigin();
  }
  /**
   * Protobuf type {@code CLobbyTimedRewardDetails}
   */
  public static final class CLobbyTimedRewardDetails extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CLobbyTimedRewardDetails)
      CLobbyTimedRewardDetailsOrBuilder {
    // Use CLobbyTimedRewardDetails.newBuilder() to construct.
    private CLobbyTimedRewardDetails(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CLobbyTimedRewardDetails(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CLobbyTimedRewardDetails defaultInstance;
    public static CLobbyTimedRewardDetails getDefaultInstance() {
      return defaultInstance;
    }

    public CLobbyTimedRewardDetails getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CLobbyTimedRewardDetails(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              itemDefIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isSupplyCrate_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              isTimedDrop_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              accountId_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              origin_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CLobbyTimedRewardDetails_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.Builder.class);
    }

    public static com.google.protobuf.Parser<CLobbyTimedRewardDetails> PARSER =
        new com.google.protobuf.AbstractParser<CLobbyTimedRewardDetails>() {
      public CLobbyTimedRewardDetails parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CLobbyTimedRewardDetails(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CLobbyTimedRewardDetails> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ITEM_DEF_INDEX_FIELD_NUMBER = 2;
    private int itemDefIndex_;
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public boolean hasItemDefIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 item_def_index = 2;</code>
     */
    public int getItemDefIndex() {
      return itemDefIndex_;
    }

    public static final int IS_SUPPLY_CRATE_FIELD_NUMBER = 3;
    private boolean isSupplyCrate_;
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean hasIsSupplyCrate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool is_supply_crate = 3;</code>
     */
    public boolean getIsSupplyCrate() {
      return isSupplyCrate_;
    }

    public static final int IS_TIMED_DROP_FIELD_NUMBER = 4;
    private boolean isTimedDrop_;
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean hasIsTimedDrop() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool is_timed_drop = 4;</code>
     */
    public boolean getIsTimedDrop() {
      return isTimedDrop_;
    }

    public static final int ACCOUNT_ID_FIELD_NUMBER = 5;
    private int accountId_;
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public boolean hasAccountId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 account_id = 5;</code>
     */
    public int getAccountId() {
      return accountId_;
    }

    public static final int ORIGIN_FIELD_NUMBER = 6;
    private int origin_;
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 origin = 6;</code>
     */
    public int getOrigin() {
      return origin_;
    }

    private void initFields() {
      itemDefIndex_ = 0;
      isSupplyCrate_ = false;
      isTimedDrop_ = false;
      accountId_ = 0;
      origin_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, origin_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, itemDefIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isSupplyCrate_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isTimedDrop_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, accountId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, origin_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CLobbyTimedRewardDetails}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CLobbyTimedRewardDetails)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetailsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CLobbyTimedRewardDetails_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        itemDefIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        isSupplyCrate_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        isTimedDrop_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        accountId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        origin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CLobbyTimedRewardDetails_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.itemDefIndex_ = itemDefIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isSupplyCrate_ = isSupplyCrate_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isTimedDrop_ = isTimedDrop_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.accountId_ = accountId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.origin_ = origin_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails.getDefaultInstance()) return this;
        if (other.hasItemDefIndex()) {
          setItemDefIndex(other.getItemDefIndex());
        }
        if (other.hasIsSupplyCrate()) {
          setIsSupplyCrate(other.getIsSupplyCrate());
        }
        if (other.hasIsTimedDrop()) {
          setIsTimedDrop(other.getIsTimedDrop());
        }
        if (other.hasAccountId()) {
          setAccountId(other.getAccountId());
        }
        if (other.hasOrigin()) {
          setOrigin(other.getOrigin());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CLobbyTimedRewardDetails) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int itemDefIndex_ ;
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public boolean hasItemDefIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public int getItemDefIndex() {
        return itemDefIndex_;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder setItemDefIndex(int value) {
        bitField0_ |= 0x00000001;
        itemDefIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 item_def_index = 2;</code>
       */
      public Builder clearItemDefIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        itemDefIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean isSupplyCrate_ ;
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean hasIsSupplyCrate() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public boolean getIsSupplyCrate() {
        return isSupplyCrate_;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder setIsSupplyCrate(boolean value) {
        bitField0_ |= 0x00000002;
        isSupplyCrate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_supply_crate = 3;</code>
       */
      public Builder clearIsSupplyCrate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isSupplyCrate_ = false;
        onChanged();
        return this;
      }

      private boolean isTimedDrop_ ;
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean hasIsTimedDrop() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public boolean getIsTimedDrop() {
        return isTimedDrop_;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder setIsTimedDrop(boolean value) {
        bitField0_ |= 0x00000004;
        isTimedDrop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_timed_drop = 4;</code>
       */
      public Builder clearIsTimedDrop() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isTimedDrop_ = false;
        onChanged();
        return this;
      }

      private int accountId_ ;
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public int getAccountId() {
        return accountId_;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder setAccountId(int value) {
        bitField0_ |= 0x00000008;
        accountId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 account_id = 5;</code>
       */
      public Builder clearAccountId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        accountId_ = 0;
        onChanged();
        return this;
      }

      private int origin_ ;
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public int getOrigin() {
        return origin_;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder setOrigin(int value) {
        bitField0_ |= 0x00000010;
        origin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 origin = 6;</code>
       */
      public Builder clearOrigin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        origin_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CLobbyTimedRewardDetails)
    }

    static {
      defaultInstance = new CLobbyTimedRewardDetails(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CLobbyTimedRewardDetails)
  }

  public interface CMsgMatchMatchmakingStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgMatchMatchmakingStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     */
    boolean hasAverageQueueTime();
    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     */
    int getAverageQueueTime();

    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     */
    boolean hasMaximumQueueTime();
    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     */
    int getMaximumQueueTime();

    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     */
    boolean hasBehaviorScoreVariance();
    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance getBehaviorScoreVariance();
  }
  /**
   * Protobuf type {@code CMsgMatchMatchmakingStats}
   */
  public static final class CMsgMatchMatchmakingStats extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgMatchMatchmakingStats)
      CMsgMatchMatchmakingStatsOrBuilder {
    // Use CMsgMatchMatchmakingStats.newBuilder() to construct.
    private CMsgMatchMatchmakingStats(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgMatchMatchmakingStats(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgMatchMatchmakingStats defaultInstance;
    public static CMsgMatchMatchmakingStats getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgMatchMatchmakingStats getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgMatchMatchmakingStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              averageQueueTime_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maximumQueueTime_ = input.readUInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance value = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                behaviorScoreVariance_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMsgMatchMatchmakingStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgMatchMatchmakingStats> PARSER =
        new com.google.protobuf.AbstractParser<CMsgMatchMatchmakingStats>() {
      public CMsgMatchMatchmakingStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgMatchMatchmakingStats(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgMatchMatchmakingStats> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int AVERAGE_QUEUE_TIME_FIELD_NUMBER = 1;
    private int averageQueueTime_;
    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     */
    public boolean hasAverageQueueTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 average_queue_time = 1;</code>
     */
    public int getAverageQueueTime() {
      return averageQueueTime_;
    }

    public static final int MAXIMUM_QUEUE_TIME_FIELD_NUMBER = 2;
    private int maximumQueueTime_;
    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     */
    public boolean hasMaximumQueueTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 maximum_queue_time = 2;</code>
     */
    public int getMaximumQueueTime() {
      return maximumQueueTime_;
    }

    public static final int BEHAVIOR_SCORE_VARIANCE_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance behaviorScoreVariance_;
    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     */
    public boolean hasBehaviorScoreVariance() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance getBehaviorScoreVariance() {
      return behaviorScoreVariance_;
    }

    private void initFields() {
      averageQueueTime_ = 0;
      maximumQueueTime_ = 0;
      behaviorScoreVariance_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance.k_EMatchBehaviorScoreVariance_Invalid;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, averageQueueTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, maximumQueueTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, behaviorScoreVariance_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, averageQueueTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, maximumQueueTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, behaviorScoreVariance_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgMatchMatchmakingStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgMatchMatchmakingStats)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMsgMatchMatchmakingStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        averageQueueTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        maximumQueueTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        behaviorScoreVariance_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance.k_EMatchBehaviorScoreVariance_Invalid;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMsgMatchMatchmakingStats_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.averageQueueTime_ = averageQueueTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maximumQueueTime_ = maximumQueueTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.behaviorScoreVariance_ = behaviorScoreVariance_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats.getDefaultInstance()) return this;
        if (other.hasAverageQueueTime()) {
          setAverageQueueTime(other.getAverageQueueTime());
        }
        if (other.hasMaximumQueueTime()) {
          setMaximumQueueTime(other.getMaximumQueueTime());
        }
        if (other.hasBehaviorScoreVariance()) {
          setBehaviorScoreVariance(other.getBehaviorScoreVariance());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMsgMatchMatchmakingStats) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int averageQueueTime_ ;
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       */
      public boolean hasAverageQueueTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       */
      public int getAverageQueueTime() {
        return averageQueueTime_;
      }
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       */
      public Builder setAverageQueueTime(int value) {
        bitField0_ |= 0x00000001;
        averageQueueTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 average_queue_time = 1;</code>
       */
      public Builder clearAverageQueueTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        averageQueueTime_ = 0;
        onChanged();
        return this;
      }

      private int maximumQueueTime_ ;
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       */
      public boolean hasMaximumQueueTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       */
      public int getMaximumQueueTime() {
        return maximumQueueTime_;
      }
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       */
      public Builder setMaximumQueueTime(int value) {
        bitField0_ |= 0x00000002;
        maximumQueueTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 maximum_queue_time = 2;</code>
       */
      public Builder clearMaximumQueueTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maximumQueueTime_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance behaviorScoreVariance_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance.k_EMatchBehaviorScoreVariance_Invalid;
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       */
      public boolean hasBehaviorScoreVariance() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance getBehaviorScoreVariance() {
        return behaviorScoreVariance_;
      }
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       */
      public Builder setBehaviorScoreVariance(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        behaviorScoreVariance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .EMatchBehaviorScoreVariance behavior_score_variance = 3 [default = k_EMatchBehaviorScoreVariance_Invalid];</code>
       */
      public Builder clearBehaviorScoreVariance() {
        bitField0_ = (bitField0_ & ~0x00000004);
        behaviorScoreVariance_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.EMatchBehaviorScoreVariance.k_EMatchBehaviorScoreVariance_Invalid;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgMatchMatchmakingStats)
    }

    static {
      defaultInstance = new CMsgMatchMatchmakingStats(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgMatchMatchmakingStats)
  }

  public interface CMvpDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMvpData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum> 
        getMvpsList();
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum getMvps(int index);
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    int getMvpsCount();
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder> 
        getMvpsOrBuilderList();
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder getMvpsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code CMvpData}
   */
  public static final class CMvpData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMvpData)
      CMvpDataOrBuilder {
    // Use CMvpData.newBuilder() to construct.
    private CMvpData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMvpData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMvpData defaultInstance;
    public static CMvpData getDefaultInstance() {
      return defaultInstance;
    }

    public CMvpData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMvpData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                mvps_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum>();
                mutable_bitField0_ |= 0x00000001;
              }
              mvps_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          mvps_ = java.util.Collections.unmodifiableList(mvps_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.Builder.class);
    }

    public static com.google.protobuf.Parser<CMvpData> PARSER =
        new com.google.protobuf.AbstractParser<CMvpData>() {
      public CMvpData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMvpData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMvpData> getParserForType() {
      return PARSER;
    }

    public interface MvpDatumOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMvpData.MvpDatum)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 slot = 1;</code>
       */
      boolean hasSlot();
      /**
       * <code>optional uint32 slot = 1;</code>
       */
      int getSlot();

      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade> 
          getAccoladesList();
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade getAccolades(int index);
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      int getAccoladesCount();
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
          getAccoladesOrBuilderList();
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder getAccoladesOrBuilder(
          int index);

      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      boolean hasAccountId();
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      int getAccountId();
    }
    /**
     * Protobuf type {@code CMvpData.MvpDatum}
     */
    public static final class MvpDatum extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMvpData.MvpDatum)
        MvpDatumOrBuilder {
      // Use MvpDatum.newBuilder() to construct.
      private MvpDatum(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MvpDatum(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MvpDatum defaultInstance;
      public static MvpDatum getDefaultInstance() {
        return defaultInstance;
      }

      public MvpDatum getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MvpDatum(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                slot_ = input.readUInt32();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  accolades_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade>();
                  mutable_bitField0_ |= 0x00000002;
                }
                accolades_.add(input.readMessage(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.PARSER, extensionRegistry));
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                accountId_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            accolades_ = java.util.Collections.unmodifiableList(accolades_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder.class);
      }

      public static com.google.protobuf.Parser<MvpDatum> PARSER =
          new com.google.protobuf.AbstractParser<MvpDatum>() {
        public MvpDatum parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MvpDatum(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MvpDatum> getParserForType() {
        return PARSER;
      }

      public interface MvpAccoladeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:CMvpData.MvpDatum.MvpAccolade)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         */
        boolean hasType();
        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         */
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType getType();

        /**
         * <code>optional float detail_value = 2;</code>
         */
        boolean hasDetailValue();
        /**
         * <code>optional float detail_value = 2;</code>
         */
        float getDetailValue();
      }
      /**
       * Protobuf type {@code CMvpData.MvpDatum.MvpAccolade}
       */
      public static final class MvpAccolade extends
          com.google.protobuf.GeneratedMessage implements
          // @@protoc_insertion_point(message_implements:CMvpData.MvpDatum.MvpAccolade)
          MvpAccoladeOrBuilder {
        // Use MvpAccolade.newBuilder() to construct.
        private MvpAccolade(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private MvpAccolade(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final MvpAccolade defaultInstance;
        public static MvpAccolade getDefaultInstance() {
          return defaultInstance;
        }

        public MvpAccolade getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private MvpAccolade(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType value = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    type_ = value;
                  }
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  detailValue_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder.class);
        }

        public static com.google.protobuf.Parser<MvpAccolade> PARSER =
            new com.google.protobuf.AbstractParser<MvpAccolade>() {
          public MvpAccolade parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new MvpAccolade(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<MvpAccolade> getParserForType() {
          return PARSER;
        }

        /**
         * Protobuf enum {@code CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType}
         */
        public enum MvpAccoladeType
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>kills = 1;</code>
           */
          kills(0, 1),
          /**
           * <code>deaths = 2;</code>
           */
          deaths(1, 2),
          /**
           * <code>assists = 3;</code>
           */
          assists(2, 3),
          /**
           * <code>net_worth = 5;</code>
           */
          net_worth(3, 5),
          /**
           * <code>item_value = 6;</code>
           */
          item_value(4, 6),
          /**
           * <code>support_gold_spent = 7;</code>
           */
          support_gold_spent(5, 7),
          /**
           * <code>wards_placed = 8;</code>
           */
          wards_placed(6, 8),
          /**
           * <code>dewards = 9;</code>
           */
          dewards(7, 9),
          /**
           * <code>camps_stacked = 10;</code>
           */
          camps_stacked(8, 10),
          /**
           * <code>last_hits = 11;</code>
           */
          last_hits(9, 11),
          /**
           * <code>denies = 12;</code>
           */
          denies(10, 12),
          /**
           * <code>kKillEaterEvent_Killing_Sprees = 13;</code>
           */
          kKillEaterEvent_Killing_Sprees(11, 13),
          /**
           * <code>kKillEaterEvent_Godlike = 14;</code>
           */
          kKillEaterEvent_Godlike(12, 14),
          /**
           * <code>kKillEaterEvent_Towers_Destroyed = 15;</code>
           */
          kKillEaterEvent_Towers_Destroyed(13, 15),
          /**
           * <code>kKillEaterEventType_Invoker_SunstrikeKills = 16;</code>
           */
          kKillEaterEventType_Invoker_SunstrikeKills(14, 16),
          /**
           * <code>kKillEaterEventType_Axe_Culls = 17;</code>
           */
          kKillEaterEventType_Axe_Culls(15, 17),
          /**
           * <code>kKillEaterEventType_Axe_BattleHungerKills = 18;</code>
           */
          kKillEaterEventType_Axe_BattleHungerKills(16, 18),
          /**
           * <code>kKillEaterEventType_LowHealthKills = 19;</code>
           */
          kKillEaterEventType_LowHealthKills(17, 19),
          /**
           * <code>kKillEaterEventType_Invoker_TornadoKills = 20;</code>
           */
          kKillEaterEventType_Invoker_TornadoKills(18, 20),
          /**
           * <code>kKillEaterEventType_Sven_DoubleStuns = 21;</code>
           */
          kKillEaterEventType_Sven_DoubleStuns(19, 21),
          /**
           * <code>kKillEaterEventType_Sven_WarcryAssists = 22;</code>
           */
          kKillEaterEventType_Sven_WarcryAssists(20, 22),
          /**
           * <code>kKillEaterEventType_Sven_CleaveDoubleKills = 23;</code>
           */
          kKillEaterEventType_Sven_CleaveDoubleKills(21, 23),
          /**
           * <code>kKillEaterEventType_Sven_TeleportInterrupts = 24;</code>
           */
          kKillEaterEventType_Sven_TeleportInterrupts(22, 24),
          /**
           * <code>kKillEaterEventType_Faceless_MultiChrono = 25;</code>
           */
          kKillEaterEventType_Faceless_MultiChrono(23, 25),
          /**
           * <code>kKillEaterEventType_Faceless_ChronoKills = 26;</code>
           */
          kKillEaterEventType_Faceless_ChronoKills(24, 26),
          /**
           * <code>kKillEaterEventType_Ursa_MultiShocks = 27;</code>
           */
          kKillEaterEventType_Ursa_MultiShocks(25, 27),
          /**
           * <code>kKillEaterEventType_RoshanKills = 28;</code>
           */
          kKillEaterEventType_RoshanKills(26, 28),
          /**
           * <code>kKillEaterEventType_Lion_FingerKills = 29;</code>
           */
          kKillEaterEventType_Lion_FingerKills(27, 29),
          /**
           * <code>kKillEaterEventType_Riki_SmokedHeroKills = 32;</code>
           */
          kKillEaterEventType_Riki_SmokedHeroKills(28, 32),
          /**
           * <code>kKillEaterEventType_HeroesRevealedWithDust = 33;</code>
           */
          kKillEaterEventType_HeroesRevealedWithDust(29, 33),
          /**
           * <code>kKillEaterEventType_SkeletonKing_ReincarnationKills = 34;</code>
           */
          kKillEaterEventType_SkeletonKing_ReincarnationKills(30, 34),
          /**
           * <code>kKillEaterEventType_Skywrath_FlareKills = 35;</code>
           */
          kKillEaterEventType_Skywrath_FlareKills(31, 35),
          /**
           * <code>kKillEaterEventType_Leshrac_SplitEarthStuns = 36;</code>
           */
          kKillEaterEventType_Leshrac_SplitEarthStuns(32, 36),
          /**
           * <code>kKillEaterEventType_Mirana_MaxStunArrows = 37;</code>
           */
          kKillEaterEventType_Mirana_MaxStunArrows(33, 37),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits = 38;</code>
           */
          kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits(34, 38),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerCrits = 39;</code>
           */
          kKillEaterEventType_PhantomAssassin_DaggerCrits(35, 39),
          /**
           * <code>kKillEaterEventType_Meepo_Earthbinds = 40;</code>
           */
          kKillEaterEventType_Meepo_Earthbinds(36, 40),
          /**
           * <code>kKillEaterEventType_Bloodseeker_RuptureKills = 41;</code>
           */
          kKillEaterEventType_Bloodseeker_RuptureKills(37, 41),
          /**
           * <code>kKillEaterEventType_Slark_LeashedEnemies = 42;</code>
           */
          kKillEaterEventType_Slark_LeashedEnemies(38, 42),
          /**
           * <code>kKillEaterEventType_Disruptor_FountainGlimpses = 43;</code>
           */
          kKillEaterEventType_Disruptor_FountainGlimpses(39, 43),
          /**
           * <code>kKillEaterEventType_Rubick_SpellsStolen = 44;</code>
           */
          kKillEaterEventType_Rubick_SpellsStolen(40, 44),
          /**
           * <code>kKillEaterEventType_Rubick_UltimatesStolen = 45;</code>
           */
          kKillEaterEventType_Rubick_UltimatesStolen(41, 45),
          /**
           * <code>kKillEaterEventType_Doom_EnemiesDoomed = 46;</code>
           */
          kKillEaterEventType_Doom_EnemiesDoomed(42, 46),
          /**
           * <code>kKillEaterEventType_Omniknight_Purifications = 47;</code>
           */
          kKillEaterEventType_Omniknight_Purifications(43, 47),
          /**
           * <code>kKillEaterEventType_Omniknight_AlliesRepelled = 48;</code>
           */
          kKillEaterEventType_Omniknight_AlliesRepelled(44, 48),
          /**
           * <code>kKillEaterEventType_Omniknight_EnemiesRepelled = 49;</code>
           */
          kKillEaterEventType_Omniknight_EnemiesRepelled(45, 49),
          /**
           * <code>kKillEaterEventType_Warlock_FiveHeroFatalBonds = 50;</code>
           */
          kKillEaterEventType_Warlock_FiveHeroFatalBonds(46, 50),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FrostbittenEnemies = 51;</code>
           */
          kKillEaterEventType_CrystalMaiden_FrostbittenEnemies(47, 51),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_CrystalNovas = 52;</code>
           */
          kKillEaterEventType_CrystalMaiden_CrystalNovas(48, 52),
          /**
           * <code>kKillEaterEventType_Kunkka_DoubleHeroTorrents = 53;</code>
           */
          kKillEaterEventType_Kunkka_DoubleHeroTorrents(49, 53),
          /**
           * <code>kKillEaterEventType_Kunkka_TripleHeroGhostShips = 54;</code>
           */
          kKillEaterEventType_Kunkka_TripleHeroGhostShips(50, 54),
          /**
           * <code>kKillEaterEventType_NagaSiren_EnemiesEnsnared = 55;</code>
           */
          kKillEaterEventType_NagaSiren_EnemiesEnsnared(51, 55),
          /**
           * <code>kKillEaterEventType_NagaSiren_TripleHeroRipTides = 56;</code>
           */
          kKillEaterEventType_NagaSiren_TripleHeroRipTides(52, 56),
          /**
           * <code>kKillEaterEventType_Lycan_KillsDuringShapeshift = 57;</code>
           */
          kKillEaterEventType_Lycan_KillsDuringShapeshift(53, 57),
          /**
           * <code>kKillEaterEventType_Pudge_DismemberKills = 58;</code>
           */
          kKillEaterEventType_Pudge_DismemberKills(54, 58),
          /**
           * <code>kKillEaterEventType_Pudge_EnemyHeroesHooked = 59;</code>
           */
          kKillEaterEventType_Pudge_EnemyHeroesHooked(55, 59),
          /**
           * <code>kKillEaterEventType_Pudge_HookKills = 60;</code>
           */
          kKillEaterEventType_Pudge_HookKills(56, 60),
          /**
           * <code>kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked = 61;</code>
           */
          kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked(57, 61),
          /**
           * <code>kKillEaterEventType_DrowRanger_EnemiesSilenced = 62;</code>
           */
          kKillEaterEventType_DrowRanger_EnemiesSilenced(58, 62),
          /**
           * <code>kKillEaterEventType_DrowRanger_MultiHeroSilences = 63;</code>
           */
          kKillEaterEventType_DrowRanger_MultiHeroSilences(59, 63),
          /**
           * <code>kKillEaterEventType_DrowRanger_SilencedKills = 64;</code>
           */
          kKillEaterEventType_DrowRanger_SilencedKills(60, 64),
          /**
           * <code>kKillEaterEventType_DrowRanger_FrostArrowKills = 65;</code>
           */
          kKillEaterEventType_DrowRanger_FrostArrowKills(61, 65),
          /**
           * <code>kKillEaterEventType_DragonKnight_KillsInDragonForm = 66;</code>
           */
          kKillEaterEventType_DragonKnight_KillsInDragonForm(62, 66),
          /**
           * <code>kKillEaterEventType_DragonKnight_BreatheFireKills = 67;</code>
           */
          kKillEaterEventType_DragonKnight_BreatheFireKills(63, 67),
          /**
           * <code>kKillEaterEventType_DragonKnight_SplashKills = 68;</code>
           */
          kKillEaterEventType_DragonKnight_SplashKills(64, 68),
          /**
           * <code>kKillEaterEventType_WitchDoctor_CaskStuns = 69;</code>
           */
          kKillEaterEventType_WitchDoctor_CaskStuns(65, 69),
          /**
           * <code>kKillEaterEventType_WitchDoctor_MaledictKills = 70;</code>
           */
          kKillEaterEventType_WitchDoctor_MaledictKills(66, 70),
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroMaledicts = 71;</code>
           */
          kKillEaterEventType_WitchDoctor_MultiHeroMaledicts(67, 71),
          /**
           * <code>kKillEaterEventType_WitchDoctor_DeathWardKills = 72;</code>
           */
          kKillEaterEventType_WitchDoctor_DeathWardKills(68, 72),
          /**
           * <code>kKillEaterEventType_Disruptor_ThunderStrikeKills = 73;</code>
           */
          kKillEaterEventType_Disruptor_ThunderStrikeKills(69, 73),
          /**
           * <code>kKillEaterEventType_Disruptor_HeroesGlimpsed = 74;</code>
           */
          kKillEaterEventType_Disruptor_HeroesGlimpsed(70, 74),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FreezingFieldKills = 75;</code>
           */
          kKillEaterEventType_CrystalMaiden_FreezingFieldKills(71, 75),
          /**
           * <code>kKillEaterEventType_Medusa_EnemiesPetrified = 77;</code>
           */
          kKillEaterEventType_Medusa_EnemiesPetrified(72, 77),
          /**
           * <code>kKillEaterEventType_Warlock_FatalBondsKills = 78;</code>
           */
          kKillEaterEventType_Warlock_FatalBondsKills(73, 78),
          /**
           * <code>kKillEaterEventType_Warlock_GolemKills = 79;</code>
           */
          kKillEaterEventType_Warlock_GolemKills(74, 79),
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunches = 80;</code>
           */
          kKillEaterEventType_Tusk_WalrusPunches(75, 80),
          /**
           * <code>kKillEaterEventType_Tusk_SnowballStuns = 81;</code>
           */
          kKillEaterEventType_Tusk_SnowballStuns(76, 81),
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureStuns = 82;</code>
           */
          kKillEaterEventType_Earthshaker_FissureStuns(77, 82),
          /**
           * <code>kKillEaterEventType_Earthshaker_3HeroEchoslams = 83;</code>
           */
          kKillEaterEventType_Earthshaker_3HeroEchoslams(78, 83),
          /**
           * <code>kKillEaterEventType_SandKing_BurrowstrikeStuns = 84;</code>
           */
          kKillEaterEventType_SandKing_BurrowstrikeStuns(79, 84),
          /**
           * <code>kKillEaterEventType_SandKing_EpicenterKills = 85;</code>
           */
          kKillEaterEventType_SandKing_EpicenterKills(80, 85),
          /**
           * <code>kKillEaterEventType_SkywrathMage_AncientSealKills = 86;</code>
           */
          kKillEaterEventType_SkywrathMage_AncientSealKills(81, 86),
          /**
           * <code>kKillEaterEventType_SkywrathMage_ConcussiveShotKills = 87;</code>
           */
          kKillEaterEventType_SkywrathMage_ConcussiveShotKills(82, 87),
          /**
           * <code>kKillEaterEventType_Luna_LucentBeamKills = 88;</code>
           */
          kKillEaterEventType_Luna_LucentBeamKills(83, 88),
          /**
           * <code>kKillEaterEventType_Luna_EclipseKills = 89;</code>
           */
          kKillEaterEventType_Luna_EclipseKills(84, 89),
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_IlluminateKills = 90;</code>
           */
          kKillEaterEventType_KeeperOfTheLight_IlluminateKills(85, 90),
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns = 91;</code>
           */
          kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns(86, 91),
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled = 92;</code>
           */
          kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled(87, 92),
          /**
           * <code>kKillEaterEventType_LegionCommander_DuelsWon = 93;</code>
           */
          kKillEaterEventType_LegionCommander_DuelsWon(88, 93),
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarKills = 94;</code>
           */
          kKillEaterEventType_Beastmaster_RoarKills(89, 94),
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarMultiKills = 95;</code>
           */
          kKillEaterEventType_Beastmaster_RoarMultiKills(90, 95),
          /**
           * <code>kKillEaterEventType_Windrunner_FocusFireBuildings = 96;</code>
           */
          kKillEaterEventType_Windrunner_FocusFireBuildings(91, 96),
          /**
           * <code>kKillEaterEventType_Windrunner_PowershotKills = 97;</code>
           */
          kKillEaterEventType_Windrunner_PowershotKills(92, 97),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerLastHits = 98;</code>
           */
          kKillEaterEventType_PhantomAssassin_DaggerLastHits(93, 98),
          /**
           * <code>kKillEaterEventType_PhantomAssassin_PhantomStrikeKills = 99;</code>
           */
          kKillEaterEventType_PhantomAssassin_PhantomStrikeKills(94, 99),
          /**
           * <code>kKillEaterEventType_DeathProphet_CryptSwarmKills = 100;</code>
           */
          kKillEaterEventType_DeathProphet_CryptSwarmKills(95, 100),
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismBuildingKills = 101;</code>
           */
          kKillEaterEventType_DeathProphet_ExorcismBuildingKills(96, 101),
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned = 102;</code>
           */
          kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned(97, 102),
          /**
           * <code>kKillEaterEventType_DeathProphet_MultiHeroSilences = 103;</code>
           */
          kKillEaterEventType_DeathProphet_MultiHeroSilences(98, 103),
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilKills = 104;</code>
           */
          kKillEaterEventType_Abaddon_MistCoilKills(99, 104),
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilHealed = 105;</code>
           */
          kKillEaterEventType_Abaddon_MistCoilHealed(100, 105),
          /**
           * <code>kKillEaterEventType_Abaddon_AphoticShieldKills = 106;</code>
           */
          kKillEaterEventType_Abaddon_AphoticShieldKills(101, 106),
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostTripleKills = 107;</code>
           */
          kKillEaterEventType_Lich_ChainFrostTripleKills(102, 107),
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostMultiKills = 108;</code>
           */
          kKillEaterEventType_Lich_ChainFrostMultiKills(103, 108),
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostBounces = 109;</code>
           */
          kKillEaterEventType_Lich_ChainFrostBounces(104, 109),
          /**
           * <code>kKillEaterEventType_Ursa_EnragedKills = 110;</code>
           */
          kKillEaterEventType_Ursa_EnragedKills(105, 110),
          /**
           * <code>kKillEaterEventType_Ursa_EarthshockKills = 111;</code>
           */
          kKillEaterEventType_Ursa_EarthshockKills(106, 111),
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeKills = 112;</code>
           */
          kKillEaterEventType_Lina_LagunaBladeKills(107, 112),
          /**
           * <code>kKillEaterEventType_Lina_DragonSlaveKills = 113;</code>
           */
          kKillEaterEventType_Lina_DragonSlaveKills(108, 113),
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeArrayStuns = 114;</code>
           */
          kKillEaterEventType_Lina_LightStrikeArrayStuns(109, 114),
          /**
           * <code>kKillEaterEvent_Barracks_Destroyed = 115;</code>
           */
          kKillEaterEvent_Barracks_Destroyed(110, 115),
          /**
           * <code>kKillEaterEvent_TemplarAssassin_MeldKills = 116;</code>
           */
          kKillEaterEvent_TemplarAssassin_MeldKills(111, 116),
          /**
           * <code>kKillEaterEvent_TemplarAssassin_HeroesSlowed = 117;</code>
           */
          kKillEaterEvent_TemplarAssassin_HeroesSlowed(112, 117),
          /**
           * <code>kKillEaterEvent_Sniper_AssassinationKills = 118;</code>
           */
          kKillEaterEvent_Sniper_AssassinationKills(113, 118),
          /**
           * <code>kKillEaterEvent_Sniper_HeadshotStuns = 119;</code>
           */
          kKillEaterEvent_Sniper_HeadshotStuns(114, 119),
          /**
           * <code>kKillEaterEvent_EarthSpirit_SmashStuns = 120;</code>
           */
          kKillEaterEvent_EarthSpirit_SmashStuns(115, 120),
          /**
           * <code>kKillEaterEvent_EarthSpirit_GripSilences = 121;</code>
           */
          kKillEaterEvent_EarthSpirit_GripSilences(116, 121),
          /**
           * <code>kKillEaterEvent_ShadowShaman_ShackleKills = 122;</code>
           */
          kKillEaterEvent_ShadowShaman_ShackleKills(117, 122),
          /**
           * <code>kKillEaterEvent_ShadowShaman_HexKills = 123;</code>
           */
          kKillEaterEvent_ShadowShaman_HexKills(118, 123),
          /**
           * <code>kKillEaterEvent_Centaur_EnemiesStomped = 124;</code>
           */
          kKillEaterEvent_Centaur_EnemiesStomped(119, 124),
          /**
           * <code>kKillEaterEvent_Centaur_DoubleEdgeKills = 125;</code>
           */
          kKillEaterEvent_Centaur_DoubleEdgeKills(120, 125),
          /**
           * <code>kKillEaterEvent_Centaur_ReturnKills = 126;</code>
           */
          kKillEaterEvent_Centaur_ReturnKills(121, 126),
          /**
           * <code>kKillEaterEvent_EmberSpirit_EnemiesChained = 127;</code>
           */
          kKillEaterEvent_EmberSpirit_EnemiesChained(122, 127),
          /**
           * <code>kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills = 128;</code>
           */
          kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills(123, 128),
          /**
           * <code>kKillEaterEvent_Puck_OrbKills = 129;</code>
           */
          kKillEaterEvent_Puck_OrbKills(124, 129),
          /**
           * <code>kKillEaterEvent_VengefulSpirit_EnemiesStunned = 130;</code>
           */
          kKillEaterEvent_VengefulSpirit_EnemiesStunned(125, 130),
          /**
           * <code>kKillEaterEvent_Lifestealer_RageKills = 131;</code>
           */
          kKillEaterEvent_Lifestealer_RageKills(126, 131),
          /**
           * <code>kKillEaterEvent_Lifestealer_OpenWoundsKills = 132;</code>
           */
          kKillEaterEvent_Lifestealer_OpenWoundsKills(127, 132),
          /**
           * <code>kKillEaterEvent_Lifestealer_InfestKills = 133;</code>
           */
          kKillEaterEvent_Lifestealer_InfestKills(128, 133),
          /**
           * <code>kKillEaterEvent_ElderTitan_SpiritKills = 134;</code>
           */
          kKillEaterEvent_ElderTitan_SpiritKills(129, 134),
          /**
           * <code>kKillEaterEvent_ElderTitan_GoodStomps = 135;</code>
           */
          kKillEaterEvent_ElderTitan_GoodStomps(130, 135),
          /**
           * <code>kKillEaterEvent_Clockwerk_RocketKills = 136;</code>
           */
          kKillEaterEvent_Clockwerk_RocketKills(131, 136),
          /**
           * <code>kKillEaterEvent_Clockwerk_BlindRocketKills = 137;</code>
           */
          kKillEaterEvent_Clockwerk_BlindRocketKills(132, 137),
          /**
           * <code>kKillEaterEvent_StormSpirit_BallKills = 138;</code>
           */
          kKillEaterEvent_StormSpirit_BallKills(133, 138),
          /**
           * <code>kKillEaterEvent_StormSpirit_DoubleRemnantKills = 139;</code>
           */
          kKillEaterEvent_StormSpirit_DoubleRemnantKills(134, 139),
          /**
           * <code>kKillEaterEvent_StormSpirit_VortexKills = 140;</code>
           */
          kKillEaterEvent_StormSpirit_VortexKills(135, 140),
          /**
           * <code>kKillEaterEvent_Tinker_DoubleMissileKills = 141;</code>
           */
          kKillEaterEvent_Tinker_DoubleMissileKills(136, 141),
          /**
           * <code>kKillEaterEvent_Tinker_LaserKills = 142;</code>
           */
          kKillEaterEvent_Tinker_LaserKills(137, 142),
          /**
           * <code>kKillEaterEvent_Techies_SuicideKills = 143;</code>
           */
          kKillEaterEvent_Techies_SuicideKills(138, 143),
          /**
           * <code>kKillEaterEvent_Techies_LandMineKills = 144;</code>
           */
          kKillEaterEvent_Techies_LandMineKills(139, 144),
          /**
           * <code>kKillEaterEvent_Techies_StatisTrapStuns = 145;</code>
           */
          kKillEaterEvent_Techies_StatisTrapStuns(140, 145),
          /**
           * <code>kKillEaterEvent_Techies_RemoteMineKills = 146;</code>
           */
          kKillEaterEvent_Techies_RemoteMineKills(141, 146),
          /**
           * <code>kKillEaterEvent_ShadowFiend_TripleRazeKills = 147;</code>
           */
          kKillEaterEvent_ShadowFiend_TripleRazeKills(142, 147),
          /**
           * <code>kKillEaterEvent_ShadowFiend_RequiemMultiKills = 148;</code>
           */
          kKillEaterEvent_ShadowFiend_RequiemMultiKills(143, 148),
          /**
           * <code>kKillEaterEvent_ShadowFiend_QRazeKills = 149;</code>
           */
          kKillEaterEvent_ShadowFiend_QRazeKills(144, 149),
          /**
           * <code>kKillEaterEvent_ShadowFiend_WRazeKills = 150;</code>
           */
          kKillEaterEvent_ShadowFiend_WRazeKills(145, 150),
          /**
           * <code>kKillEaterEvent_ShadowFiend_ERazeKills = 151;</code>
           */
          kKillEaterEvent_ShadowFiend_ERazeKills(146, 151),
          /**
           * <code>kKillEaterEvent_Oracle_FatesEdictKills = 152;</code>
           */
          kKillEaterEvent_Oracle_FatesEdictKills(147, 152),
          /**
           * <code>kKillEaterEvent_Oracle_FalsePromiseSaves = 153;</code>
           */
          kKillEaterEvent_Oracle_FalsePromiseSaves(148, 153),
          /**
           * <code>kKillEaterEvent_Juggernaut_OmnislashKills = 154;</code>
           */
          kKillEaterEvent_Juggernaut_OmnislashKills(149, 154),
          /**
           * <code>kKillEaterEventType_SkeletonKing_SkeletonHeroKills = 157;</code>
           */
          kKillEaterEventType_SkeletonKing_SkeletonHeroKills(150, 157),
          /**
           * <code>kKillEaterEventType_DarkWillow_CursedCrownTripleStuns = 158;</code>
           */
          kKillEaterEventType_DarkWillow_CursedCrownTripleStuns(151, 158),
          /**
           * <code>kKillEaterEventType_Dazzle_ShallowGraveSaves = 159;</code>
           */
          kKillEaterEventType_Dazzle_ShallowGraveSaves(152, 159),
          /**
           * <code>kKillEaterEventType_Dazzle_PoisonTouchKills = 160;</code>
           */
          kKillEaterEventType_Dazzle_PoisonTouchKills(153, 160),
          /**
           * <code>kKillEaterEventType_ThreeManMeks = 161;</code>
           */
          kKillEaterEventType_ThreeManMeks(154, 161),
          /**
           * <code>kKillEaterEventType_Viper_PoisonAttackKills = 162;</code>
           */
          kKillEaterEventType_Viper_PoisonAttackKills(155, 162),
          /**
           * <code>kKillEaterEventType_Viper_CorrosiveSkinKills = 163;</code>
           */
          kKillEaterEventType_Viper_CorrosiveSkinKills(156, 163),
          /**
           * <code>kKillEaterEventType_ThreeHeroVeils = 164;</code>
           */
          kKillEaterEventType_ThreeHeroVeils(157, 164),
          /**
           * <code>kKillEaterEventType_Viper_KillsDuringViperStrike = 165;</code>
           */
          kKillEaterEventType_Viper_KillsDuringViperStrike(158, 165),
          /**
           * <code>kKillEaterEventType_SolarCrestKills = 166;</code>
           */
          kKillEaterEventType_SolarCrestKills(159, 166),
          /**
           * <code>kKillEaterEventType_Tiny_TreeThrowKills = 167;</code>
           */
          kKillEaterEventType_Tiny_TreeThrowKills(160, 167),
          /**
           * <code>kKillEaterEventType_Riki_BackstabKills = 168;</code>
           */
          kKillEaterEventType_Riki_BackstabKills(161, 168),
          /**
           * <code>kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns = 169;</code>
           */
          kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns(162, 169),
          /**
           * <code>kKillEaterEventType_Terrorblade_MetamorphosisKills = 170;</code>
           */
          kKillEaterEventType_Terrorblade_MetamorphosisKills(163, 170),
          /**
           * <code>kKillEaterEventType_Lion_GreatFingerKills = 171;</code>
           */
          kKillEaterEventType_Lion_GreatFingerKills(164, 171),
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithAghanims = 172;</code>
           */
          kKillEaterEventType_Antimage_SpellsBlockedWithAghanims(165, 172),
          /**
           * <code>kKillEaterEventType_Antimage_ThreeManManaVoids = 173;</code>
           */
          kKillEaterEventType_Antimage_ThreeManManaVoids(166, 173),
          /**
           * <code>kKillEaterEventType_ArcWarden_TempestDoubleKills = 174;</code>
           */
          kKillEaterEventType_ArcWarden_TempestDoubleKills(167, 174),
          /**
           * <code>kKillEaterEventType_ArcWarden_SparkWraithKills = 175;</code>
           */
          kKillEaterEventType_ArcWarden_SparkWraithKills(168, 175),
          /**
           * <code>kKillEaterEventType_Bane_BrainSapKills = 176;</code>
           */
          kKillEaterEventType_Bane_BrainSapKills(169, 176),
          /**
           * <code>kKillEaterEventType_Bane_FiendsGripKills = 177;</code>
           */
          kKillEaterEventType_Bane_FiendsGripKills(170, 177),
          /**
           * <code>kKillEaterEventType_Batrider_TripleHeroFlamebreaks = 178;</code>
           */
          kKillEaterEventType_Batrider_TripleHeroFlamebreaks(171, 178),
          /**
           * <code>kKillEaterEventType_Batrider_DoubleHeroLassoes = 179;</code>
           */
          kKillEaterEventType_Batrider_DoubleHeroLassoes(172, 179),
          /**
           * <code>kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit = 180;</code>
           */
          kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit(173, 180),
          /**
           * <code>kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks = 181;</code>
           */
          kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks(174, 181),
          /**
           * <code>kKillEaterEventType_Bristleback_TripleHeroNasalGoo = 182;</code>
           */
          kKillEaterEventType_Bristleback_TripleHeroNasalGoo(175, 182),
          /**
           * <code>kKillEaterEventType_Broodmother_SpiderlingHeroKills = 183;</code>
           */
          kKillEaterEventType_Broodmother_SpiderlingHeroKills(176, 183),
          /**
           * <code>kKillEaterEventType_Broodmother_KillsInsideWeb = 184;</code>
           */
          kKillEaterEventType_Broodmother_KillsInsideWeb(177, 184),
          /**
           * <code>kKillEaterEventType_Centaur_ThreeHeroStampede = 185;</code>
           */
          kKillEaterEventType_Centaur_ThreeHeroStampede(178, 185),
          /**
           * <code>kKillEaterEventType_ChaosKnight_RealityRiftKills = 186;</code>
           */
          kKillEaterEventType_ChaosKnight_RealityRiftKills(179, 186),
          /**
           * <code>kKillEaterEventType_Chen_KillsWithPenitence = 187;</code>
           */
          kKillEaterEventType_Chen_KillsWithPenitence(180, 187),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas = 188;</code>
           */
          kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas(181, 188),
          /**
           * <code>kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields = 189;</code>
           */
          kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields(182, 189),
          /**
           * <code>kKillEaterEventType_Dazzle_ShadowWaveKills = 190;</code>
           */
          kKillEaterEventType_Dazzle_ShadowWaveKills(183, 190),
          /**
           * <code>kKillEaterEventType_DeathProphet_SiphonKills = 191;</code>
           */
          kKillEaterEventType_DeathProphet_SiphonKills(184, 191),
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls = 192;</code>
           */
          kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls(185, 192),
          /**
           * <code>kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm = 193;</code>
           */
          kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm(186, 193),
          /**
           * <code>kKillEaterEventType_Doom_InfernalBladeBurnKills = 194;</code>
           */
          kKillEaterEventType_Doom_InfernalBladeBurnKills(187, 194),
          /**
           * <code>kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills = 195;</code>
           */
          kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills(188, 195),
          /**
           * <code>kKillEaterEventType_EmberSpirit_RemnantKills = 196;</code>
           */
          kKillEaterEventType_EmberSpirit_RemnantKills(189, 196),
          /**
           * <code>kKillEaterEventType_EmberSpirit_SleightOfFistKills = 197;</code>
           */
          kKillEaterEventType_EmberSpirit_SleightOfFistKills(190, 197),
          /**
           * <code>kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos = 198;</code>
           */
          kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos(191, 198),
          /**
           * <code>kKillEaterEventType_Enigma_ThreeManBlackHoles = 199;</code>
           */
          kKillEaterEventType_Enigma_ThreeManBlackHoles(192, 199),
          /**
           * <code>kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation = 200;</code>
           */
          kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation(193, 200),
          /**
           * <code>kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon = 201;</code>
           */
          kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon(194, 201),
          /**
           * <code>kKillEaterEventType_Gyrocopter_HomingMissileKills = 202;</code>
           */
          kKillEaterEventType_Gyrocopter_HomingMissileKills(195, 202),
          /**
           * <code>kKillEaterEventType_Gyrocopter_RocketBarrageKills = 203;</code>
           */
          kKillEaterEventType_Gyrocopter_RocketBarrageKills(196, 203),
          /**
           * <code>kKillEaterEventType_Huskar_KillsDuringLifeBreak = 204;</code>
           */
          kKillEaterEventType_Huskar_KillsDuringLifeBreak(197, 204),
          /**
           * <code>kKillEaterEventType_Huskar_BurningSpearKills = 205;</code>
           */
          kKillEaterEventType_Huskar_BurningSpearKills(198, 205),
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroIceWall = 206;</code>
           */
          kKillEaterEventType_Invoker_MultiHeroIceWall(199, 206),
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroEMP = 207;</code>
           */
          kKillEaterEventType_Invoker_ThreeHeroEMP(200, 207),
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast = 208;</code>
           */
          kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast(201, 208),
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroChaosMeteor = 209;</code>
           */
          kKillEaterEventType_Invoker_MultiHeroChaosMeteor(202, 209),
          /**
           * <code>kKillEaterEventType_Jakiro_MultiHeroDualBreath = 210;</code>
           */
          kKillEaterEventType_Jakiro_MultiHeroDualBreath(203, 210),
          /**
           * <code>kKillEaterEventType_Jakiro_IcePathMacropyreCombos = 211;</code>
           */
          kKillEaterEventType_Jakiro_IcePathMacropyreCombos(204, 211),
          /**
           * <code>kKillEaterEventType_Leshrac_PulseNovaKills = 212;</code>
           */
          kKillEaterEventType_Leshrac_PulseNovaKills(205, 212),
          /**
           * <code>kKillEaterEventType_Leshrac_ThreeHeroLightningStorm = 213;</code>
           */
          kKillEaterEventType_Leshrac_ThreeHeroLightningStorm(206, 213),
          /**
           * <code>kKillEaterEventType_Lion_ThreeHeroFingerOfDeath = 214;</code>
           */
          kKillEaterEventType_Lion_ThreeHeroFingerOfDeath(207, 214),
          /**
           * <code>kKillEaterEventType_Meepo_PoofKills = 215;</code>
           */
          kKillEaterEventType_Meepo_PoofKills(208, 215),
          /**
           * <code>kKillEaterEventType_Meepo_MultiHeroEarthbinds = 216;</code>
           */
          kKillEaterEventType_Meepo_MultiHeroEarthbinds(209, 216),
          /**
           * <code>kKillEaterEventType_NightStalker_NighttimeKills = 217;</code>
           */
          kKillEaterEventType_NightStalker_NighttimeKills(210, 217),
          /**
           * <code>kKillEaterEventType_Morphling_KillsDuringReplicate = 218;</code>
           */
          kKillEaterEventType_Morphling_KillsDuringReplicate(211, 218),
          /**
           * <code>kKillEaterEventType_OgreMagi_FireblastKills = 219;</code>
           */
          kKillEaterEventType_OgreMagi_FireblastKills(212, 219),
          /**
           * <code>kKillEaterEventType_OgreMagi_IgniteKills = 220;</code>
           */
          kKillEaterEventType_OgreMagi_IgniteKills(213, 220),
          /**
           * <code>kKillEaterEventType_DominatingKillStreaks = 221;</code>
           */
          kKillEaterEventType_DominatingKillStreaks(214, 221),
          /**
           * <code>kKillEaterEventType_MegaKillStreaks = 222;</code>
           */
          kKillEaterEventType_MegaKillStreaks(215, 222),
          /**
           * <code>kKillEaterEventType_Alchemist_AghanimsGiven = 223;</code>
           */
          kKillEaterEventType_Alchemist_AghanimsGiven(216, 223),
          /**
           * <code>kKillEaterEventType_VeilsLeadingToKills = 224;</code>
           */
          kKillEaterEventType_VeilsLeadingToKills(217, 224),
          /**
           * <code>kKillEaterEventType_DustLeadingToKills = 225;</code>
           */
          kKillEaterEventType_DustLeadingToKills(218, 225),
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns = 226;</code>
           */
          kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns(219, 226),
          /**
           * <code>kKillEaterEventType_Weaver_ShukuchiKills = 227;</code>
           */
          kKillEaterEventType_Weaver_ShukuchiKills(220, 227),
          /**
           * <code>kKillEaterEventType_Windrunner_ShackleFocusFireKills = 228;</code>
           */
          kKillEaterEventType_Windrunner_ShackleFocusFireKills(221, 228),
          /**
           * <code>kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills = 229;</code>
           */
          kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills(222, 229),
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunchKills = 230;</code>
           */
          kKillEaterEventType_Tusk_WalrusPunchKills(223, 230),
          /**
           * <code>kKillEaterEventType_Tinker_TripleHeroLasers = 231;</code>
           */
          kKillEaterEventType_Tinker_TripleHeroLasers(224, 231),
          /**
           * <code>kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades = 232;</code>
           */
          kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades(225, 232),
          /**
           * <code>kKillEaterEventType_Sven_KillsDuringGodsStrength = 233;</code>
           */
          kKillEaterEventType_Sven_KillsDuringGodsStrength(226, 233),
          /**
           * <code>kKillEaterEventType_Sniper_ThreeHeroShrapnels = 234;</code>
           */
          kKillEaterEventType_Sniper_ThreeHeroShrapnels(227, 234),
          /**
           * <code>kKillEaterEventType_Slark_KillsDuringShadowDance = 235;</code>
           */
          kKillEaterEventType_Slark_KillsDuringShadowDance(228, 235),
          /**
           * <code>kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks = 236;</code>
           */
          kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks(229, 236),
          /**
           * <code>kKillEaterEventType_ShadowShaman_SerpentWardShackleKills = 237;</code>
           */
          kKillEaterEventType_ShadowShaman_SerpentWardShackleKills(230, 237),
          /**
           * <code>kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade = 238;</code>
           */
          kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade(231, 238),
          /**
           * <code>kKillEaterEventType_Razor_EyeOfTheStormKills = 239;</code>
           */
          kKillEaterEventType_Razor_EyeOfTheStormKills(232, 239),
          /**
           * <code>kKillEaterEventType_Pugna_LifeDrainKills = 240;</code>
           */
          kKillEaterEventType_Pugna_LifeDrainKills(233, 240),
          /**
           * <code>kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills = 241;</code>
           */
          kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills(234, 241),
          /**
           * <code>kKillEaterEventType_Oracle_MultiHeroFortunesEnd = 242;</code>
           */
          kKillEaterEventType_Oracle_MultiHeroFortunesEnd(235, 242),
          /**
           * <code>kKillEaterEventType_Omniknight_PurificationKills = 243;</code>
           */
          kKillEaterEventType_Omniknight_PurificationKills(236, 243),
          /**
           * <code>kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear = 244;</code>
           */
          kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear(237, 244),
          /**
           * <code>kKillEaterEventType_Warlock_ThreeHeroFatalBonds = 245;</code>
           */
          kKillEaterEventType_Warlock_ThreeHeroFatalBonds(238, 245),
          /**
           * <code>kKillEaterEventType_Riki_TricksOfTheTradeKills = 246;</code>
           */
          kKillEaterEventType_Riki_TricksOfTheTradeKills(239, 246),
          /**
           * <code>kKillEaterEventType_Earthshaker_AftershockHits10 = 247;</code>
           */
          kKillEaterEventType_Earthshaker_AftershockHits10(240, 247),
          /**
           * <code>kKillEaterEventType_Earthshaker_5HeroEchoslams = 248;</code>
           */
          kKillEaterEventType_Earthshaker_5HeroEchoslams(241, 248),
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeHeroKills = 249;</code>
           */
          kKillEaterEventType_Lina_LagunaBladeHeroKills(242, 249),
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeHeroStuns = 250;</code>
           */
          kKillEaterEventType_Lina_LightStrikeHeroStuns(243, 250),
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureMultiStuns = 251;</code>
           */
          kKillEaterEventType_Earthshaker_FissureMultiStuns(244, 251),
          /**
           * <code>kKillEaterEventType_Earthshaker_TotemKills = 252;</code>
           */
          kKillEaterEventType_Earthshaker_TotemKills(245, 252),
          /**
           * <code>kKillEaterEventType_Pangolier_SwashbuckleKills = 253;</code>
           */
          kKillEaterEventType_Pangolier_SwashbuckleKills(246, 253),
          /**
           * <code>kKillEaterEventType_Furion_EnemyHeroesTrapped = 254;</code>
           */
          kKillEaterEventType_Furion_EnemyHeroesTrapped(247, 254),
          /**
           * <code>kKillEaterEventType_Pangolier_HeartpiercerKills = 255;</code>
           */
          kKillEaterEventType_Pangolier_HeartpiercerKills(248, 255),
          /**
           * <code>kKillEaterEventType_Medusa_MultiHeroStoneGaze = 256;</code>
           */
          kKillEaterEventType_Medusa_MultiHeroStoneGaze(249, 256),
          /**
           * <code>kKillEaterEventType_Medusa_SplitShotKills = 257;</code>
           */
          kKillEaterEventType_Medusa_SplitShotKills(250, 257),
          /**
           * <code>kKillEaterEventType_Mirana_MultiHeroStarstorm = 258;</code>
           */
          kKillEaterEventType_Mirana_MultiHeroStarstorm(251, 258),
          /**
           * <code>kKillEaterEventType_Mirana_KillsFromMoonlightShadow = 259;</code>
           */
          kKillEaterEventType_Mirana_KillsFromMoonlightShadow(252, 259),
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroSkewers = 260;</code>
           */
          kKillEaterEventType_Magnus_MultiHeroSkewers(253, 260),
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroReversePolarity = 261;</code>
           */
          kKillEaterEventType_Magnus_MultiHeroReversePolarity(254, 261),
          /**
           * <code>kKillEaterEventType_Magnus_HeroesSlowedWithShockwave = 262;</code>
           */
          kKillEaterEventType_Magnus_HeroesSlowedWithShockwave(255, 262),
          /**
           * <code>kKillEaterEventType_NagaSiren_MultiHeroSong = 263;</code>
           */
          kKillEaterEventType_NagaSiren_MultiHeroSong(256, 263),
          /**
           * <code>kKillEaterEventType_NagaSiren_AlliesHealedBySong = 264;</code>
           */
          kKillEaterEventType_NagaSiren_AlliesHealedBySong(257, 264),
          /**
           * <code>kKillEaterEventType_LoneDruid_MultiHeroRoar = 265;</code>
           */
          kKillEaterEventType_LoneDruid_MultiHeroRoar(258, 265),
          /**
           * <code>kKillEaterEventType_LoneDruid_BattleCryKills = 266;</code>
           */
          kKillEaterEventType_LoneDruid_BattleCryKills(259, 266),
          /**
           * <code>kKillEaterEventType_WinterWyvern_ThreeHeroCurses = 267;</code>
           */
          kKillEaterEventType_WinterWyvern_ThreeHeroCurses(260, 267),
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell = 268;</code>
           */
          kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell(261, 268),
          /**
           * <code>kKillEaterEventType_Mars_EnemiesKilledInArena = 269;</code>
           */
          kKillEaterEventType_Mars_EnemiesKilledInArena(262, 269),
          /**
           * <code>kKillEaterEventType_Mars_MultiHeroGodsRebuke = 270;</code>
           */
          kKillEaterEventType_Mars_MultiHeroGodsRebuke(263, 270),
          /**
           * <code>kKillEaterEventType_Mars_GodsRebukeKills = 271;</code>
           */
          kKillEaterEventType_Mars_GodsRebukeKills(264, 271),
          /**
           * <code>kKillEaterEventType_Snapfire_LizardBlobsKills = 272;</code>
           */
          kKillEaterEventType_Snapfire_LizardBlobsKills(265, 272),
          /**
           * <code>kKillEaterEventType_Snapfire_TwoHeroCookieStuns = 273;</code>
           */
          kKillEaterEventType_Snapfire_TwoHeroCookieStuns(266, 273),
          /**
           * <code>Custom_KillStreak = 274;</code>
           */
          Custom_KillStreak(267, 274),
          ;

          /**
           * <code>kills = 1;</code>
           */
          public static final int kills_VALUE = 1;
          /**
           * <code>deaths = 2;</code>
           */
          public static final int deaths_VALUE = 2;
          /**
           * <code>assists = 3;</code>
           */
          public static final int assists_VALUE = 3;
          /**
           * <code>net_worth = 5;</code>
           */
          public static final int net_worth_VALUE = 5;
          /**
           * <code>item_value = 6;</code>
           */
          public static final int item_value_VALUE = 6;
          /**
           * <code>support_gold_spent = 7;</code>
           */
          public static final int support_gold_spent_VALUE = 7;
          /**
           * <code>wards_placed = 8;</code>
           */
          public static final int wards_placed_VALUE = 8;
          /**
           * <code>dewards = 9;</code>
           */
          public static final int dewards_VALUE = 9;
          /**
           * <code>camps_stacked = 10;</code>
           */
          public static final int camps_stacked_VALUE = 10;
          /**
           * <code>last_hits = 11;</code>
           */
          public static final int last_hits_VALUE = 11;
          /**
           * <code>denies = 12;</code>
           */
          public static final int denies_VALUE = 12;
          /**
           * <code>kKillEaterEvent_Killing_Sprees = 13;</code>
           */
          public static final int kKillEaterEvent_Killing_Sprees_VALUE = 13;
          /**
           * <code>kKillEaterEvent_Godlike = 14;</code>
           */
          public static final int kKillEaterEvent_Godlike_VALUE = 14;
          /**
           * <code>kKillEaterEvent_Towers_Destroyed = 15;</code>
           */
          public static final int kKillEaterEvent_Towers_Destroyed_VALUE = 15;
          /**
           * <code>kKillEaterEventType_Invoker_SunstrikeKills = 16;</code>
           */
          public static final int kKillEaterEventType_Invoker_SunstrikeKills_VALUE = 16;
          /**
           * <code>kKillEaterEventType_Axe_Culls = 17;</code>
           */
          public static final int kKillEaterEventType_Axe_Culls_VALUE = 17;
          /**
           * <code>kKillEaterEventType_Axe_BattleHungerKills = 18;</code>
           */
          public static final int kKillEaterEventType_Axe_BattleHungerKills_VALUE = 18;
          /**
           * <code>kKillEaterEventType_LowHealthKills = 19;</code>
           */
          public static final int kKillEaterEventType_LowHealthKills_VALUE = 19;
          /**
           * <code>kKillEaterEventType_Invoker_TornadoKills = 20;</code>
           */
          public static final int kKillEaterEventType_Invoker_TornadoKills_VALUE = 20;
          /**
           * <code>kKillEaterEventType_Sven_DoubleStuns = 21;</code>
           */
          public static final int kKillEaterEventType_Sven_DoubleStuns_VALUE = 21;
          /**
           * <code>kKillEaterEventType_Sven_WarcryAssists = 22;</code>
           */
          public static final int kKillEaterEventType_Sven_WarcryAssists_VALUE = 22;
          /**
           * <code>kKillEaterEventType_Sven_CleaveDoubleKills = 23;</code>
           */
          public static final int kKillEaterEventType_Sven_CleaveDoubleKills_VALUE = 23;
          /**
           * <code>kKillEaterEventType_Sven_TeleportInterrupts = 24;</code>
           */
          public static final int kKillEaterEventType_Sven_TeleportInterrupts_VALUE = 24;
          /**
           * <code>kKillEaterEventType_Faceless_MultiChrono = 25;</code>
           */
          public static final int kKillEaterEventType_Faceless_MultiChrono_VALUE = 25;
          /**
           * <code>kKillEaterEventType_Faceless_ChronoKills = 26;</code>
           */
          public static final int kKillEaterEventType_Faceless_ChronoKills_VALUE = 26;
          /**
           * <code>kKillEaterEventType_Ursa_MultiShocks = 27;</code>
           */
          public static final int kKillEaterEventType_Ursa_MultiShocks_VALUE = 27;
          /**
           * <code>kKillEaterEventType_RoshanKills = 28;</code>
           */
          public static final int kKillEaterEventType_RoshanKills_VALUE = 28;
          /**
           * <code>kKillEaterEventType_Lion_FingerKills = 29;</code>
           */
          public static final int kKillEaterEventType_Lion_FingerKills_VALUE = 29;
          /**
           * <code>kKillEaterEventType_Riki_SmokedHeroKills = 32;</code>
           */
          public static final int kKillEaterEventType_Riki_SmokedHeroKills_VALUE = 32;
          /**
           * <code>kKillEaterEventType_HeroesRevealedWithDust = 33;</code>
           */
          public static final int kKillEaterEventType_HeroesRevealedWithDust_VALUE = 33;
          /**
           * <code>kKillEaterEventType_SkeletonKing_ReincarnationKills = 34;</code>
           */
          public static final int kKillEaterEventType_SkeletonKing_ReincarnationKills_VALUE = 34;
          /**
           * <code>kKillEaterEventType_Skywrath_FlareKills = 35;</code>
           */
          public static final int kKillEaterEventType_Skywrath_FlareKills_VALUE = 35;
          /**
           * <code>kKillEaterEventType_Leshrac_SplitEarthStuns = 36;</code>
           */
          public static final int kKillEaterEventType_Leshrac_SplitEarthStuns_VALUE = 36;
          /**
           * <code>kKillEaterEventType_Mirana_MaxStunArrows = 37;</code>
           */
          public static final int kKillEaterEventType_Mirana_MaxStunArrows_VALUE = 37;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits = 38;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits_VALUE = 38;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerCrits = 39;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_DaggerCrits_VALUE = 39;
          /**
           * <code>kKillEaterEventType_Meepo_Earthbinds = 40;</code>
           */
          public static final int kKillEaterEventType_Meepo_Earthbinds_VALUE = 40;
          /**
           * <code>kKillEaterEventType_Bloodseeker_RuptureKills = 41;</code>
           */
          public static final int kKillEaterEventType_Bloodseeker_RuptureKills_VALUE = 41;
          /**
           * <code>kKillEaterEventType_Slark_LeashedEnemies = 42;</code>
           */
          public static final int kKillEaterEventType_Slark_LeashedEnemies_VALUE = 42;
          /**
           * <code>kKillEaterEventType_Disruptor_FountainGlimpses = 43;</code>
           */
          public static final int kKillEaterEventType_Disruptor_FountainGlimpses_VALUE = 43;
          /**
           * <code>kKillEaterEventType_Rubick_SpellsStolen = 44;</code>
           */
          public static final int kKillEaterEventType_Rubick_SpellsStolen_VALUE = 44;
          /**
           * <code>kKillEaterEventType_Rubick_UltimatesStolen = 45;</code>
           */
          public static final int kKillEaterEventType_Rubick_UltimatesStolen_VALUE = 45;
          /**
           * <code>kKillEaterEventType_Doom_EnemiesDoomed = 46;</code>
           */
          public static final int kKillEaterEventType_Doom_EnemiesDoomed_VALUE = 46;
          /**
           * <code>kKillEaterEventType_Omniknight_Purifications = 47;</code>
           */
          public static final int kKillEaterEventType_Omniknight_Purifications_VALUE = 47;
          /**
           * <code>kKillEaterEventType_Omniknight_AlliesRepelled = 48;</code>
           */
          public static final int kKillEaterEventType_Omniknight_AlliesRepelled_VALUE = 48;
          /**
           * <code>kKillEaterEventType_Omniknight_EnemiesRepelled = 49;</code>
           */
          public static final int kKillEaterEventType_Omniknight_EnemiesRepelled_VALUE = 49;
          /**
           * <code>kKillEaterEventType_Warlock_FiveHeroFatalBonds = 50;</code>
           */
          public static final int kKillEaterEventType_Warlock_FiveHeroFatalBonds_VALUE = 50;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FrostbittenEnemies = 51;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_FrostbittenEnemies_VALUE = 51;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_CrystalNovas = 52;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_CrystalNovas_VALUE = 52;
          /**
           * <code>kKillEaterEventType_Kunkka_DoubleHeroTorrents = 53;</code>
           */
          public static final int kKillEaterEventType_Kunkka_DoubleHeroTorrents_VALUE = 53;
          /**
           * <code>kKillEaterEventType_Kunkka_TripleHeroGhostShips = 54;</code>
           */
          public static final int kKillEaterEventType_Kunkka_TripleHeroGhostShips_VALUE = 54;
          /**
           * <code>kKillEaterEventType_NagaSiren_EnemiesEnsnared = 55;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_EnemiesEnsnared_VALUE = 55;
          /**
           * <code>kKillEaterEventType_NagaSiren_TripleHeroRipTides = 56;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_TripleHeroRipTides_VALUE = 56;
          /**
           * <code>kKillEaterEventType_Lycan_KillsDuringShapeshift = 57;</code>
           */
          public static final int kKillEaterEventType_Lycan_KillsDuringShapeshift_VALUE = 57;
          /**
           * <code>kKillEaterEventType_Pudge_DismemberKills = 58;</code>
           */
          public static final int kKillEaterEventType_Pudge_DismemberKills_VALUE = 58;
          /**
           * <code>kKillEaterEventType_Pudge_EnemyHeroesHooked = 59;</code>
           */
          public static final int kKillEaterEventType_Pudge_EnemyHeroesHooked_VALUE = 59;
          /**
           * <code>kKillEaterEventType_Pudge_HookKills = 60;</code>
           */
          public static final int kKillEaterEventType_Pudge_HookKills_VALUE = 60;
          /**
           * <code>kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked = 61;</code>
           */
          public static final int kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked_VALUE = 61;
          /**
           * <code>kKillEaterEventType_DrowRanger_EnemiesSilenced = 62;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_EnemiesSilenced_VALUE = 62;
          /**
           * <code>kKillEaterEventType_DrowRanger_MultiHeroSilences = 63;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_MultiHeroSilences_VALUE = 63;
          /**
           * <code>kKillEaterEventType_DrowRanger_SilencedKills = 64;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_SilencedKills_VALUE = 64;
          /**
           * <code>kKillEaterEventType_DrowRanger_FrostArrowKills = 65;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_FrostArrowKills_VALUE = 65;
          /**
           * <code>kKillEaterEventType_DragonKnight_KillsInDragonForm = 66;</code>
           */
          public static final int kKillEaterEventType_DragonKnight_KillsInDragonForm_VALUE = 66;
          /**
           * <code>kKillEaterEventType_DragonKnight_BreatheFireKills = 67;</code>
           */
          public static final int kKillEaterEventType_DragonKnight_BreatheFireKills_VALUE = 67;
          /**
           * <code>kKillEaterEventType_DragonKnight_SplashKills = 68;</code>
           */
          public static final int kKillEaterEventType_DragonKnight_SplashKills_VALUE = 68;
          /**
           * <code>kKillEaterEventType_WitchDoctor_CaskStuns = 69;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_CaskStuns_VALUE = 69;
          /**
           * <code>kKillEaterEventType_WitchDoctor_MaledictKills = 70;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_MaledictKills_VALUE = 70;
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroMaledicts = 71;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_MultiHeroMaledicts_VALUE = 71;
          /**
           * <code>kKillEaterEventType_WitchDoctor_DeathWardKills = 72;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_DeathWardKills_VALUE = 72;
          /**
           * <code>kKillEaterEventType_Disruptor_ThunderStrikeKills = 73;</code>
           */
          public static final int kKillEaterEventType_Disruptor_ThunderStrikeKills_VALUE = 73;
          /**
           * <code>kKillEaterEventType_Disruptor_HeroesGlimpsed = 74;</code>
           */
          public static final int kKillEaterEventType_Disruptor_HeroesGlimpsed_VALUE = 74;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_FreezingFieldKills = 75;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_FreezingFieldKills_VALUE = 75;
          /**
           * <code>kKillEaterEventType_Medusa_EnemiesPetrified = 77;</code>
           */
          public static final int kKillEaterEventType_Medusa_EnemiesPetrified_VALUE = 77;
          /**
           * <code>kKillEaterEventType_Warlock_FatalBondsKills = 78;</code>
           */
          public static final int kKillEaterEventType_Warlock_FatalBondsKills_VALUE = 78;
          /**
           * <code>kKillEaterEventType_Warlock_GolemKills = 79;</code>
           */
          public static final int kKillEaterEventType_Warlock_GolemKills_VALUE = 79;
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunches = 80;</code>
           */
          public static final int kKillEaterEventType_Tusk_WalrusPunches_VALUE = 80;
          /**
           * <code>kKillEaterEventType_Tusk_SnowballStuns = 81;</code>
           */
          public static final int kKillEaterEventType_Tusk_SnowballStuns_VALUE = 81;
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureStuns = 82;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_FissureStuns_VALUE = 82;
          /**
           * <code>kKillEaterEventType_Earthshaker_3HeroEchoslams = 83;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_3HeroEchoslams_VALUE = 83;
          /**
           * <code>kKillEaterEventType_SandKing_BurrowstrikeStuns = 84;</code>
           */
          public static final int kKillEaterEventType_SandKing_BurrowstrikeStuns_VALUE = 84;
          /**
           * <code>kKillEaterEventType_SandKing_EpicenterKills = 85;</code>
           */
          public static final int kKillEaterEventType_SandKing_EpicenterKills_VALUE = 85;
          /**
           * <code>kKillEaterEventType_SkywrathMage_AncientSealKills = 86;</code>
           */
          public static final int kKillEaterEventType_SkywrathMage_AncientSealKills_VALUE = 86;
          /**
           * <code>kKillEaterEventType_SkywrathMage_ConcussiveShotKills = 87;</code>
           */
          public static final int kKillEaterEventType_SkywrathMage_ConcussiveShotKills_VALUE = 87;
          /**
           * <code>kKillEaterEventType_Luna_LucentBeamKills = 88;</code>
           */
          public static final int kKillEaterEventType_Luna_LucentBeamKills_VALUE = 88;
          /**
           * <code>kKillEaterEventType_Luna_EclipseKills = 89;</code>
           */
          public static final int kKillEaterEventType_Luna_EclipseKills_VALUE = 89;
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_IlluminateKills = 90;</code>
           */
          public static final int kKillEaterEventType_KeeperOfTheLight_IlluminateKills_VALUE = 90;
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns = 91;</code>
           */
          public static final int kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns_VALUE = 91;
          /**
           * <code>kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled = 92;</code>
           */
          public static final int kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled_VALUE = 92;
          /**
           * <code>kKillEaterEventType_LegionCommander_DuelsWon = 93;</code>
           */
          public static final int kKillEaterEventType_LegionCommander_DuelsWon_VALUE = 93;
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarKills = 94;</code>
           */
          public static final int kKillEaterEventType_Beastmaster_RoarKills_VALUE = 94;
          /**
           * <code>kKillEaterEventType_Beastmaster_RoarMultiKills = 95;</code>
           */
          public static final int kKillEaterEventType_Beastmaster_RoarMultiKills_VALUE = 95;
          /**
           * <code>kKillEaterEventType_Windrunner_FocusFireBuildings = 96;</code>
           */
          public static final int kKillEaterEventType_Windrunner_FocusFireBuildings_VALUE = 96;
          /**
           * <code>kKillEaterEventType_Windrunner_PowershotKills = 97;</code>
           */
          public static final int kKillEaterEventType_Windrunner_PowershotKills_VALUE = 97;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_DaggerLastHits = 98;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_DaggerLastHits_VALUE = 98;
          /**
           * <code>kKillEaterEventType_PhantomAssassin_PhantomStrikeKills = 99;</code>
           */
          public static final int kKillEaterEventType_PhantomAssassin_PhantomStrikeKills_VALUE = 99;
          /**
           * <code>kKillEaterEventType_DeathProphet_CryptSwarmKills = 100;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_CryptSwarmKills_VALUE = 100;
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismBuildingKills = 101;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_ExorcismBuildingKills_VALUE = 101;
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned = 102;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned_VALUE = 102;
          /**
           * <code>kKillEaterEventType_DeathProphet_MultiHeroSilences = 103;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_MultiHeroSilences_VALUE = 103;
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilKills = 104;</code>
           */
          public static final int kKillEaterEventType_Abaddon_MistCoilKills_VALUE = 104;
          /**
           * <code>kKillEaterEventType_Abaddon_MistCoilHealed = 105;</code>
           */
          public static final int kKillEaterEventType_Abaddon_MistCoilHealed_VALUE = 105;
          /**
           * <code>kKillEaterEventType_Abaddon_AphoticShieldKills = 106;</code>
           */
          public static final int kKillEaterEventType_Abaddon_AphoticShieldKills_VALUE = 106;
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostTripleKills = 107;</code>
           */
          public static final int kKillEaterEventType_Lich_ChainFrostTripleKills_VALUE = 107;
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostMultiKills = 108;</code>
           */
          public static final int kKillEaterEventType_Lich_ChainFrostMultiKills_VALUE = 108;
          /**
           * <code>kKillEaterEventType_Lich_ChainFrostBounces = 109;</code>
           */
          public static final int kKillEaterEventType_Lich_ChainFrostBounces_VALUE = 109;
          /**
           * <code>kKillEaterEventType_Ursa_EnragedKills = 110;</code>
           */
          public static final int kKillEaterEventType_Ursa_EnragedKills_VALUE = 110;
          /**
           * <code>kKillEaterEventType_Ursa_EarthshockKills = 111;</code>
           */
          public static final int kKillEaterEventType_Ursa_EarthshockKills_VALUE = 111;
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeKills = 112;</code>
           */
          public static final int kKillEaterEventType_Lina_LagunaBladeKills_VALUE = 112;
          /**
           * <code>kKillEaterEventType_Lina_DragonSlaveKills = 113;</code>
           */
          public static final int kKillEaterEventType_Lina_DragonSlaveKills_VALUE = 113;
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeArrayStuns = 114;</code>
           */
          public static final int kKillEaterEventType_Lina_LightStrikeArrayStuns_VALUE = 114;
          /**
           * <code>kKillEaterEvent_Barracks_Destroyed = 115;</code>
           */
          public static final int kKillEaterEvent_Barracks_Destroyed_VALUE = 115;
          /**
           * <code>kKillEaterEvent_TemplarAssassin_MeldKills = 116;</code>
           */
          public static final int kKillEaterEvent_TemplarAssassin_MeldKills_VALUE = 116;
          /**
           * <code>kKillEaterEvent_TemplarAssassin_HeroesSlowed = 117;</code>
           */
          public static final int kKillEaterEvent_TemplarAssassin_HeroesSlowed_VALUE = 117;
          /**
           * <code>kKillEaterEvent_Sniper_AssassinationKills = 118;</code>
           */
          public static final int kKillEaterEvent_Sniper_AssassinationKills_VALUE = 118;
          /**
           * <code>kKillEaterEvent_Sniper_HeadshotStuns = 119;</code>
           */
          public static final int kKillEaterEvent_Sniper_HeadshotStuns_VALUE = 119;
          /**
           * <code>kKillEaterEvent_EarthSpirit_SmashStuns = 120;</code>
           */
          public static final int kKillEaterEvent_EarthSpirit_SmashStuns_VALUE = 120;
          /**
           * <code>kKillEaterEvent_EarthSpirit_GripSilences = 121;</code>
           */
          public static final int kKillEaterEvent_EarthSpirit_GripSilences_VALUE = 121;
          /**
           * <code>kKillEaterEvent_ShadowShaman_ShackleKills = 122;</code>
           */
          public static final int kKillEaterEvent_ShadowShaman_ShackleKills_VALUE = 122;
          /**
           * <code>kKillEaterEvent_ShadowShaman_HexKills = 123;</code>
           */
          public static final int kKillEaterEvent_ShadowShaman_HexKills_VALUE = 123;
          /**
           * <code>kKillEaterEvent_Centaur_EnemiesStomped = 124;</code>
           */
          public static final int kKillEaterEvent_Centaur_EnemiesStomped_VALUE = 124;
          /**
           * <code>kKillEaterEvent_Centaur_DoubleEdgeKills = 125;</code>
           */
          public static final int kKillEaterEvent_Centaur_DoubleEdgeKills_VALUE = 125;
          /**
           * <code>kKillEaterEvent_Centaur_ReturnKills = 126;</code>
           */
          public static final int kKillEaterEvent_Centaur_ReturnKills_VALUE = 126;
          /**
           * <code>kKillEaterEvent_EmberSpirit_EnemiesChained = 127;</code>
           */
          public static final int kKillEaterEvent_EmberSpirit_EnemiesChained_VALUE = 127;
          /**
           * <code>kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills = 128;</code>
           */
          public static final int kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills_VALUE = 128;
          /**
           * <code>kKillEaterEvent_Puck_OrbKills = 129;</code>
           */
          public static final int kKillEaterEvent_Puck_OrbKills_VALUE = 129;
          /**
           * <code>kKillEaterEvent_VengefulSpirit_EnemiesStunned = 130;</code>
           */
          public static final int kKillEaterEvent_VengefulSpirit_EnemiesStunned_VALUE = 130;
          /**
           * <code>kKillEaterEvent_Lifestealer_RageKills = 131;</code>
           */
          public static final int kKillEaterEvent_Lifestealer_RageKills_VALUE = 131;
          /**
           * <code>kKillEaterEvent_Lifestealer_OpenWoundsKills = 132;</code>
           */
          public static final int kKillEaterEvent_Lifestealer_OpenWoundsKills_VALUE = 132;
          /**
           * <code>kKillEaterEvent_Lifestealer_InfestKills = 133;</code>
           */
          public static final int kKillEaterEvent_Lifestealer_InfestKills_VALUE = 133;
          /**
           * <code>kKillEaterEvent_ElderTitan_SpiritKills = 134;</code>
           */
          public static final int kKillEaterEvent_ElderTitan_SpiritKills_VALUE = 134;
          /**
           * <code>kKillEaterEvent_ElderTitan_GoodStomps = 135;</code>
           */
          public static final int kKillEaterEvent_ElderTitan_GoodStomps_VALUE = 135;
          /**
           * <code>kKillEaterEvent_Clockwerk_RocketKills = 136;</code>
           */
          public static final int kKillEaterEvent_Clockwerk_RocketKills_VALUE = 136;
          /**
           * <code>kKillEaterEvent_Clockwerk_BlindRocketKills = 137;</code>
           */
          public static final int kKillEaterEvent_Clockwerk_BlindRocketKills_VALUE = 137;
          /**
           * <code>kKillEaterEvent_StormSpirit_BallKills = 138;</code>
           */
          public static final int kKillEaterEvent_StormSpirit_BallKills_VALUE = 138;
          /**
           * <code>kKillEaterEvent_StormSpirit_DoubleRemnantKills = 139;</code>
           */
          public static final int kKillEaterEvent_StormSpirit_DoubleRemnantKills_VALUE = 139;
          /**
           * <code>kKillEaterEvent_StormSpirit_VortexKills = 140;</code>
           */
          public static final int kKillEaterEvent_StormSpirit_VortexKills_VALUE = 140;
          /**
           * <code>kKillEaterEvent_Tinker_DoubleMissileKills = 141;</code>
           */
          public static final int kKillEaterEvent_Tinker_DoubleMissileKills_VALUE = 141;
          /**
           * <code>kKillEaterEvent_Tinker_LaserKills = 142;</code>
           */
          public static final int kKillEaterEvent_Tinker_LaserKills_VALUE = 142;
          /**
           * <code>kKillEaterEvent_Techies_SuicideKills = 143;</code>
           */
          public static final int kKillEaterEvent_Techies_SuicideKills_VALUE = 143;
          /**
           * <code>kKillEaterEvent_Techies_LandMineKills = 144;</code>
           */
          public static final int kKillEaterEvent_Techies_LandMineKills_VALUE = 144;
          /**
           * <code>kKillEaterEvent_Techies_StatisTrapStuns = 145;</code>
           */
          public static final int kKillEaterEvent_Techies_StatisTrapStuns_VALUE = 145;
          /**
           * <code>kKillEaterEvent_Techies_RemoteMineKills = 146;</code>
           */
          public static final int kKillEaterEvent_Techies_RemoteMineKills_VALUE = 146;
          /**
           * <code>kKillEaterEvent_ShadowFiend_TripleRazeKills = 147;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_TripleRazeKills_VALUE = 147;
          /**
           * <code>kKillEaterEvent_ShadowFiend_RequiemMultiKills = 148;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_RequiemMultiKills_VALUE = 148;
          /**
           * <code>kKillEaterEvent_ShadowFiend_QRazeKills = 149;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_QRazeKills_VALUE = 149;
          /**
           * <code>kKillEaterEvent_ShadowFiend_WRazeKills = 150;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_WRazeKills_VALUE = 150;
          /**
           * <code>kKillEaterEvent_ShadowFiend_ERazeKills = 151;</code>
           */
          public static final int kKillEaterEvent_ShadowFiend_ERazeKills_VALUE = 151;
          /**
           * <code>kKillEaterEvent_Oracle_FatesEdictKills = 152;</code>
           */
          public static final int kKillEaterEvent_Oracle_FatesEdictKills_VALUE = 152;
          /**
           * <code>kKillEaterEvent_Oracle_FalsePromiseSaves = 153;</code>
           */
          public static final int kKillEaterEvent_Oracle_FalsePromiseSaves_VALUE = 153;
          /**
           * <code>kKillEaterEvent_Juggernaut_OmnislashKills = 154;</code>
           */
          public static final int kKillEaterEvent_Juggernaut_OmnislashKills_VALUE = 154;
          /**
           * <code>kKillEaterEventType_SkeletonKing_SkeletonHeroKills = 157;</code>
           */
          public static final int kKillEaterEventType_SkeletonKing_SkeletonHeroKills_VALUE = 157;
          /**
           * <code>kKillEaterEventType_DarkWillow_CursedCrownTripleStuns = 158;</code>
           */
          public static final int kKillEaterEventType_DarkWillow_CursedCrownTripleStuns_VALUE = 158;
          /**
           * <code>kKillEaterEventType_Dazzle_ShallowGraveSaves = 159;</code>
           */
          public static final int kKillEaterEventType_Dazzle_ShallowGraveSaves_VALUE = 159;
          /**
           * <code>kKillEaterEventType_Dazzle_PoisonTouchKills = 160;</code>
           */
          public static final int kKillEaterEventType_Dazzle_PoisonTouchKills_VALUE = 160;
          /**
           * <code>kKillEaterEventType_ThreeManMeks = 161;</code>
           */
          public static final int kKillEaterEventType_ThreeManMeks_VALUE = 161;
          /**
           * <code>kKillEaterEventType_Viper_PoisonAttackKills = 162;</code>
           */
          public static final int kKillEaterEventType_Viper_PoisonAttackKills_VALUE = 162;
          /**
           * <code>kKillEaterEventType_Viper_CorrosiveSkinKills = 163;</code>
           */
          public static final int kKillEaterEventType_Viper_CorrosiveSkinKills_VALUE = 163;
          /**
           * <code>kKillEaterEventType_ThreeHeroVeils = 164;</code>
           */
          public static final int kKillEaterEventType_ThreeHeroVeils_VALUE = 164;
          /**
           * <code>kKillEaterEventType_Viper_KillsDuringViperStrike = 165;</code>
           */
          public static final int kKillEaterEventType_Viper_KillsDuringViperStrike_VALUE = 165;
          /**
           * <code>kKillEaterEventType_SolarCrestKills = 166;</code>
           */
          public static final int kKillEaterEventType_SolarCrestKills_VALUE = 166;
          /**
           * <code>kKillEaterEventType_Tiny_TreeThrowKills = 167;</code>
           */
          public static final int kKillEaterEventType_Tiny_TreeThrowKills_VALUE = 167;
          /**
           * <code>kKillEaterEventType_Riki_BackstabKills = 168;</code>
           */
          public static final int kKillEaterEventType_Riki_BackstabKills_VALUE = 168;
          /**
           * <code>kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns = 169;</code>
           */
          public static final int kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns_VALUE = 169;
          /**
           * <code>kKillEaterEventType_Terrorblade_MetamorphosisKills = 170;</code>
           */
          public static final int kKillEaterEventType_Terrorblade_MetamorphosisKills_VALUE = 170;
          /**
           * <code>kKillEaterEventType_Lion_GreatFingerKills = 171;</code>
           */
          public static final int kKillEaterEventType_Lion_GreatFingerKills_VALUE = 171;
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithAghanims = 172;</code>
           */
          public static final int kKillEaterEventType_Antimage_SpellsBlockedWithAghanims_VALUE = 172;
          /**
           * <code>kKillEaterEventType_Antimage_ThreeManManaVoids = 173;</code>
           */
          public static final int kKillEaterEventType_Antimage_ThreeManManaVoids_VALUE = 173;
          /**
           * <code>kKillEaterEventType_ArcWarden_TempestDoubleKills = 174;</code>
           */
          public static final int kKillEaterEventType_ArcWarden_TempestDoubleKills_VALUE = 174;
          /**
           * <code>kKillEaterEventType_ArcWarden_SparkWraithKills = 175;</code>
           */
          public static final int kKillEaterEventType_ArcWarden_SparkWraithKills_VALUE = 175;
          /**
           * <code>kKillEaterEventType_Bane_BrainSapKills = 176;</code>
           */
          public static final int kKillEaterEventType_Bane_BrainSapKills_VALUE = 176;
          /**
           * <code>kKillEaterEventType_Bane_FiendsGripKills = 177;</code>
           */
          public static final int kKillEaterEventType_Bane_FiendsGripKills_VALUE = 177;
          /**
           * <code>kKillEaterEventType_Batrider_TripleHeroFlamebreaks = 178;</code>
           */
          public static final int kKillEaterEventType_Batrider_TripleHeroFlamebreaks_VALUE = 178;
          /**
           * <code>kKillEaterEventType_Batrider_DoubleHeroLassoes = 179;</code>
           */
          public static final int kKillEaterEventType_Batrider_DoubleHeroLassoes_VALUE = 179;
          /**
           * <code>kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit = 180;</code>
           */
          public static final int kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit_VALUE = 180;
          /**
           * <code>kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks = 181;</code>
           */
          public static final int kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks_VALUE = 181;
          /**
           * <code>kKillEaterEventType_Bristleback_TripleHeroNasalGoo = 182;</code>
           */
          public static final int kKillEaterEventType_Bristleback_TripleHeroNasalGoo_VALUE = 182;
          /**
           * <code>kKillEaterEventType_Broodmother_SpiderlingHeroKills = 183;</code>
           */
          public static final int kKillEaterEventType_Broodmother_SpiderlingHeroKills_VALUE = 183;
          /**
           * <code>kKillEaterEventType_Broodmother_KillsInsideWeb = 184;</code>
           */
          public static final int kKillEaterEventType_Broodmother_KillsInsideWeb_VALUE = 184;
          /**
           * <code>kKillEaterEventType_Centaur_ThreeHeroStampede = 185;</code>
           */
          public static final int kKillEaterEventType_Centaur_ThreeHeroStampede_VALUE = 185;
          /**
           * <code>kKillEaterEventType_ChaosKnight_RealityRiftKills = 186;</code>
           */
          public static final int kKillEaterEventType_ChaosKnight_RealityRiftKills_VALUE = 186;
          /**
           * <code>kKillEaterEventType_Chen_KillsWithPenitence = 187;</code>
           */
          public static final int kKillEaterEventType_Chen_KillsWithPenitence_VALUE = 187;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas = 188;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas_VALUE = 188;
          /**
           * <code>kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields = 189;</code>
           */
          public static final int kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields_VALUE = 189;
          /**
           * <code>kKillEaterEventType_Dazzle_ShadowWaveKills = 190;</code>
           */
          public static final int kKillEaterEventType_Dazzle_ShadowWaveKills_VALUE = 190;
          /**
           * <code>kKillEaterEventType_DeathProphet_SiphonKills = 191;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_SiphonKills_VALUE = 191;
          /**
           * <code>kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls = 192;</code>
           */
          public static final int kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls_VALUE = 192;
          /**
           * <code>kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm = 193;</code>
           */
          public static final int kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm_VALUE = 193;
          /**
           * <code>kKillEaterEventType_Doom_InfernalBladeBurnKills = 194;</code>
           */
          public static final int kKillEaterEventType_Doom_InfernalBladeBurnKills_VALUE = 194;
          /**
           * <code>kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills = 195;</code>
           */
          public static final int kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills_VALUE = 195;
          /**
           * <code>kKillEaterEventType_EmberSpirit_RemnantKills = 196;</code>
           */
          public static final int kKillEaterEventType_EmberSpirit_RemnantKills_VALUE = 196;
          /**
           * <code>kKillEaterEventType_EmberSpirit_SleightOfFistKills = 197;</code>
           */
          public static final int kKillEaterEventType_EmberSpirit_SleightOfFistKills_VALUE = 197;
          /**
           * <code>kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos = 198;</code>
           */
          public static final int kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos_VALUE = 198;
          /**
           * <code>kKillEaterEventType_Enigma_ThreeManBlackHoles = 199;</code>
           */
          public static final int kKillEaterEventType_Enigma_ThreeManBlackHoles_VALUE = 199;
          /**
           * <code>kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation = 200;</code>
           */
          public static final int kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation_VALUE = 200;
          /**
           * <code>kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon = 201;</code>
           */
          public static final int kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon_VALUE = 201;
          /**
           * <code>kKillEaterEventType_Gyrocopter_HomingMissileKills = 202;</code>
           */
          public static final int kKillEaterEventType_Gyrocopter_HomingMissileKills_VALUE = 202;
          /**
           * <code>kKillEaterEventType_Gyrocopter_RocketBarrageKills = 203;</code>
           */
          public static final int kKillEaterEventType_Gyrocopter_RocketBarrageKills_VALUE = 203;
          /**
           * <code>kKillEaterEventType_Huskar_KillsDuringLifeBreak = 204;</code>
           */
          public static final int kKillEaterEventType_Huskar_KillsDuringLifeBreak_VALUE = 204;
          /**
           * <code>kKillEaterEventType_Huskar_BurningSpearKills = 205;</code>
           */
          public static final int kKillEaterEventType_Huskar_BurningSpearKills_VALUE = 205;
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroIceWall = 206;</code>
           */
          public static final int kKillEaterEventType_Invoker_MultiHeroIceWall_VALUE = 206;
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroEMP = 207;</code>
           */
          public static final int kKillEaterEventType_Invoker_ThreeHeroEMP_VALUE = 207;
          /**
           * <code>kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast = 208;</code>
           */
          public static final int kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast_VALUE = 208;
          /**
           * <code>kKillEaterEventType_Invoker_MultiHeroChaosMeteor = 209;</code>
           */
          public static final int kKillEaterEventType_Invoker_MultiHeroChaosMeteor_VALUE = 209;
          /**
           * <code>kKillEaterEventType_Jakiro_MultiHeroDualBreath = 210;</code>
           */
          public static final int kKillEaterEventType_Jakiro_MultiHeroDualBreath_VALUE = 210;
          /**
           * <code>kKillEaterEventType_Jakiro_IcePathMacropyreCombos = 211;</code>
           */
          public static final int kKillEaterEventType_Jakiro_IcePathMacropyreCombos_VALUE = 211;
          /**
           * <code>kKillEaterEventType_Leshrac_PulseNovaKills = 212;</code>
           */
          public static final int kKillEaterEventType_Leshrac_PulseNovaKills_VALUE = 212;
          /**
           * <code>kKillEaterEventType_Leshrac_ThreeHeroLightningStorm = 213;</code>
           */
          public static final int kKillEaterEventType_Leshrac_ThreeHeroLightningStorm_VALUE = 213;
          /**
           * <code>kKillEaterEventType_Lion_ThreeHeroFingerOfDeath = 214;</code>
           */
          public static final int kKillEaterEventType_Lion_ThreeHeroFingerOfDeath_VALUE = 214;
          /**
           * <code>kKillEaterEventType_Meepo_PoofKills = 215;</code>
           */
          public static final int kKillEaterEventType_Meepo_PoofKills_VALUE = 215;
          /**
           * <code>kKillEaterEventType_Meepo_MultiHeroEarthbinds = 216;</code>
           */
          public static final int kKillEaterEventType_Meepo_MultiHeroEarthbinds_VALUE = 216;
          /**
           * <code>kKillEaterEventType_NightStalker_NighttimeKills = 217;</code>
           */
          public static final int kKillEaterEventType_NightStalker_NighttimeKills_VALUE = 217;
          /**
           * <code>kKillEaterEventType_Morphling_KillsDuringReplicate = 218;</code>
           */
          public static final int kKillEaterEventType_Morphling_KillsDuringReplicate_VALUE = 218;
          /**
           * <code>kKillEaterEventType_OgreMagi_FireblastKills = 219;</code>
           */
          public static final int kKillEaterEventType_OgreMagi_FireblastKills_VALUE = 219;
          /**
           * <code>kKillEaterEventType_OgreMagi_IgniteKills = 220;</code>
           */
          public static final int kKillEaterEventType_OgreMagi_IgniteKills_VALUE = 220;
          /**
           * <code>kKillEaterEventType_DominatingKillStreaks = 221;</code>
           */
          public static final int kKillEaterEventType_DominatingKillStreaks_VALUE = 221;
          /**
           * <code>kKillEaterEventType_MegaKillStreaks = 222;</code>
           */
          public static final int kKillEaterEventType_MegaKillStreaks_VALUE = 222;
          /**
           * <code>kKillEaterEventType_Alchemist_AghanimsGiven = 223;</code>
           */
          public static final int kKillEaterEventType_Alchemist_AghanimsGiven_VALUE = 223;
          /**
           * <code>kKillEaterEventType_VeilsLeadingToKills = 224;</code>
           */
          public static final int kKillEaterEventType_VeilsLeadingToKills_VALUE = 224;
          /**
           * <code>kKillEaterEventType_DustLeadingToKills = 225;</code>
           */
          public static final int kKillEaterEventType_DustLeadingToKills_VALUE = 225;
          /**
           * <code>kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns = 226;</code>
           */
          public static final int kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns_VALUE = 226;
          /**
           * <code>kKillEaterEventType_Weaver_ShukuchiKills = 227;</code>
           */
          public static final int kKillEaterEventType_Weaver_ShukuchiKills_VALUE = 227;
          /**
           * <code>kKillEaterEventType_Windrunner_ShackleFocusFireKills = 228;</code>
           */
          public static final int kKillEaterEventType_Windrunner_ShackleFocusFireKills_VALUE = 228;
          /**
           * <code>kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills = 229;</code>
           */
          public static final int kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills_VALUE = 229;
          /**
           * <code>kKillEaterEventType_Tusk_WalrusPunchKills = 230;</code>
           */
          public static final int kKillEaterEventType_Tusk_WalrusPunchKills_VALUE = 230;
          /**
           * <code>kKillEaterEventType_Tinker_TripleHeroLasers = 231;</code>
           */
          public static final int kKillEaterEventType_Tinker_TripleHeroLasers_VALUE = 231;
          /**
           * <code>kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades = 232;</code>
           */
          public static final int kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades_VALUE = 232;
          /**
           * <code>kKillEaterEventType_Sven_KillsDuringGodsStrength = 233;</code>
           */
          public static final int kKillEaterEventType_Sven_KillsDuringGodsStrength_VALUE = 233;
          /**
           * <code>kKillEaterEventType_Sniper_ThreeHeroShrapnels = 234;</code>
           */
          public static final int kKillEaterEventType_Sniper_ThreeHeroShrapnels_VALUE = 234;
          /**
           * <code>kKillEaterEventType_Slark_KillsDuringShadowDance = 235;</code>
           */
          public static final int kKillEaterEventType_Slark_KillsDuringShadowDance_VALUE = 235;
          /**
           * <code>kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks = 236;</code>
           */
          public static final int kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks_VALUE = 236;
          /**
           * <code>kKillEaterEventType_ShadowShaman_SerpentWardShackleKills = 237;</code>
           */
          public static final int kKillEaterEventType_ShadowShaman_SerpentWardShackleKills_VALUE = 237;
          /**
           * <code>kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade = 238;</code>
           */
          public static final int kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade_VALUE = 238;
          /**
           * <code>kKillEaterEventType_Razor_EyeOfTheStormKills = 239;</code>
           */
          public static final int kKillEaterEventType_Razor_EyeOfTheStormKills_VALUE = 239;
          /**
           * <code>kKillEaterEventType_Pugna_LifeDrainKills = 240;</code>
           */
          public static final int kKillEaterEventType_Pugna_LifeDrainKills_VALUE = 240;
          /**
           * <code>kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills = 241;</code>
           */
          public static final int kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills_VALUE = 241;
          /**
           * <code>kKillEaterEventType_Oracle_MultiHeroFortunesEnd = 242;</code>
           */
          public static final int kKillEaterEventType_Oracle_MultiHeroFortunesEnd_VALUE = 242;
          /**
           * <code>kKillEaterEventType_Omniknight_PurificationKills = 243;</code>
           */
          public static final int kKillEaterEventType_Omniknight_PurificationKills_VALUE = 243;
          /**
           * <code>kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear = 244;</code>
           */
          public static final int kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear_VALUE = 244;
          /**
           * <code>kKillEaterEventType_Warlock_ThreeHeroFatalBonds = 245;</code>
           */
          public static final int kKillEaterEventType_Warlock_ThreeHeroFatalBonds_VALUE = 245;
          /**
           * <code>kKillEaterEventType_Riki_TricksOfTheTradeKills = 246;</code>
           */
          public static final int kKillEaterEventType_Riki_TricksOfTheTradeKills_VALUE = 246;
          /**
           * <code>kKillEaterEventType_Earthshaker_AftershockHits10 = 247;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_AftershockHits10_VALUE = 247;
          /**
           * <code>kKillEaterEventType_Earthshaker_5HeroEchoslams = 248;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_5HeroEchoslams_VALUE = 248;
          /**
           * <code>kKillEaterEventType_Lina_LagunaBladeHeroKills = 249;</code>
           */
          public static final int kKillEaterEventType_Lina_LagunaBladeHeroKills_VALUE = 249;
          /**
           * <code>kKillEaterEventType_Lina_LightStrikeHeroStuns = 250;</code>
           */
          public static final int kKillEaterEventType_Lina_LightStrikeHeroStuns_VALUE = 250;
          /**
           * <code>kKillEaterEventType_Earthshaker_FissureMultiStuns = 251;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_FissureMultiStuns_VALUE = 251;
          /**
           * <code>kKillEaterEventType_Earthshaker_TotemKills = 252;</code>
           */
          public static final int kKillEaterEventType_Earthshaker_TotemKills_VALUE = 252;
          /**
           * <code>kKillEaterEventType_Pangolier_SwashbuckleKills = 253;</code>
           */
          public static final int kKillEaterEventType_Pangolier_SwashbuckleKills_VALUE = 253;
          /**
           * <code>kKillEaterEventType_Furion_EnemyHeroesTrapped = 254;</code>
           */
          public static final int kKillEaterEventType_Furion_EnemyHeroesTrapped_VALUE = 254;
          /**
           * <code>kKillEaterEventType_Pangolier_HeartpiercerKills = 255;</code>
           */
          public static final int kKillEaterEventType_Pangolier_HeartpiercerKills_VALUE = 255;
          /**
           * <code>kKillEaterEventType_Medusa_MultiHeroStoneGaze = 256;</code>
           */
          public static final int kKillEaterEventType_Medusa_MultiHeroStoneGaze_VALUE = 256;
          /**
           * <code>kKillEaterEventType_Medusa_SplitShotKills = 257;</code>
           */
          public static final int kKillEaterEventType_Medusa_SplitShotKills_VALUE = 257;
          /**
           * <code>kKillEaterEventType_Mirana_MultiHeroStarstorm = 258;</code>
           */
          public static final int kKillEaterEventType_Mirana_MultiHeroStarstorm_VALUE = 258;
          /**
           * <code>kKillEaterEventType_Mirana_KillsFromMoonlightShadow = 259;</code>
           */
          public static final int kKillEaterEventType_Mirana_KillsFromMoonlightShadow_VALUE = 259;
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroSkewers = 260;</code>
           */
          public static final int kKillEaterEventType_Magnus_MultiHeroSkewers_VALUE = 260;
          /**
           * <code>kKillEaterEventType_Magnus_MultiHeroReversePolarity = 261;</code>
           */
          public static final int kKillEaterEventType_Magnus_MultiHeroReversePolarity_VALUE = 261;
          /**
           * <code>kKillEaterEventType_Magnus_HeroesSlowedWithShockwave = 262;</code>
           */
          public static final int kKillEaterEventType_Magnus_HeroesSlowedWithShockwave_VALUE = 262;
          /**
           * <code>kKillEaterEventType_NagaSiren_MultiHeroSong = 263;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_MultiHeroSong_VALUE = 263;
          /**
           * <code>kKillEaterEventType_NagaSiren_AlliesHealedBySong = 264;</code>
           */
          public static final int kKillEaterEventType_NagaSiren_AlliesHealedBySong_VALUE = 264;
          /**
           * <code>kKillEaterEventType_LoneDruid_MultiHeroRoar = 265;</code>
           */
          public static final int kKillEaterEventType_LoneDruid_MultiHeroRoar_VALUE = 265;
          /**
           * <code>kKillEaterEventType_LoneDruid_BattleCryKills = 266;</code>
           */
          public static final int kKillEaterEventType_LoneDruid_BattleCryKills_VALUE = 266;
          /**
           * <code>kKillEaterEventType_WinterWyvern_ThreeHeroCurses = 267;</code>
           */
          public static final int kKillEaterEventType_WinterWyvern_ThreeHeroCurses_VALUE = 267;
          /**
           * <code>kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell = 268;</code>
           */
          public static final int kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell_VALUE = 268;
          /**
           * <code>kKillEaterEventType_Mars_EnemiesKilledInArena = 269;</code>
           */
          public static final int kKillEaterEventType_Mars_EnemiesKilledInArena_VALUE = 269;
          /**
           * <code>kKillEaterEventType_Mars_MultiHeroGodsRebuke = 270;</code>
           */
          public static final int kKillEaterEventType_Mars_MultiHeroGodsRebuke_VALUE = 270;
          /**
           * <code>kKillEaterEventType_Mars_GodsRebukeKills = 271;</code>
           */
          public static final int kKillEaterEventType_Mars_GodsRebukeKills_VALUE = 271;
          /**
           * <code>kKillEaterEventType_Snapfire_LizardBlobsKills = 272;</code>
           */
          public static final int kKillEaterEventType_Snapfire_LizardBlobsKills_VALUE = 272;
          /**
           * <code>kKillEaterEventType_Snapfire_TwoHeroCookieStuns = 273;</code>
           */
          public static final int kKillEaterEventType_Snapfire_TwoHeroCookieStuns_VALUE = 273;
          /**
           * <code>Custom_KillStreak = 274;</code>
           */
          public static final int Custom_KillStreak_VALUE = 274;


          public final int getNumber() { return value; }

          public static MvpAccoladeType valueOf(int value) {
            switch (value) {
              case 1: return kills;
              case 2: return deaths;
              case 3: return assists;
              case 5: return net_worth;
              case 6: return item_value;
              case 7: return support_gold_spent;
              case 8: return wards_placed;
              case 9: return dewards;
              case 10: return camps_stacked;
              case 11: return last_hits;
              case 12: return denies;
              case 13: return kKillEaterEvent_Killing_Sprees;
              case 14: return kKillEaterEvent_Godlike;
              case 15: return kKillEaterEvent_Towers_Destroyed;
              case 16: return kKillEaterEventType_Invoker_SunstrikeKills;
              case 17: return kKillEaterEventType_Axe_Culls;
              case 18: return kKillEaterEventType_Axe_BattleHungerKills;
              case 19: return kKillEaterEventType_LowHealthKills;
              case 20: return kKillEaterEventType_Invoker_TornadoKills;
              case 21: return kKillEaterEventType_Sven_DoubleStuns;
              case 22: return kKillEaterEventType_Sven_WarcryAssists;
              case 23: return kKillEaterEventType_Sven_CleaveDoubleKills;
              case 24: return kKillEaterEventType_Sven_TeleportInterrupts;
              case 25: return kKillEaterEventType_Faceless_MultiChrono;
              case 26: return kKillEaterEventType_Faceless_ChronoKills;
              case 27: return kKillEaterEventType_Ursa_MultiShocks;
              case 28: return kKillEaterEventType_RoshanKills;
              case 29: return kKillEaterEventType_Lion_FingerKills;
              case 32: return kKillEaterEventType_Riki_SmokedHeroKills;
              case 33: return kKillEaterEventType_HeroesRevealedWithDust;
              case 34: return kKillEaterEventType_SkeletonKing_ReincarnationKills;
              case 35: return kKillEaterEventType_Skywrath_FlareKills;
              case 36: return kKillEaterEventType_Leshrac_SplitEarthStuns;
              case 37: return kKillEaterEventType_Mirana_MaxStunArrows;
              case 38: return kKillEaterEventType_PhantomAssassin_CoupdeGraceCrits;
              case 39: return kKillEaterEventType_PhantomAssassin_DaggerCrits;
              case 40: return kKillEaterEventType_Meepo_Earthbinds;
              case 41: return kKillEaterEventType_Bloodseeker_RuptureKills;
              case 42: return kKillEaterEventType_Slark_LeashedEnemies;
              case 43: return kKillEaterEventType_Disruptor_FountainGlimpses;
              case 44: return kKillEaterEventType_Rubick_SpellsStolen;
              case 45: return kKillEaterEventType_Rubick_UltimatesStolen;
              case 46: return kKillEaterEventType_Doom_EnemiesDoomed;
              case 47: return kKillEaterEventType_Omniknight_Purifications;
              case 48: return kKillEaterEventType_Omniknight_AlliesRepelled;
              case 49: return kKillEaterEventType_Omniknight_EnemiesRepelled;
              case 50: return kKillEaterEventType_Warlock_FiveHeroFatalBonds;
              case 51: return kKillEaterEventType_CrystalMaiden_FrostbittenEnemies;
              case 52: return kKillEaterEventType_CrystalMaiden_CrystalNovas;
              case 53: return kKillEaterEventType_Kunkka_DoubleHeroTorrents;
              case 54: return kKillEaterEventType_Kunkka_TripleHeroGhostShips;
              case 55: return kKillEaterEventType_NagaSiren_EnemiesEnsnared;
              case 56: return kKillEaterEventType_NagaSiren_TripleHeroRipTides;
              case 57: return kKillEaterEventType_Lycan_KillsDuringShapeshift;
              case 58: return kKillEaterEventType_Pudge_DismemberKills;
              case 59: return kKillEaterEventType_Pudge_EnemyHeroesHooked;
              case 60: return kKillEaterEventType_Pudge_HookKills;
              case 61: return kKillEaterEventType_Pudge_UnseenEnemyHeroesHooked;
              case 62: return kKillEaterEventType_DrowRanger_EnemiesSilenced;
              case 63: return kKillEaterEventType_DrowRanger_MultiHeroSilences;
              case 64: return kKillEaterEventType_DrowRanger_SilencedKills;
              case 65: return kKillEaterEventType_DrowRanger_FrostArrowKills;
              case 66: return kKillEaterEventType_DragonKnight_KillsInDragonForm;
              case 67: return kKillEaterEventType_DragonKnight_BreatheFireKills;
              case 68: return kKillEaterEventType_DragonKnight_SplashKills;
              case 69: return kKillEaterEventType_WitchDoctor_CaskStuns;
              case 70: return kKillEaterEventType_WitchDoctor_MaledictKills;
              case 71: return kKillEaterEventType_WitchDoctor_MultiHeroMaledicts;
              case 72: return kKillEaterEventType_WitchDoctor_DeathWardKills;
              case 73: return kKillEaterEventType_Disruptor_ThunderStrikeKills;
              case 74: return kKillEaterEventType_Disruptor_HeroesGlimpsed;
              case 75: return kKillEaterEventType_CrystalMaiden_FreezingFieldKills;
              case 77: return kKillEaterEventType_Medusa_EnemiesPetrified;
              case 78: return kKillEaterEventType_Warlock_FatalBondsKills;
              case 79: return kKillEaterEventType_Warlock_GolemKills;
              case 80: return kKillEaterEventType_Tusk_WalrusPunches;
              case 81: return kKillEaterEventType_Tusk_SnowballStuns;
              case 82: return kKillEaterEventType_Earthshaker_FissureStuns;
              case 83: return kKillEaterEventType_Earthshaker_3HeroEchoslams;
              case 84: return kKillEaterEventType_SandKing_BurrowstrikeStuns;
              case 85: return kKillEaterEventType_SandKing_EpicenterKills;
              case 86: return kKillEaterEventType_SkywrathMage_AncientSealKills;
              case 87: return kKillEaterEventType_SkywrathMage_ConcussiveShotKills;
              case 88: return kKillEaterEventType_Luna_LucentBeamKills;
              case 89: return kKillEaterEventType_Luna_EclipseKills;
              case 90: return kKillEaterEventType_KeeperOfTheLight_IlluminateKills;
              case 91: return kKillEaterEventType_KeeperOfTheLight_ManaLeakStuns;
              case 92: return kKillEaterEventType_KeeperOfTheLight_TeammatesRecalled;
              case 93: return kKillEaterEventType_LegionCommander_DuelsWon;
              case 94: return kKillEaterEventType_Beastmaster_RoarKills;
              case 95: return kKillEaterEventType_Beastmaster_RoarMultiKills;
              case 96: return kKillEaterEventType_Windrunner_FocusFireBuildings;
              case 97: return kKillEaterEventType_Windrunner_PowershotKills;
              case 98: return kKillEaterEventType_PhantomAssassin_DaggerLastHits;
              case 99: return kKillEaterEventType_PhantomAssassin_PhantomStrikeKills;
              case 100: return kKillEaterEventType_DeathProphet_CryptSwarmKills;
              case 101: return kKillEaterEventType_DeathProphet_ExorcismBuildingKills;
              case 102: return kKillEaterEventType_DeathProphet_ExorcismSpiritsSummoned;
              case 103: return kKillEaterEventType_DeathProphet_MultiHeroSilences;
              case 104: return kKillEaterEventType_Abaddon_MistCoilKills;
              case 105: return kKillEaterEventType_Abaddon_MistCoilHealed;
              case 106: return kKillEaterEventType_Abaddon_AphoticShieldKills;
              case 107: return kKillEaterEventType_Lich_ChainFrostTripleKills;
              case 108: return kKillEaterEventType_Lich_ChainFrostMultiKills;
              case 109: return kKillEaterEventType_Lich_ChainFrostBounces;
              case 110: return kKillEaterEventType_Ursa_EnragedKills;
              case 111: return kKillEaterEventType_Ursa_EarthshockKills;
              case 112: return kKillEaterEventType_Lina_LagunaBladeKills;
              case 113: return kKillEaterEventType_Lina_DragonSlaveKills;
              case 114: return kKillEaterEventType_Lina_LightStrikeArrayStuns;
              case 115: return kKillEaterEvent_Barracks_Destroyed;
              case 116: return kKillEaterEvent_TemplarAssassin_MeldKills;
              case 117: return kKillEaterEvent_TemplarAssassin_HeroesSlowed;
              case 118: return kKillEaterEvent_Sniper_AssassinationKills;
              case 119: return kKillEaterEvent_Sniper_HeadshotStuns;
              case 120: return kKillEaterEvent_EarthSpirit_SmashStuns;
              case 121: return kKillEaterEvent_EarthSpirit_GripSilences;
              case 122: return kKillEaterEvent_ShadowShaman_ShackleKills;
              case 123: return kKillEaterEvent_ShadowShaman_HexKills;
              case 124: return kKillEaterEvent_Centaur_EnemiesStomped;
              case 125: return kKillEaterEvent_Centaur_DoubleEdgeKills;
              case 126: return kKillEaterEvent_Centaur_ReturnKills;
              case 127: return kKillEaterEvent_EmberSpirit_EnemiesChained;
              case 128: return kKillEaterEvent_EmberSpirit_SleightOfFistMultiKills;
              case 129: return kKillEaterEvent_Puck_OrbKills;
              case 130: return kKillEaterEvent_VengefulSpirit_EnemiesStunned;
              case 131: return kKillEaterEvent_Lifestealer_RageKills;
              case 132: return kKillEaterEvent_Lifestealer_OpenWoundsKills;
              case 133: return kKillEaterEvent_Lifestealer_InfestKills;
              case 134: return kKillEaterEvent_ElderTitan_SpiritKills;
              case 135: return kKillEaterEvent_ElderTitan_GoodStomps;
              case 136: return kKillEaterEvent_Clockwerk_RocketKills;
              case 137: return kKillEaterEvent_Clockwerk_BlindRocketKills;
              case 138: return kKillEaterEvent_StormSpirit_BallKills;
              case 139: return kKillEaterEvent_StormSpirit_DoubleRemnantKills;
              case 140: return kKillEaterEvent_StormSpirit_VortexKills;
              case 141: return kKillEaterEvent_Tinker_DoubleMissileKills;
              case 142: return kKillEaterEvent_Tinker_LaserKills;
              case 143: return kKillEaterEvent_Techies_SuicideKills;
              case 144: return kKillEaterEvent_Techies_LandMineKills;
              case 145: return kKillEaterEvent_Techies_StatisTrapStuns;
              case 146: return kKillEaterEvent_Techies_RemoteMineKills;
              case 147: return kKillEaterEvent_ShadowFiend_TripleRazeKills;
              case 148: return kKillEaterEvent_ShadowFiend_RequiemMultiKills;
              case 149: return kKillEaterEvent_ShadowFiend_QRazeKills;
              case 150: return kKillEaterEvent_ShadowFiend_WRazeKills;
              case 151: return kKillEaterEvent_ShadowFiend_ERazeKills;
              case 152: return kKillEaterEvent_Oracle_FatesEdictKills;
              case 153: return kKillEaterEvent_Oracle_FalsePromiseSaves;
              case 154: return kKillEaterEvent_Juggernaut_OmnislashKills;
              case 157: return kKillEaterEventType_SkeletonKing_SkeletonHeroKills;
              case 158: return kKillEaterEventType_DarkWillow_CursedCrownTripleStuns;
              case 159: return kKillEaterEventType_Dazzle_ShallowGraveSaves;
              case 160: return kKillEaterEventType_Dazzle_PoisonTouchKills;
              case 161: return kKillEaterEventType_ThreeManMeks;
              case 162: return kKillEaterEventType_Viper_PoisonAttackKills;
              case 163: return kKillEaterEventType_Viper_CorrosiveSkinKills;
              case 164: return kKillEaterEventType_ThreeHeroVeils;
              case 165: return kKillEaterEventType_Viper_KillsDuringViperStrike;
              case 166: return kKillEaterEventType_SolarCrestKills;
              case 167: return kKillEaterEventType_Tiny_TreeThrowKills;
              case 168: return kKillEaterEventType_Riki_BackstabKills;
              case 169: return kKillEaterEventType_Phoenix_ThreeHeroSupernovaStuns;
              case 170: return kKillEaterEventType_Terrorblade_MetamorphosisKills;
              case 171: return kKillEaterEventType_Lion_GreatFingerKills;
              case 172: return kKillEaterEventType_Antimage_SpellsBlockedWithAghanims;
              case 173: return kKillEaterEventType_Antimage_ThreeManManaVoids;
              case 174: return kKillEaterEventType_ArcWarden_TempestDoubleKills;
              case 175: return kKillEaterEventType_ArcWarden_SparkWraithKills;
              case 176: return kKillEaterEventType_Bane_BrainSapKills;
              case 177: return kKillEaterEventType_Bane_FiendsGripKills;
              case 178: return kKillEaterEventType_Batrider_TripleHeroFlamebreaks;
              case 179: return kKillEaterEventType_Batrider_DoubleHeroLassoes;
              case 180: return kKillEaterEventType_Brewmaster_KillsDuringPrimalSplit;
              case 181: return kKillEaterEventType_Bristleback_KillsUnderFourQuillStacks;
              case 182: return kKillEaterEventType_Bristleback_TripleHeroNasalGoo;
              case 183: return kKillEaterEventType_Broodmother_SpiderlingHeroKills;
              case 184: return kKillEaterEventType_Broodmother_KillsInsideWeb;
              case 185: return kKillEaterEventType_Centaur_ThreeHeroStampede;
              case 186: return kKillEaterEventType_ChaosKnight_RealityRiftKills;
              case 187: return kKillEaterEventType_Chen_KillsWithPenitence;
              case 188: return kKillEaterEventType_CrystalMaiden_TwoHeroCrystalNovas;
              case 189: return kKillEaterEventType_CrystalMaiden_ThreeHeroFreezingFields;
              case 190: return kKillEaterEventType_Dazzle_ShadowWaveKills;
              case 191: return kKillEaterEventType_DeathProphet_SiphonKills;
              case 192: return kKillEaterEventType_DeathProphet_ExorcismKillsDuringEuls;
              case 193: return kKillEaterEventType_Disruptor_ThreeHeroKineticFieldStaticStorm;
              case 194: return kKillEaterEventType_Doom_InfernalBladeBurnKills;
              case 195: return kKillEaterEventType_DrowRanger_PrecisionAuraCreepTowerKills;
              case 196: return kKillEaterEventType_EmberSpirit_RemnantKills;
              case 197: return kKillEaterEventType_EmberSpirit_SleightOfFistKills;
              case 198: return kKillEaterEventType_Enigma_MidnightPulseBlackHoleCombos;
              case 199: return kKillEaterEventType_Enigma_ThreeManBlackHoles;
              case 200: return kKillEaterEventType_FacelessVoid_MultiHeroTimeDilation;
              case 201: return kKillEaterEventType_Gyrocopter_ThreeHeroFlakCannon;
              case 202: return kKillEaterEventType_Gyrocopter_HomingMissileKills;
              case 203: return kKillEaterEventType_Gyrocopter_RocketBarrageKills;
              case 204: return kKillEaterEventType_Huskar_KillsDuringLifeBreak;
              case 205: return kKillEaterEventType_Huskar_BurningSpearKills;
              case 206: return kKillEaterEventType_Invoker_MultiHeroIceWall;
              case 207: return kKillEaterEventType_Invoker_ThreeHeroEMP;
              case 208: return kKillEaterEventType_Invoker_ThreeHeroDeafeningBlast;
              case 209: return kKillEaterEventType_Invoker_MultiHeroChaosMeteor;
              case 210: return kKillEaterEventType_Jakiro_MultiHeroDualBreath;
              case 211: return kKillEaterEventType_Jakiro_IcePathMacropyreCombos;
              case 212: return kKillEaterEventType_Leshrac_PulseNovaKills;
              case 213: return kKillEaterEventType_Leshrac_ThreeHeroLightningStorm;
              case 214: return kKillEaterEventType_Lion_ThreeHeroFingerOfDeath;
              case 215: return kKillEaterEventType_Meepo_PoofKills;
              case 216: return kKillEaterEventType_Meepo_MultiHeroEarthbinds;
              case 217: return kKillEaterEventType_NightStalker_NighttimeKills;
              case 218: return kKillEaterEventType_Morphling_KillsDuringReplicate;
              case 219: return kKillEaterEventType_OgreMagi_FireblastKills;
              case 220: return kKillEaterEventType_OgreMagi_IgniteKills;
              case 221: return kKillEaterEventType_DominatingKillStreaks;
              case 222: return kKillEaterEventType_MegaKillStreaks;
              case 223: return kKillEaterEventType_Alchemist_AghanimsGiven;
              case 224: return kKillEaterEventType_VeilsLeadingToKills;
              case 225: return kKillEaterEventType_DustLeadingToKills;
              case 226: return kKillEaterEventType_WitchDoctor_MultiHeroCaskStuns;
              case 227: return kKillEaterEventType_Weaver_ShukuchiKills;
              case 228: return kKillEaterEventType_Windrunner_ShackleFocusFireKills;
              case 229: return kKillEaterEventType_VengefulSpirit_VengeanceAuraIllusionKills;
              case 230: return kKillEaterEventType_Tusk_WalrusPunchKills;
              case 231: return kKillEaterEventType_Tinker_TripleHeroLasers;
              case 232: return kKillEaterEventType_TemplarAssassin_MultiHeroPsiBlades;
              case 233: return kKillEaterEventType_Sven_KillsDuringGodsStrength;
              case 234: return kKillEaterEventType_Sniper_ThreeHeroShrapnels;
              case 235: return kKillEaterEventType_Slark_KillsDuringShadowDance;
              case 236: return kKillEaterEventType_ShadowShaman_MultiHeroEtherShocks;
              case 237: return kKillEaterEventType_ShadowShaman_SerpentWardShackleKills;
              case 238: return kKillEaterEventType_Riki_ThreeHeroTricksOfTheTrade;
              case 239: return kKillEaterEventType_Razor_EyeOfTheStormKills;
              case 240: return kKillEaterEventType_Pugna_LifeDrainKills;
              case 241: return kKillEaterEventType_ObsidianDestroyer_SanitysEclipseKills;
              case 242: return kKillEaterEventType_Oracle_MultiHeroFortunesEnd;
              case 243: return kKillEaterEventType_Omniknight_PurificationKills;
              case 244: return kKillEaterEventType_NightStalker_EnemyMissesUnderCripplingFear;
              case 245: return kKillEaterEventType_Warlock_ThreeHeroFatalBonds;
              case 246: return kKillEaterEventType_Riki_TricksOfTheTradeKills;
              case 247: return kKillEaterEventType_Earthshaker_AftershockHits10;
              case 248: return kKillEaterEventType_Earthshaker_5HeroEchoslams;
              case 249: return kKillEaterEventType_Lina_LagunaBladeHeroKills;
              case 250: return kKillEaterEventType_Lina_LightStrikeHeroStuns;
              case 251: return kKillEaterEventType_Earthshaker_FissureMultiStuns;
              case 252: return kKillEaterEventType_Earthshaker_TotemKills;
              case 253: return kKillEaterEventType_Pangolier_SwashbuckleKills;
              case 254: return kKillEaterEventType_Furion_EnemyHeroesTrapped;
              case 255: return kKillEaterEventType_Pangolier_HeartpiercerKills;
              case 256: return kKillEaterEventType_Medusa_MultiHeroStoneGaze;
              case 257: return kKillEaterEventType_Medusa_SplitShotKills;
              case 258: return kKillEaterEventType_Mirana_MultiHeroStarstorm;
              case 259: return kKillEaterEventType_Mirana_KillsFromMoonlightShadow;
              case 260: return kKillEaterEventType_Magnus_MultiHeroSkewers;
              case 261: return kKillEaterEventType_Magnus_MultiHeroReversePolarity;
              case 262: return kKillEaterEventType_Magnus_HeroesSlowedWithShockwave;
              case 263: return kKillEaterEventType_NagaSiren_MultiHeroSong;
              case 264: return kKillEaterEventType_NagaSiren_AlliesHealedBySong;
              case 265: return kKillEaterEventType_LoneDruid_MultiHeroRoar;
              case 266: return kKillEaterEventType_LoneDruid_BattleCryKills;
              case 267: return kKillEaterEventType_WinterWyvern_ThreeHeroCurses;
              case 268: return kKillEaterEventType_Antimage_SpellsBlockedWithCounterspell;
              case 269: return kKillEaterEventType_Mars_EnemiesKilledInArena;
              case 270: return kKillEaterEventType_Mars_MultiHeroGodsRebuke;
              case 271: return kKillEaterEventType_Mars_GodsRebukeKills;
              case 272: return kKillEaterEventType_Snapfire_LizardBlobsKills;
              case 273: return kKillEaterEventType_Snapfire_TwoHeroCookieStuns;
              case 274: return Custom_KillStreak;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<MvpAccoladeType>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<MvpAccoladeType>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<MvpAccoladeType>() {
                  public MvpAccoladeType findValueByNumber(int number) {
                    return MvpAccoladeType.valueOf(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(index);
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.getDescriptor().getEnumTypes().get(0);
          }

          private static final MvpAccoladeType[] VALUES = values();

          public static MvpAccoladeType valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
          }

          private final int index;
          private final int value;

          private MvpAccoladeType(int index, int value) {
            this.index = index;
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType)
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type_;
        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         */
        public boolean hasType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType getType() {
          return type_;
        }

        public static final int DETAIL_VALUE_FIELD_NUMBER = 2;
        private float detailValue_;
        /**
         * <code>optional float detail_value = 2;</code>
         */
        public boolean hasDetailValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float detail_value = 2;</code>
         */
        public float getDetailValue() {
          return detailValue_;
        }

        private void initFields() {
          type_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.kills;
          detailValue_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, type_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, detailValue_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, type_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, detailValue_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code CMvpData.MvpDatum.MvpAccolade}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:CMvpData.MvpDatum.MvpAccolade)
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder.class);
          }

          // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            type_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.kills;
            bitField0_ = (bitField0_ & ~0x00000001);
            detailValue_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
          }

          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade getDefaultInstanceForType() {
            return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance();
          }

          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade build() {
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade buildPartial() {
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.type_ = type_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.detailValue_ = detailValue_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade) {
              return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade other) {
            if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance()) return this;
            if (other.hasType()) {
              setType(other.getType());
            }
            if (other.hasDetailValue()) {
              setDetailValue(other.getDetailValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.kills;
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           */
          public boolean hasType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           */
          public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType getType() {
            return type_;
          }
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           */
          public Builder setType(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            type_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType type = 1 [default = kills];</code>
           */
          public Builder clearType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            type_ = skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.MvpAccoladeType.kills;
            onChanged();
            return this;
          }

          private float detailValue_ ;
          /**
           * <code>optional float detail_value = 2;</code>
           */
          public boolean hasDetailValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float detail_value = 2;</code>
           */
          public float getDetailValue() {
            return detailValue_;
          }
          /**
           * <code>optional float detail_value = 2;</code>
           */
          public Builder setDetailValue(float value) {
            bitField0_ |= 0x00000002;
            detailValue_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float detail_value = 2;</code>
           */
          public Builder clearDetailValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            detailValue_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:CMvpData.MvpDatum.MvpAccolade)
        }

        static {
          defaultInstance = new MvpAccolade(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:CMvpData.MvpDatum.MvpAccolade)
      }

      private int bitField0_;
      public static final int SLOT_FIELD_NUMBER = 1;
      private int slot_;
      /**
       * <code>optional uint32 slot = 1;</code>
       */
      public boolean hasSlot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 slot = 1;</code>
       */
      public int getSlot() {
        return slot_;
      }

      public static final int ACCOLADES_FIELD_NUMBER = 2;
      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade> accolades_;
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade> getAccoladesList() {
        return accolades_;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
          getAccoladesOrBuilderList() {
        return accolades_;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      public int getAccoladesCount() {
        return accolades_.size();
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade getAccolades(int index) {
        return accolades_.get(index);
      }
      /**
       * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder getAccoladesOrBuilder(
          int index) {
        return accolades_.get(index);
      }

      public static final int ACCOUNT_ID_FIELD_NUMBER = 3;
      private int accountId_;
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      public boolean hasAccountId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 account_id = 3;</code>
       */
      public int getAccountId() {
        return accountId_;
      }

      private void initFields() {
        slot_ = 0;
        accolades_ = java.util.Collections.emptyList();
        accountId_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, slot_);
        }
        for (int i = 0; i < accolades_.size(); i++) {
          output.writeMessage(2, accolades_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(3, accountId_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, slot_);
        }
        for (int i = 0; i < accolades_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, accolades_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, accountId_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMvpData.MvpDatum}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMvpData.MvpDatum)
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder.class);
        }

        // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAccoladesFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          slot_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          if (accoladesBuilder_ == null) {
            accolades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            accoladesBuilder_.clear();
          }
          accountId_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_MvpDatum_descriptor;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum getDefaultInstanceForType() {
          return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.getDefaultInstance();
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum build() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum buildPartial() {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.slot_ = slot_;
          if (accoladesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              accolades_ = java.util.Collections.unmodifiableList(accolades_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.accolades_ = accolades_;
          } else {
            result.accolades_ = accoladesBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.accountId_ = accountId_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum) {
            return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum other) {
          if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.getDefaultInstance()) return this;
          if (other.hasSlot()) {
            setSlot(other.getSlot());
          }
          if (accoladesBuilder_ == null) {
            if (!other.accolades_.isEmpty()) {
              if (accolades_.isEmpty()) {
                accolades_ = other.accolades_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureAccoladesIsMutable();
                accolades_.addAll(other.accolades_);
              }
              onChanged();
            }
          } else {
            if (!other.accolades_.isEmpty()) {
              if (accoladesBuilder_.isEmpty()) {
                accoladesBuilder_.dispose();
                accoladesBuilder_ = null;
                accolades_ = other.accolades_;
                bitField0_ = (bitField0_ & ~0x00000002);
                accoladesBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAccoladesFieldBuilder() : null;
              } else {
                accoladesBuilder_.addAllMessages(other.accolades_);
              }
            }
          }
          if (other.hasAccountId()) {
            setAccountId(other.getAccountId());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int slot_ ;
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public boolean hasSlot() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public int getSlot() {
          return slot_;
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public Builder setSlot(int value) {
          bitField0_ |= 0x00000001;
          slot_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 slot = 1;</code>
         */
        public Builder clearSlot() {
          bitField0_ = (bitField0_ & ~0x00000001);
          slot_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade> accolades_ =
          java.util.Collections.emptyList();
        private void ensureAccoladesIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            accolades_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade>(accolades_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder> accoladesBuilder_;

        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade> getAccoladesList() {
          if (accoladesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(accolades_);
          } else {
            return accoladesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public int getAccoladesCount() {
          if (accoladesBuilder_ == null) {
            return accolades_.size();
          } else {
            return accoladesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade getAccolades(int index) {
          if (accoladesBuilder_ == null) {
            return accolades_.get(index);
          } else {
            return accoladesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder setAccolades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade value) {
          if (accoladesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAccoladesIsMutable();
            accolades_.set(index, value);
            onChanged();
          } else {
            accoladesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder setAccolades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder builderForValue) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.set(index, builderForValue.build());
            onChanged();
          } else {
            accoladesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade value) {
          if (accoladesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAccoladesIsMutable();
            accolades_.add(value);
            onChanged();
          } else {
            accoladesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade value) {
          if (accoladesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAccoladesIsMutable();
            accolades_.add(index, value);
            onChanged();
          } else {
            accoladesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder builderForValue) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.add(builderForValue.build());
            onChanged();
          } else {
            accoladesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAccolades(
            int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder builderForValue) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.add(index, builderForValue.build());
            onChanged();
          } else {
            accoladesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder addAllAccolades(
            java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade> values) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, accolades_);
            onChanged();
          } else {
            accoladesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder clearAccolades() {
          if (accoladesBuilder_ == null) {
            accolades_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            accoladesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public Builder removeAccolades(int index) {
          if (accoladesBuilder_ == null) {
            ensureAccoladesIsMutable();
            accolades_.remove(index);
            onChanged();
          } else {
            accoladesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder getAccoladesBuilder(
            int index) {
          return getAccoladesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder getAccoladesOrBuilder(
            int index) {
          if (accoladesBuilder_ == null) {
            return accolades_.get(index);  } else {
            return accoladesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
             getAccoladesOrBuilderList() {
          if (accoladesBuilder_ != null) {
            return accoladesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(accolades_);
          }
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder addAccoladesBuilder() {
          return getAccoladesFieldBuilder().addBuilder(
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance());
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder addAccoladesBuilder(
            int index) {
          return getAccoladesFieldBuilder().addBuilder(
              index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.getDefaultInstance());
        }
        /**
         * <code>repeated .CMvpData.MvpDatum.MvpAccolade accolades = 2;</code>
         */
        public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder> 
             getAccoladesBuilderList() {
          return getAccoladesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder> 
            getAccoladesFieldBuilder() {
          if (accoladesBuilder_ == null) {
            accoladesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccolade.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.MvpAccoladeOrBuilder>(
                    accolades_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            accolades_ = null;
          }
          return accoladesBuilder_;
        }

        private int accountId_ ;
        /**
         * <code>optional uint32 account_id = 3;</code>
         */
        public boolean hasAccountId() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 account_id = 3;</code>
         */
        public int getAccountId() {
          return accountId_;
        }
        /**
         * <code>optional uint32 account_id = 3;</code>
         */
        public Builder setAccountId(int value) {
          bitField0_ |= 0x00000004;
          accountId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 account_id = 3;</code>
         */
        public Builder clearAccountId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          accountId_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMvpData.MvpDatum)
      }

      static {
        defaultInstance = new MvpDatum(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMvpData.MvpDatum)
    }

    public static final int MVPS_FIELD_NUMBER = 1;
    private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum> mvps_;
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum> getMvpsList() {
      return mvps_;
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder> 
        getMvpsOrBuilderList() {
      return mvps_;
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    public int getMvpsCount() {
      return mvps_.size();
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum getMvps(int index) {
      return mvps_.get(index);
    }
    /**
     * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
     */
    public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder getMvpsOrBuilder(
        int index) {
      return mvps_.get(index);
    }

    private void initFields() {
      mvps_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < mvps_.size(); i++) {
        output.writeMessage(1, mvps_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mvps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mvps_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMvpData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMvpData)
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.class, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.Builder.class);
      }

      // Construct using skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMvpsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (mvpsBuilder_ == null) {
          mvps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          mvpsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.internal_static_CMvpData_descriptor;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData getDefaultInstanceForType() {
        return skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.getDefaultInstance();
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData build() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData buildPartial() {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData result = new skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData(this);
        int from_bitField0_ = bitField0_;
        if (mvpsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            mvps_ = java.util.Collections.unmodifiableList(mvps_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mvps_ = mvps_;
        } else {
          result.mvps_ = mvpsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData) {
          return mergeFrom((skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData other) {
        if (other == skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.getDefaultInstance()) return this;
        if (mvpsBuilder_ == null) {
          if (!other.mvps_.isEmpty()) {
            if (mvps_.isEmpty()) {
              mvps_ = other.mvps_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMvpsIsMutable();
              mvps_.addAll(other.mvps_);
            }
            onChanged();
          }
        } else {
          if (!other.mvps_.isEmpty()) {
            if (mvpsBuilder_.isEmpty()) {
              mvpsBuilder_.dispose();
              mvpsBuilder_ = null;
              mvps_ = other.mvps_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mvpsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMvpsFieldBuilder() : null;
            } else {
              mvpsBuilder_.addAllMessages(other.mvps_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum> mvps_ =
        java.util.Collections.emptyList();
      private void ensureMvpsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          mvps_ = new java.util.ArrayList<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum>(mvps_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder> mvpsBuilder_;

      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum> getMvpsList() {
        if (mvpsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mvps_);
        } else {
          return mvpsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public int getMvpsCount() {
        if (mvpsBuilder_ == null) {
          return mvps_.size();
        } else {
          return mvpsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum getMvps(int index) {
        if (mvpsBuilder_ == null) {
          return mvps_.get(index);
        } else {
          return mvpsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder setMvps(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum value) {
        if (mvpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMvpsIsMutable();
          mvps_.set(index, value);
          onChanged();
        } else {
          mvpsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder setMvps(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder builderForValue) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.set(index, builderForValue.build());
          onChanged();
        } else {
          mvpsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum value) {
        if (mvpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMvpsIsMutable();
          mvps_.add(value);
          onChanged();
        } else {
          mvpsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum value) {
        if (mvpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMvpsIsMutable();
          mvps_.add(index, value);
          onChanged();
        } else {
          mvpsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder builderForValue) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.add(builderForValue.build());
          onChanged();
        } else {
          mvpsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addMvps(
          int index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder builderForValue) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.add(index, builderForValue.build());
          onChanged();
        } else {
          mvpsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder addAllMvps(
          java.lang.Iterable<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum> values) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mvps_);
          onChanged();
        } else {
          mvpsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder clearMvps() {
        if (mvpsBuilder_ == null) {
          mvps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mvpsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public Builder removeMvps(int index) {
        if (mvpsBuilder_ == null) {
          ensureMvpsIsMutable();
          mvps_.remove(index);
          onChanged();
        } else {
          mvpsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder getMvpsBuilder(
          int index) {
        return getMvpsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder getMvpsOrBuilder(
          int index) {
        if (mvpsBuilder_ == null) {
          return mvps_.get(index);  } else {
          return mvpsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder> 
           getMvpsOrBuilderList() {
        if (mvpsBuilder_ != null) {
          return mvpsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mvps_);
        }
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder addMvpsBuilder() {
        return getMvpsFieldBuilder().addBuilder(
            skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.getDefaultInstance());
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder addMvpsBuilder(
          int index) {
        return getMvpsFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.getDefaultInstance());
      }
      /**
       * <code>repeated .CMvpData.MvpDatum mvps = 1;</code>
       */
      public java.util.List<skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder> 
           getMvpsBuilderList() {
        return getMvpsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder> 
          getMvpsFieldBuilder() {
        if (mvpsBuilder_ == null) {
          mvpsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatum.Builder, skadistats.clarity.wire.dota.s2.proto.S2DotaGcMM.CMvpData.MvpDatumOrBuilder>(
                  mvps_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          mvps_ = null;
        }
        return mvpsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:CMvpData)
    }

    static {
      defaultInstance = new CMvpData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMvpData)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CLobbyTimedRewardDetails_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CLobbyTimedRewardDetails_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgMatchMatchmakingStats_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMvpData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMvpData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMvpData_MvpDatum_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMvpData_MvpDatum_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0s2_dota_gcmessages_common_match_manage" +
      "ment.proto\"\206\001\n\030CLobbyTimedRewardDetails\022" +
      "\026\n\016item_def_index\030\002 \001(\r\022\027\n\017is_supply_cra" +
      "te\030\003 \001(\010\022\025\n\ris_timed_drop\030\004 \001(\010\022\022\n\naccou" +
      "nt_id\030\005 \001(\r\022\016\n\006origin\030\006 \001(\r\"\271\001\n\031CMsgMatc" +
      "hMatchmakingStats\022\032\n\022average_queue_time\030" +
      "\001 \001(\r\022\032\n\022maximum_queue_time\030\002 \001(\r\022d\n\027beh" +
      "avior_score_variance\030\003 \001(\0162\034.EMatchBehav" +
      "iorScoreVariance:%k_EMatchBehaviorScoreV" +
      "ariance_Invalid\"\246i\n\010CMvpData\022 \n\004mvps\030\001 \003",
      "(\0132\022.CMvpData.MvpDatum\032\367h\n\010MvpDatum\022\014\n\004s" +
      "lot\030\001 \001(\r\0221\n\taccolades\030\002 \003(\0132\036.CMvpData." +
      "MvpDatum.MvpAccolade\022\022\n\naccount_id\030\003 \001(\r" +
      "\032\225h\n\013MvpAccolade\022C\n\004type\030\001 \001(\0162..CMvpDat" +
      "a.MvpDatum.MvpAccolade.MvpAccoladeType:\005" +
      "kills\022\024\n\014detail_value\030\002 \001(\002\"\252g\n\017MvpAccol" +
      "adeType\022\t\n\005kills\020\001\022\n\n\006deaths\020\002\022\013\n\007assist" +
      "s\020\003\022\r\n\tnet_worth\020\005\022\016\n\nitem_value\020\006\022\026\n\022su" +
      "pport_gold_spent\020\007\022\020\n\014wards_placed\020\010\022\013\n\007" +
      "dewards\020\t\022\021\n\rcamps_stacked\020\n\022\r\n\tlast_hit",
      "s\020\013\022\n\n\006denies\020\014\022\"\n\036kKillEaterEvent_Killi" +
      "ng_Sprees\020\r\022\033\n\027kKillEaterEvent_Godlike\020\016" +
      "\022$\n kKillEaterEvent_Towers_Destroyed\020\017\022." +
      "\n*kKillEaterEventType_Invoker_SunstrikeK" +
      "ills\020\020\022!\n\035kKillEaterEventType_Axe_Culls\020" +
      "\021\022-\n)kKillEaterEventType_Axe_BattleHunge" +
      "rKills\020\022\022&\n\"kKillEaterEventType_LowHealt" +
      "hKills\020\023\022,\n(kKillEaterEventType_Invoker_" +
      "TornadoKills\020\024\022(\n$kKillEaterEventType_Sv" +
      "en_DoubleStuns\020\025\022*\n&kKillEaterEventType_",
      "Sven_WarcryAssists\020\026\022.\n*kKillEaterEventT" +
      "ype_Sven_CleaveDoubleKills\020\027\022/\n+kKillEat" +
      "erEventType_Sven_TeleportInterrupts\020\030\022,\n" +
      "(kKillEaterEventType_Faceless_MultiChron" +
      "o\020\031\022,\n(kKillEaterEventType_Faceless_Chro" +
      "noKills\020\032\022(\n$kKillEaterEventType_Ursa_Mu" +
      "ltiShocks\020\033\022#\n\037kKillEaterEventType_Rosha" +
      "nKills\020\034\022(\n$kKillEaterEventType_Lion_Fin" +
      "gerKills\020\035\022,\n(kKillEaterEventType_Riki_S" +
      "mokedHeroKills\020 \022.\n*kKillEaterEventType_",
      "HeroesRevealedWithDust\020!\0227\n3kKillEaterEv" +
      "entType_SkeletonKing_ReincarnationKills\020" +
      "\"\022+\n\'kKillEaterEventType_Skywrath_FlareK" +
      "ills\020#\022/\n+kKillEaterEventType_Leshrac_Sp" +
      "litEarthStuns\020$\022,\n(kKillEaterEventType_M" +
      "irana_MaxStunArrows\020%\0228\n4kKillEaterEvent" +
      "Type_PhantomAssassin_CoupdeGraceCrits\020&\022" +
      "3\n/kKillEaterEventType_PhantomAssassin_D" +
      "aggerCrits\020\'\022(\n$kKillEaterEventType_Meep" +
      "o_Earthbinds\020(\0220\n,kKillEaterEventType_Bl",
      "oodseeker_RuptureKills\020)\022,\n(kKillEaterEv" +
      "entType_Slark_LeashedEnemies\020*\0222\n.kKillE" +
      "aterEventType_Disruptor_FountainGlimpses" +
      "\020+\022+\n\'kKillEaterEventType_Rubick_SpellsS" +
      "tolen\020,\022.\n*kKillEaterEventType_Rubick_Ul" +
      "timatesStolen\020-\022*\n&kKillEaterEventType_D" +
      "oom_EnemiesDoomed\020.\0220\n,kKillEaterEventTy" +
      "pe_Omniknight_Purifications\020/\0221\n-kKillEa" +
      "terEventType_Omniknight_AlliesRepelled\0200" +
      "\0222\n.kKillEaterEventType_Omniknight_Enemi",
      "esRepelled\0201\0222\n.kKillEaterEventType_Warl" +
      "ock_FiveHeroFatalBonds\0202\0228\n4kKillEaterEv" +
      "entType_CrystalMaiden_FrostbittenEnemies" +
      "\0203\0222\n.kKillEaterEventType_CrystalMaiden_" +
      "CrystalNovas\0204\0221\n-kKillEaterEventType_Ku" +
      "nkka_DoubleHeroTorrents\0205\0223\n/kKillEaterE" +
      "ventType_Kunkka_TripleHeroGhostShips\0206\0221" +
      "\n-kKillEaterEventType_NagaSiren_EnemiesE" +
      "nsnared\0207\0224\n0kKillEaterEventType_NagaSir" +
      "en_TripleHeroRipTides\0208\0223\n/kKillEaterEve",
      "ntType_Lycan_KillsDuringShapeshift\0209\022,\n(" +
      "kKillEaterEventType_Pudge_DismemberKills" +
      "\020:\022/\n+kKillEaterEventType_Pudge_EnemyHer" +
      "oesHooked\020;\022\'\n#kKillEaterEventType_Pudge" +
      "_HookKills\020<\0225\n1kKillEaterEventType_Pudg" +
      "e_UnseenEnemyHeroesHooked\020=\0222\n.kKillEate" +
      "rEventType_DrowRanger_EnemiesSilenced\020>\022" +
      "4\n0kKillEaterEventType_DrowRanger_MultiH" +
      "eroSilences\020?\0220\n,kKillEaterEventType_Dro" +
      "wRanger_SilencedKills\020@\0222\n.kKillEaterEve",
      "ntType_DrowRanger_FrostArrowKills\020A\0226\n2k" +
      "KillEaterEventType_DragonKnight_KillsInD" +
      "ragonForm\020B\0225\n1kKillEaterEventType_Drago" +
      "nKnight_BreatheFireKills\020C\0220\n,kKillEater" +
      "EventType_DragonKnight_SplashKills\020D\022-\n)" +
      "kKillEaterEventType_WitchDoctor_CaskStun" +
      "s\020E\0221\n-kKillEaterEventType_WitchDoctor_M" +
      "aledictKills\020F\0226\n2kKillEaterEventType_Wi" +
      "tchDoctor_MultiHeroMaledicts\020G\0222\n.kKillE" +
      "aterEventType_WitchDoctor_DeathWardKills",
      "\020H\0224\n0kKillEaterEventType_Disruptor_Thun" +
      "derStrikeKills\020I\0220\n,kKillEaterEventType_" +
      "Disruptor_HeroesGlimpsed\020J\0228\n4kKillEater" +
      "EventType_CrystalMaiden_FreezingFieldKil" +
      "ls\020K\022/\n+kKillEaterEventType_Medusa_Enemi" +
      "esPetrified\020M\022/\n+kKillEaterEventType_War" +
      "lock_FatalBondsKills\020N\022*\n&kKillEaterEven" +
      "tType_Warlock_GolemKills\020O\022*\n&kKillEater" +
      "EventType_Tusk_WalrusPunches\020P\022*\n&kKillE" +
      "aterEventType_Tusk_SnowballStuns\020Q\0220\n,kK",
      "illEaterEventType_Earthshaker_FissureStu" +
      "ns\020R\0222\n.kKillEaterEventType_Earthshaker_" +
      "3HeroEchoslams\020S\0222\n.kKillEaterEventType_" +
      "SandKing_BurrowstrikeStuns\020T\022/\n+kKillEat" +
      "erEventType_SandKing_EpicenterKills\020U\0225\n" +
      "1kKillEaterEventType_SkywrathMage_Ancien" +
      "tSealKills\020V\0228\n4kKillEaterEventType_Skyw" +
      "rathMage_ConcussiveShotKills\020W\022,\n(kKillE" +
      "aterEventType_Luna_LucentBeamKills\020X\022)\n%" +
      "kKillEaterEventType_Luna_EclipseKills\020Y\022",
      "8\n4kKillEaterEventType_KeeperOfTheLight_" +
      "IlluminateKills\020Z\0226\n2kKillEaterEventType" +
      "_KeeperOfTheLight_ManaLeakStuns\020[\022:\n6kKi" +
      "llEaterEventType_KeeperOfTheLight_Teamma" +
      "tesRecalled\020\\\0220\n,kKillEaterEventType_Leg" +
      "ionCommander_DuelsWon\020]\022-\n)kKillEaterEve" +
      "ntType_Beastmaster_RoarKills\020^\0222\n.kKillE" +
      "aterEventType_Beastmaster_RoarMultiKills" +
      "\020_\0225\n1kKillEaterEventType_Windrunner_Foc" +
      "usFireBuildings\020`\0221\n-kKillEaterEventType",
      "_Windrunner_PowershotKills\020a\0226\n2kKillEat" +
      "erEventType_PhantomAssassin_DaggerLastHi" +
      "ts\020b\022:\n6kKillEaterEventType_PhantomAssas" +
      "sin_PhantomStrikeKills\020c\0224\n0kKillEaterEv" +
      "entType_DeathProphet_CryptSwarmKills\020d\022:" +
      "\n6kKillEaterEventType_DeathProphet_Exorc" +
      "ismBuildingKills\020e\022<\n8kKillEaterEventTyp" +
      "e_DeathProphet_ExorcismSpiritsSummoned\020f" +
      "\0226\n2kKillEaterEventType_DeathProphet_Mul" +
      "tiHeroSilences\020g\022-\n)kKillEaterEventType_",
      "Abaddon_MistCoilKills\020h\022.\n*kKillEaterEve" +
      "ntType_Abaddon_MistCoilHealed\020i\0222\n.kKill" +
      "EaterEventType_Abaddon_AphoticShieldKill" +
      "s\020j\0222\n.kKillEaterEventType_Lich_ChainFro" +
      "stTripleKills\020k\0221\n-kKillEaterEventType_L" +
      "ich_ChainFrostMultiKills\020l\022.\n*kKillEater" +
      "EventType_Lich_ChainFrostBounces\020m\022)\n%kK" +
      "illEaterEventType_Ursa_EnragedKills\020n\022,\n" +
      "(kKillEaterEventType_Ursa_EarthshockKill" +
      "s\020o\022-\n)kKillEaterEventType_Lina_LagunaBl",
      "adeKills\020p\022-\n)kKillEaterEventType_Lina_D" +
      "ragonSlaveKills\020q\0222\n.kKillEaterEventType" +
      "_Lina_LightStrikeArrayStuns\020r\022&\n\"kKillEa" +
      "terEvent_Barracks_Destroyed\020s\022-\n)kKillEa" +
      "terEvent_TemplarAssassin_MeldKills\020t\0220\n," +
      "kKillEaterEvent_TemplarAssassin_HeroesSl" +
      "owed\020u\022-\n)kKillEaterEvent_Sniper_Assassi" +
      "nationKills\020v\022(\n$kKillEaterEvent_Sniper_" +
      "HeadshotStuns\020w\022*\n&kKillEaterEvent_Earth" +
      "Spirit_SmashStuns\020x\022,\n(kKillEaterEvent_E",
      "arthSpirit_GripSilences\020y\022-\n)kKillEaterE" +
      "vent_ShadowShaman_ShackleKills\020z\022)\n%kKil" +
      "lEaterEvent_ShadowShaman_HexKills\020{\022*\n&k" +
      "KillEaterEvent_Centaur_EnemiesStomped\020|\022" +
      "+\n\'kKillEaterEvent_Centaur_DoubleEdgeKil" +
      "ls\020}\022\'\n#kKillEaterEvent_Centaur_ReturnKi" +
      "lls\020~\022.\n*kKillEaterEvent_EmberSpirit_Ene" +
      "miesChained\020\177\0228\n3kKillEaterEvent_EmberSp" +
      "irit_SleightOfFistMultiKills\020\200\001\022\"\n\035kKill" +
      "EaterEvent_Puck_OrbKills\020\201\001\0222\n-kKillEate",
      "rEvent_VengefulSpirit_EnemiesStunned\020\202\001\022" +
      "*\n%kKillEaterEvent_Lifestealer_RageKills" +
      "\020\203\001\0220\n+kKillEaterEvent_Lifestealer_OpenW" +
      "oundsKills\020\204\001\022,\n\'kKillEaterEvent_Lifeste" +
      "aler_InfestKills\020\205\001\022+\n&kKillEaterEvent_E" +
      "lderTitan_SpiritKills\020\206\001\022*\n%kKillEaterEv" +
      "ent_ElderTitan_GoodStomps\020\207\001\022*\n%kKillEat" +
      "erEvent_Clockwerk_RocketKills\020\210\001\022/\n*kKil" +
      "lEaterEvent_Clockwerk_BlindRocketKills\020\211" +
      "\001\022*\n%kKillEaterEvent_StormSpirit_BallKil",
      "ls\020\212\001\0223\n.kKillEaterEvent_StormSpirit_Dou" +
      "bleRemnantKills\020\213\001\022,\n\'kKillEaterEvent_St" +
      "ormSpirit_VortexKills\020\214\001\022.\n)kKillEaterEv" +
      "ent_Tinker_DoubleMissileKills\020\215\001\022&\n!kKil" +
      "lEaterEvent_Tinker_LaserKills\020\216\001\022)\n$kKil" +
      "lEaterEvent_Techies_SuicideKills\020\217\001\022*\n%k" +
      "KillEaterEvent_Techies_LandMineKills\020\220\001\022" +
      ",\n\'kKillEaterEvent_Techies_StatisTrapStu" +
      "ns\020\221\001\022,\n\'kKillEaterEvent_Techies_RemoteM" +
      "ineKills\020\222\001\0220\n+kKillEaterEvent_ShadowFie",
      "nd_TripleRazeKills\020\223\001\0222\n-kKillEaterEvent" +
      "_ShadowFiend_RequiemMultiKills\020\224\001\022+\n&kKi" +
      "llEaterEvent_ShadowFiend_QRazeKills\020\225\001\022+" +
      "\n&kKillEaterEvent_ShadowFiend_WRazeKills" +
      "\020\226\001\022+\n&kKillEaterEvent_ShadowFiend_ERaze" +
      "Kills\020\227\001\022+\n&kKillEaterEvent_Oracle_Fates" +
      "EdictKills\020\230\001\022-\n(kKillEaterEvent_Oracle_" +
      "FalsePromiseSaves\020\231\001\022.\n)kKillEaterEvent_" +
      "Juggernaut_OmnislashKills\020\232\001\0227\n2kKillEat" +
      "erEventType_SkeletonKing_SkeletonHeroKil",
      "ls\020\235\001\022:\n5kKillEaterEventType_DarkWillow_" +
      "CursedCrownTripleStuns\020\236\001\0221\n,kKillEaterE" +
      "ventType_Dazzle_ShallowGraveSaves\020\237\001\0220\n+" +
      "kKillEaterEventType_Dazzle_PoisonTouchKi" +
      "lls\020\240\001\022%\n kKillEaterEventType_ThreeManMe" +
      "ks\020\241\001\0220\n+kKillEaterEventType_Viper_Poiso" +
      "nAttackKills\020\242\001\0221\n,kKillEaterEventType_V" +
      "iper_CorrosiveSkinKills\020\243\001\022\'\n\"kKillEater" +
      "EventType_ThreeHeroVeils\020\244\001\0225\n0kKillEate" +
      "rEventType_Viper_KillsDuringViperStrike\020",
      "\245\001\022(\n#kKillEaterEventType_SolarCrestKill" +
      "s\020\246\001\022,\n\'kKillEaterEventType_Tiny_TreeThr" +
      "owKills\020\247\001\022+\n&kKillEaterEventType_Riki_B" +
      "ackstabKills\020\250\001\0228\n3kKillEaterEventType_P" +
      "hoenix_ThreeHeroSupernovaStuns\020\251\001\0227\n2kKi" +
      "llEaterEventType_Terrorblade_Metamorphos" +
      "isKills\020\252\001\022.\n)kKillEaterEventType_Lion_G" +
      "reatFingerKills\020\253\001\022;\n6kKillEaterEventTyp" +
      "e_Antimage_SpellsBlockedWithAghanims\020\254\001\022" +
      "3\n.kKillEaterEventType_Antimage_ThreeMan",
      "ManaVoids\020\255\001\0225\n0kKillEaterEventType_ArcW" +
      "arden_TempestDoubleKills\020\256\001\0223\n.kKillEate" +
      "rEventType_ArcWarden_SparkWraithKills\020\257\001" +
      "\022+\n&kKillEaterEventType_Bane_BrainSapKil" +
      "ls\020\260\001\022-\n(kKillEaterEventType_Bane_Fiends" +
      "GripKills\020\261\001\0227\n2kKillEaterEventType_Batr" +
      "ider_TripleHeroFlamebreaks\020\262\001\0223\n.kKillEa" +
      "terEventType_Batrider_DoubleHeroLassoes\020" +
      "\263\001\022:\n5kKillEaterEventType_Brewmaster_Kil" +
      "lsDuringPrimalSplit\020\264\001\022>\n9kKillEaterEven",
      "tType_Bristleback_KillsUnderFourQuillSta" +
      "cks\020\265\001\0227\n2kKillEaterEventType_Bristlebac" +
      "k_TripleHeroNasalGoo\020\266\001\0228\n3kKillEaterEve" +
      "ntType_Broodmother_SpiderlingHeroKills\020\267" +
      "\001\0223\n.kKillEaterEventType_Broodmother_Kil" +
      "lsInsideWeb\020\270\001\0222\n-kKillEaterEventType_Ce" +
      "ntaur_ThreeHeroStampede\020\271\001\0225\n0kKillEater" +
      "EventType_ChaosKnight_RealityRiftKills\020\272" +
      "\001\0220\n+kKillEaterEventType_Chen_KillsWithP" +
      "enitence\020\273\001\022:\n5kKillEaterEventType_Cryst",
      "alMaiden_TwoHeroCrystalNovas\020\274\001\022>\n9kKill" +
      "EaterEventType_CrystalMaiden_ThreeHeroFr" +
      "eezingFields\020\275\001\022/\n*kKillEaterEventType_D" +
      "azzle_ShadowWaveKills\020\276\001\0221\n,kKillEaterEv" +
      "entType_DeathProphet_SiphonKills\020\277\001\022=\n8k" +
      "KillEaterEventType_DeathProphet_Exorcism" +
      "KillsDuringEuls\020\300\001\022C\n>kKillEaterEventTyp" +
      "e_Disruptor_ThreeHeroKineticFieldStaticS" +
      "torm\020\301\001\0224\n/kKillEaterEventType_Doom_Infe" +
      "rnalBladeBurnKills\020\302\001\022@\n;kKillEaterEvent",
      "Type_DrowRanger_PrecisionAuraCreepTowerK" +
      "ills\020\303\001\0221\n,kKillEaterEventType_EmberSpir" +
      "it_RemnantKills\020\304\001\0227\n2kKillEaterEventTyp" +
      "e_EmberSpirit_SleightOfFistKills\020\305\001\022<\n7k" +
      "KillEaterEventType_Enigma_MidnightPulseB" +
      "lackHoleCombos\020\306\001\0222\n-kKillEaterEventType" +
      "_Enigma_ThreeManBlackHoles\020\307\001\022;\n6kKillEa" +
      "terEventType_FacelessVoid_MultiHeroTimeD" +
      "ilation\020\310\001\0227\n2kKillEaterEventType_Gyroco" +
      "pter_ThreeHeroFlakCannon\020\311\001\0226\n1kKillEate",
      "rEventType_Gyrocopter_HomingMissileKills" +
      "\020\312\001\0226\n1kKillEaterEventType_Gyrocopter_Ro" +
      "cketBarrageKills\020\313\001\0224\n/kKillEaterEventTy" +
      "pe_Huskar_KillsDuringLifeBreak\020\314\001\0221\n,kKi" +
      "llEaterEventType_Huskar_BurningSpearKill" +
      "s\020\315\001\0221\n,kKillEaterEventType_Invoker_Mult" +
      "iHeroIceWall\020\316\001\022-\n(kKillEaterEventType_I" +
      "nvoker_ThreeHeroEMP\020\317\001\0228\n3kKillEaterEven" +
      "tType_Invoker_ThreeHeroDeafeningBlast\020\320\001" +
      "\0225\n0kKillEaterEventType_Invoker_MultiHer",
      "oChaosMeteor\020\321\001\0223\n.kKillEaterEventType_J" +
      "akiro_MultiHeroDualBreath\020\322\001\0226\n1kKillEat" +
      "erEventType_Jakiro_IcePathMacropyreCombo" +
      "s\020\323\001\022/\n*kKillEaterEventType_Leshrac_Puls" +
      "eNovaKills\020\324\001\0228\n3kKillEaterEventType_Les" +
      "hrac_ThreeHeroLightningStorm\020\325\001\0224\n/kKill" +
      "EaterEventType_Lion_ThreeHeroFingerOfDea" +
      "th\020\326\001\022(\n#kKillEaterEventType_Meepo_PoofK" +
      "ills\020\327\001\0222\n-kKillEaterEventType_Meepo_Mul" +
      "tiHeroEarthbinds\020\330\001\0224\n/kKillEaterEventTy",
      "pe_NightStalker_NighttimeKills\020\331\001\0227\n2kKi" +
      "llEaterEventType_Morphling_KillsDuringRe" +
      "plicate\020\332\001\0220\n+kKillEaterEventType_OgreMa" +
      "gi_FireblastKills\020\333\001\022-\n(kKillEaterEventT" +
      "ype_OgreMagi_IgniteKills\020\334\001\022.\n)kKillEate" +
      "rEventType_DominatingKillStreaks\020\335\001\022(\n#k" +
      "KillEaterEventType_MegaKillStreaks\020\336\001\0220\n" +
      "+kKillEaterEventType_Alchemist_AghanimsG" +
      "iven\020\337\001\022,\n\'kKillEaterEventType_VeilsLead" +
      "ingToKills\020\340\001\022+\n&kKillEaterEventType_Dus",
      "tLeadingToKills\020\341\001\0227\n2kKillEaterEventTyp" +
      "e_WitchDoctor_MultiHeroCaskStuns\020\342\001\022-\n(k" +
      "KillEaterEventType_Weaver_ShukuchiKills\020" +
      "\343\001\0229\n4kKillEaterEventType_Windrunner_Sha" +
      "ckleFocusFireKills\020\344\001\022B\n=kKillEaterEvent" +
      "Type_VengefulSpirit_VengeanceAuraIllusio" +
      "nKills\020\345\001\022.\n)kKillEaterEventType_Tusk_Wa" +
      "lrusPunchKills\020\346\001\0220\n+kKillEaterEventType" +
      "_Tinker_TripleHeroLasers\020\347\001\022;\n6kKillEate" +
      "rEventType_TemplarAssassin_MultiHeroPsiB",
      "lades\020\350\001\0225\n0kKillEaterEventType_Sven_Kil" +
      "lsDuringGodsStrength\020\351\001\0222\n-kKillEaterEve" +
      "ntType_Sniper_ThreeHeroShrapnels\020\352\001\0225\n0k" +
      "KillEaterEventType_Slark_KillsDuringShad" +
      "owDance\020\353\001\022:\n5kKillEaterEventType_Shadow" +
      "Shaman_MultiHeroEtherShocks\020\354\001\022=\n8kKillE" +
      "aterEventType_ShadowShaman_SerpentWardSh" +
      "ackleKills\020\355\001\0227\n2kKillEaterEventType_Rik" +
      "i_ThreeHeroTricksOfTheTrade\020\356\001\0221\n,kKillE" +
      "aterEventType_Razor_EyeOfTheStormKills\020\357",
      "\001\022-\n(kKillEaterEventType_Pugna_LifeDrain" +
      "Kills\020\360\001\022>\n9kKillEaterEventType_Obsidian" +
      "Destroyer_SanitysEclipseKills\020\361\001\0224\n/kKil" +
      "lEaterEventType_Oracle_MultiHeroFortunes" +
      "End\020\362\001\0225\n0kKillEaterEventType_Omniknight" +
      "_PurificationKills\020\363\001\022C\n>kKillEaterEvent" +
      "Type_NightStalker_EnemyMissesUnderCrippl" +
      "ingFear\020\364\001\0224\n/kKillEaterEventType_Warloc" +
      "k_ThreeHeroFatalBonds\020\365\001\0223\n.kKillEaterEv" +
      "entType_Riki_TricksOfTheTradeKills\020\366\001\0225\n",
      "0kKillEaterEventType_Earthshaker_Aftersh" +
      "ockHits10\020\367\001\0223\n.kKillEaterEventType_Eart" +
      "hshaker_5HeroEchoslams\020\370\001\0222\n-kKillEaterE" +
      "ventType_Lina_LagunaBladeHeroKills\020\371\001\0222\n" +
      "-kKillEaterEventType_Lina_LightStrikeHer" +
      "oStuns\020\372\001\0226\n1kKillEaterEventType_Earthsh" +
      "aker_FissureMultiStuns\020\373\001\022/\n*kKillEaterE" +
      "ventType_Earthshaker_TotemKills\020\374\001\0223\n.kK" +
      "illEaterEventType_Pangolier_SwashbuckleK" +
      "ills\020\375\001\0222\n-kKillEaterEventType_Furion_En",
      "emyHeroesTrapped\020\376\001\0224\n/kKillEaterEventTy" +
      "pe_Pangolier_HeartpiercerKills\020\377\001\0222\n-kKi" +
      "llEaterEventType_Medusa_MultiHeroStoneGa" +
      "ze\020\200\002\022.\n)kKillEaterEventType_Medusa_Spli" +
      "tShotKills\020\201\002\0222\n-kKillEaterEventType_Mir" +
      "ana_MultiHeroStarstorm\020\202\002\0228\n3kKillEaterE" +
      "ventType_Mirana_KillsFromMoonlightShadow" +
      "\020\203\002\0220\n+kKillEaterEventType_Magnus_MultiH" +
      "eroSkewers\020\204\002\0228\n3kKillEaterEventType_Mag" +
      "nus_MultiHeroReversePolarity\020\205\002\0229\n4kKill",
      "EaterEventType_Magnus_HeroesSlowedWithSh" +
      "ockwave\020\206\002\0220\n+kKillEaterEventType_NagaSi" +
      "ren_MultiHeroSong\020\207\002\0225\n0kKillEaterEventT" +
      "ype_NagaSiren_AlliesHealedBySong\020\210\002\0220\n+k" +
      "KillEaterEventType_LoneDruid_MultiHeroRo" +
      "ar\020\211\002\0221\n,kKillEaterEventType_LoneDruid_B" +
      "attleCryKills\020\212\002\0225\n0kKillEaterEventType_" +
      "WinterWyvern_ThreeHeroCurses\020\213\002\022?\n:kKill" +
      "EaterEventType_Antimage_SpellsBlockedWit" +
      "hCounterspell\020\214\002\0222\n-kKillEaterEventType_",
      "Mars_EnemiesKilledInArena\020\215\002\0221\n,kKillEat" +
      "erEventType_Mars_MultiHeroGodsRebuke\020\216\002\022" +
      "-\n(kKillEaterEventType_Mars_GodsRebukeKi" +
      "lls\020\217\002\0222\n-kKillEaterEventType_Snapfire_L" +
      "izardBlobsKills\020\220\002\0224\n/kKillEaterEventTyp" +
      "e_Snapfire_TwoHeroCookieStuns\020\221\002\022\026\n\021Cust" +
      "om_KillStreak\020\222\002*\301\001\n\033EMatchBehaviorScore" +
      "Variance\022)\n%k_EMatchBehaviorScoreVarianc" +
      "e_Invalid\020\000\022%\n!k_EMatchBehaviorScoreVari" +
      "ance_Low\020\001\022(\n$k_EMatchBehaviorScoreVaria",
      "nce_Medium\020\002\022&\n\"k_EMatchBehaviorScoreVar" +
      "iance_High\020\003B8\n%skadistats.clarity.wire." +
      "dota.s2.protoB\nS2DotaGcMMH\001\200\001\000"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_CLobbyTimedRewardDetails_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CLobbyTimedRewardDetails_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CLobbyTimedRewardDetails_descriptor,
        new java.lang.String[] { "ItemDefIndex", "IsSupplyCrate", "IsTimedDrop", "AccountId", "Origin", });
    internal_static_CMsgMatchMatchmakingStats_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgMatchMatchmakingStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgMatchMatchmakingStats_descriptor,
        new java.lang.String[] { "AverageQueueTime", "MaximumQueueTime", "BehaviorScoreVariance", });
    internal_static_CMvpData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CMvpData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMvpData_descriptor,
        new java.lang.String[] { "Mvps", });
    internal_static_CMvpData_MvpDatum_descriptor =
      internal_static_CMvpData_descriptor.getNestedTypes().get(0);
    internal_static_CMvpData_MvpDatum_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMvpData_MvpDatum_descriptor,
        new java.lang.String[] { "Slot", "Accolades", "AccountId", });
    internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor =
      internal_static_CMvpData_MvpDatum_descriptor.getNestedTypes().get(0);
    internal_static_CMvpData_MvpDatum_MvpAccolade_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMvpData_MvpDatum_MvpAccolade_descriptor,
        new java.lang.String[] { "Type", "DetailValue", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
